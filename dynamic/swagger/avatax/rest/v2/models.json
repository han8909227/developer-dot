{
  "AccountModel": {
    "description": "An AvaTax account.",
    "required": [
      "id",
      "name"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number assigned to this account.",
        "type": "integer",
        "readOnly": true,
        "example": 12345
      },
      "crmid": {
        "description": "For system registrar use only.",
        "maxLength": 100,
        "minLength": 0,
        "type": "string"
      },
      "name": {
        "description": "The name of this account.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Test Account"
      },
      "effectiveDate": {
        "format": "date-time",
        "description": "The earliest date on which this account may be used.",
        "type": "string",
        "example": "2018-01-24T00:00:00-08:00"
      },
      "endDate": {
        "format": "date-time",
        "description": "If this account has been closed, this is the last date the account was open.",
        "type": "string"
      },
      "accountStatusId": {
        "description": "The current status of this account.",
        "enum": [
          "Inactive",
          "Active",
          "Test",
          "New"
        ],
        "type": "string",
        "example": "Test",
        "x-enum-type": "AccountStatusId",
        "x-enum-description": "Status of an Avalara account",
        "x-enum-value-comments": {
          "Inactive": "This account is not currently active.",
          "Active": "This account is active and in use.",
          "Test": "This account is flagged as a test account and may be temporary.",
          "New": "The account is new and is currently in the onboarding process."
        }
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      },
      "subscriptions": {
        "description": "Optional: A list of subscriptions granted to this account.  To fetch this list, add the query string \"?$include=Subscriptions\" to your URL.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/SubscriptionModel"
        }
      },
      "users": {
        "description": "Optional: A list of all the users belonging to this account.  To fetch this list, add the query string \"?$include=Users\" to your URL.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/UserModel"
        }
      }
    },
    "example": {
      "id": 12345,
      "name": "Test Account",
      "effectiveDate": "2018-01-24T00:00:00-08:00",
      "accountStatusId": "Test"
    },
    "x-methods-used-in": [
      "Accounts/ActivateAccount",
      "Registrar/CreateAccount",
      "Accounts/GetAccount",
      "Registrar/UpdateAccount"
    ]
  },
  "SubscriptionModel": {
    "description": "Represents a service that this account has subscribed to.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this subscription.",
        "type": "integer",
        "readOnly": true,
        "example": 12345
      },
      "accountId": {
        "format": "int32",
        "description": "The unique ID number of the account this subscription belongs to.",
        "type": "integer",
        "readOnly": true,
        "example": 123456789
      },
      "subscriptionTypeId": {
        "format": "int32",
        "description": "The unique ID number of the service that the account is subscribed to. If this is provided, subscription description is ignored.",
        "type": "integer",
        "example": 2
      },
      "subscriptionDescription": {
        "description": "A friendly description of the service that the account is subscribed to. You can either provide the subscription type Id or this but not both. If \r\nsubscription type Id is provided, then this information is ignored and this field will be updated with the information from subscription type id.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "AvaTaxPro"
      },
      "effectiveDate": {
        "format": "date-time",
        "description": "The date when the subscription began.",
        "type": "string",
        "example": "2015-01-01T00:00:00",
        "x-date-type": "date-only"
      },
      "endDate": {
        "format": "date-time",
        "description": "If the subscription has ended or will end, this date indicates when the subscription ends.",
        "type": "string",
        "x-date-type": "date-only"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      }
    },
    "example": {
      "id": 12345,
      "accountId": 123456789,
      "subscriptionTypeId": 2,
      "subscriptionDescription": "AvaTaxPro",
      "effectiveDate": "2015-01-01"
    },
    "x-methods-used-in": [
      "Subscriptions/GetSubscription",
      "Registrar/UpdateSubscription",
      "Registrar/CreateSubscriptions",
      "Utilities/GetMySubscription"
    ]
  },
  "UserModel": {
    "description": "An account user who is permitted to use AvaTax.",
    "required": [
      "id",
      "accountId",
      "userName",
      "firstName",
      "lastName",
      "email",
      "securityRoleId"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this user.",
        "type": "integer",
        "readOnly": true,
        "example": 12345
      },
      "accountId": {
        "format": "int32",
        "description": "The unique ID number of the account to which this user belongs.",
        "type": "integer",
        "readOnly": true,
        "example": 123456789
      },
      "companyId": {
        "format": "int32",
        "description": "If this user is locked to one company (and its children), this is the unique ID number of the company to which this user belongs.",
        "type": "integer",
        "example": 123456
      },
      "userName": {
        "description": "The username which is used to log on to the AvaTax website, or to authenticate against API calls.",
        "maxLength": 50,
        "minLength": 5,
        "type": "string",
        "readOnly": true,
        "example": "bobExample"
      },
      "firstName": {
        "description": "The first or given name of the user.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Bob"
      },
      "lastName": {
        "description": "The last or family name of the user.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Example"
      },
      "email": {
        "description": "The email address to be used to contact this user.  If the user has forgotten a password, an email can be sent to this email address with information on how to reset this password.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "bob@example.org"
      },
      "postalCode": {
        "description": "The postal code in which this user resides.",
        "maxLength": 10,
        "minLength": 0,
        "type": "string",
        "example": "98110"
      },
      "securityRoleId": {
        "description": "The security level for this user.",
        "enum": [
          "NoAccess",
          "SiteAdmin",
          "AccountOperator",
          "AccountAdmin",
          "AccountUser",
          "SystemAdmin",
          "Registrar",
          "CSPTester",
          "CSPAdmin",
          "SystemOperator",
          "TechnicalSupportUser",
          "TechnicalSupportAdmin",
          "TreasuryUser",
          "TreasuryAdmin",
          "ComplianceUser",
          "ComplianceAdmin",
          "ProStoresOperator",
          "CompanyUser",
          "CompanyAdmin",
          "ComplianceTempUser",
          "ComplianceRootUser",
          "ComplianceOperator",
          "SSTAdmin"
        ],
        "type": "string",
        "example": "AccountUser",
        "x-enum-type": "SecurityRoleId",
        "x-enum-description": "Permission level of a user",
        "x-enum-value-comments": {
          "NoAccess": "NoAccess",
          "SiteAdmin": "SiteAdmin",
          "AccountOperator": "AccountOperator",
          "AccountAdmin": "AccountAdmin",
          "AccountUser": "AccountUser",
          "SystemAdmin": "SystemAdmin",
          "Registrar": "Registrar",
          "CSPTester": "CSPTester",
          "CSPAdmin": "CSPAdmin",
          "SystemOperator": "SystemOperator",
          "TechnicalSupportUser": "TechnicalSupportUser",
          "TechnicalSupportAdmin": "TechnicalSupportAdmin",
          "TreasuryUser": "TreasuryUser",
          "TreasuryAdmin": "TreasuryAdmin",
          "ComplianceUser": "ComplianceUser",
          "ComplianceAdmin": "ComplianceAdmin",
          "ProStoresOperator": "ProStoresOperator",
          "CompanyUser": "CompanyUser",
          "CompanyAdmin": "CompanyAdmin",
          "ComplianceTempUser": "ComplianceTempUser",
          "ComplianceRootUser": "ComplianceRootUser",
          "ComplianceOperator": "ComplianceOperator",
          "SSTAdmin": "SSTAdmin"
        }
      },
      "passwordStatus": {
        "description": "The status of the user's password.",
        "enum": [
          "UserCannotChange",
          "UserCanChange",
          "UserMustChange"
        ],
        "type": "string",
        "example": "UserCanChange",
        "x-enum-type": "PasswordStatusId",
        "x-enum-description": "PasswordStatusId",
        "x-enum-value-comments": {
          "UserCannotChange": "UserCannotChange",
          "UserCanChange": "UserCanChange",
          "UserMustChange": "UserMustChange"
        }
      },
      "isActive": {
        "description": "True if this user is currently active.",
        "type": "boolean",
        "example": true
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      }
    },
    "example": {
      "id": 12345,
      "accountId": 123456789,
      "companyId": 123456,
      "userName": "bobExample",
      "firstName": "Bob",
      "lastName": "Example",
      "email": "bob@example.org",
      "postalCode": "98110",
      "securityRoleId": "AccountUser",
      "passwordStatus": "UserCanChange",
      "isActive": true
    },
    "x-methods-used-in": [
      "Users/GetUser",
      "Users/UpdateUser",
      "Users/CreateUsers"
    ]
  },
  "ErrorDetail": {
    "description": "Message object",
    "type": "object",
    "properties": {
      "code": {
        "description": "Name of the error or message.",
        "enum": [
          "ServerConfiguration",
          "AccountInvalidException",
          "CompanyInvalidException",
          "EntityNotFoundError",
          "ValueRequiredError",
          "RangeError",
          "RangeCompareError",
          "RangeSetError",
          "TaxpayerNumberRequired",
          "CommonPassword",
          "WeakPassword",
          "StringLengthError",
          "MaxStringLengthError",
          "EmailValidationError",
          "EmailMissingError",
          "ParserFieldNameError",
          "ParserFieldValueError",
          "ParserSyntaxError",
          "ParserTooManyParametersError",
          "ParserUnterminatedValueError",
          "DeleteUserSelfError",
          "OldPasswordInvalid",
          "CannotChangePassword",
          "CannotChangeCompanyCode",
          "DateFormatError",
          "NoDefaultCompany",
          "AuthenticationException",
          "AuthorizationException",
          "ValidationException",
          "InactiveUserError",
          "AuthenticationIncomplete",
          "BasicAuthIncorrect",
          "IdentityServerError",
          "BearerTokenInvalid",
          "ModelRequiredException",
          "AccountExpiredException",
          "VisibilityError",
          "BearerTokenNotSupported",
          "InvalidSecurityRole",
          "InvalidRegistrarAction",
          "RemoteServerError",
          "NoFilterCriteriaException",
          "OpenClauseException",
          "JsonFormatError",
          "UnhandledException",
          "ReportingCompanyMustHaveContactsError",
          "CompanyProfileNotSet",
          "CannotAssignUserToCompany",
          "MustAssignUserToCompany",
          "ModelStateInvalid",
          "DateRangeError",
          "InvalidDateRangeError",
          "DeleteInformation",
          "CannotCreateDeletedObjects",
          "CannotModifyDeletedObjects",
          "ReturnNameNotFound",
          "InvalidAddressTypeAndCategory",
          "DefaultCompanyLocation",
          "InvalidCountry",
          "InvalidCountryRegion",
          "BrazilValidationError",
          "BrazilExemptValidationError",
          "BrazilPisCofinsError",
          "JurisdictionNotFoundError",
          "MedicalExciseError",
          "RateDependsTaxabilityError",
          "RateDependsEuropeError",
          "InvalidRateTypeCode",
          "RateTypeNotSupported",
          "CannotUpdateNestedObjects",
          "UPCCodeInvalidChars",
          "UPCCodeInvalidLength",
          "IncorrectPathError",
          "InvalidJurisdictionType",
          "MustConfirmResetLicenseKey",
          "DuplicateCompanyCode",
          "TINFormatError",
          "DuplicateNexusError",
          "UnknownNexusError",
          "ParentNexusNotFound",
          "InvalidTaxCodeType",
          "CannotActivateCompany",
          "DuplicateEntityProperty",
          "ReportingEntityError",
          "InvalidReturnOperationError",
          "CannotDeleteCompany",
          "CountryOverridesNotAvailable",
          "JurisdictionOverrideMismatch",
          "DuplicateSystemTaxCode",
          "SSTOverridesNotAvailable",
          "NexusDateMismatch",
          "TechSupportAuditRequired",
          "NexusParentDateMismatch",
          "BearerTokenParseUserIdError",
          "RetrieveUserError",
          "InvalidConfigurationSetting",
          "InvalidConfigurationValue",
          "InvalidEnumValue",
          "TaxCodeAssociatedTaxRule",
          "CannotSwitchAccountId",
          "RequestIncomplete",
          "AccountNotNew",
          "PasswordLengthInvalid",
          "LocalNexusConflict",
          "InvalidEcmsOverrideCode",
          "AccountDoesNotExist",
          "InvalidTaxType",
          "IncorrectFieldValue",
          "LeadingOrTrailingException",
          "NotEnoughAddressesInfo",
          "ReportNotInitiated",
          "FailedToBuildReport",
          "ReportNotFinished",
          "FailedToUploadReport",
          "FailedToDownloadReport",
          "MalformedFilterException",
          "ExpectedConjunctionError",
          "CriteriaNotSupportedError",
          "CompanyAccountAndParentAccountMismatch",
          "InvalidFileContentType",
          "InvalidItemAttributeName",
          "EcmsDisabled",
          "UnknownConjunctionError",
          "NoLinesDiscounted",
          "FailedToDelete",
          "BatchSalesAuditMustBeZippedError",
          "BatchZipMustContainOneFileError",
          "BatchInvalidFileTypeError",
          "BatchCannotSaveBatchFile",
          "BatchCannotGetBatchFile",
          "BatchCannotDeleteBatchFile",
          "BatchMustContainOneFile",
          "MissingBatchFileContent",
          "PointOfSaleFileSize",
          "PointOfSaleSetup",
          "InvalidInputDate",
          "RequestedFileNotExist",
          "GetTaxError",
          "AddressConflictException",
          "DocumentCodeConflict",
          "MissingAddress",
          "InvalidParameter",
          "InvalidParameterValue",
          "CompanyCodeConflict",
          "DocumentFetchLimit",
          "AddressIncomplete",
          "AddressLocationNotFound",
          "MissingLine",
          "InvalidAddressTextCase",
          "DocumentNotCommitted",
          "MultiDocumentTypesError",
          "InvalidDocumentTypesToFetch",
          "TimeoutRequested",
          "InvalidAddress",
          "InvalidPostalCode",
          "BadDocumentFetch",
          "CannotChangeFilingStatus",
          "ServerUnreachable",
          "SubscriptionRequired",
          "AccountExists",
          "InvitationOnly",
          "FreeTrialNotAvailable",
          "AccountExistsDifferentEmail",
          "AvalaraIdentityApiError",
          "InvalidIPAddress",
          "InvalidDocumentStatusForRefund",
          "RefundTypeAndPercentageMismatch",
          "InvalidDocumentTypeForRefund",
          "RefundTypeAndLineMismatch",
          "RefundLinesRequired",
          "InvalidRefundType",
          "RefundPercentageForTaxOnly",
          "LineNoOutOfRange",
          "RefundPercentageOutOfRange",
          "RefundPercentageMissing",
          "TaxRateNotAvailableForFreeInThisCountry",
          "FilingCalendarCannotBeDeleted",
          "InvalidEffectiveDate",
          "NonOutletForm",
          "OverlappingFilingCalendar",
          "QuestionNotNeededForThisAddress",
          "QuestionNotValidForThisAddress",
          "CannotModifyLockedTransaction",
          "LineAlreadyExists",
          "LineDoesNotExist",
          "LinesNotSpecified",
          "InvalidBusinessType",
          "CannotModifyExemptCert",
          "CertCaptureFieldValidationError",
          "CertCaptureError",
          "MissingRequiredFields",
          "CertCaptureNotConfiguredError",
          "AddRelationshipsError",
          "MissingExposureZone",
          "ConflictingExposureZone",
          "MissingFieldToCreateExposureZone",
          "MissingExemptReason",
          "InvalidExemptReason",
          "InvalidCertCaptureOperation",
          "ConflictingFields",
          "InvalidPdfOrImageFile",
          "InvalidCoverLetterTitle",
          "AccountNotProvisioned",
          "TransactionNotCancelled",
          "TooManyTransactions",
          "OnlyTaxDateOverrideIsAllowed",
          "TransactionAlreadyExists",
          "DateMismatch",
          "InvalidDocumentStatusForVerify",
          "TotalAmountMismatch",
          "TotalTaxMismatch",
          "InvalidDocumentStatusForCommit",
          "InvalidDocumentType",
          "MultiDocumentPartiallyLocked",
          "TransactionIsCommitted",
          "CommsConfigClientIdMissing",
          "CommsConfigClientIdBadValue",
          "BizTechCustomerAccountFailure",
          "BizTechOpportunityCreationFailure",
          "AccountInNewStatusException",
          "WorksheetException",
          "MissingSystemId"
        ],
        "type": "string",
        "example": "DeleteInformation",
        "x-enum-type": "ErrorCodeId",
        "x-enum-description": "Represents a error code message",
        "x-enum-value-comments": {
          "ServerConfiguration": "Server has a configuration or setup problem",
          "AccountInvalidException": "User doesn't have rights to this account or company",
          "EntityNotFoundError": "Use this error message when the user is trying to fetch a single object and the object either does not exist or cannot be seen by the current user.",
          "BatchSalesAuditMustBeZippedError": "Batch errors",
          "PointOfSaleFileSize": "Point Of Sale API exceptions",
          "GetTaxError": "Errors in Soap V1 Passthrough / GetTax calls",
          "BadDocumentFetch": "Represents a malformed document fetch command",
          "ServerUnreachable": "Represents a SQL server timeout error / deadlock error",
          "SubscriptionRequired": "Partner API error codes",
          "InvalidDocumentStatusForRefund": "Refund API error codes",
          "TaxRateNotAvailableForFreeInThisCountry": "Free API error codes",
          "FilingCalendarCannotBeDeleted": "Filing Calendar Error Codes",
          "QuestionNotNeededForThisAddress": "Location error codes",
          "CannotModifyLockedTransaction": "Create or update transaction error codes",
          "InvalidBusinessType": "Exempt cert error codes",
          "TransactionNotCancelled": "Multi document error codes",
          "CommsConfigClientIdMissing": "Communications Tax error codes",
          "BizTechCustomerAccountFailure": "BizTech API error codes",
          "AccountInNewStatusException": "Account Activate error codes",
          "WorksheetException": "Worksheet Exception",
          "MissingSystemId": "LandedCost Exception"
        }
      },
      "number": {
        "format": "int32",
        "description": "Unique ID number referring to this error or message.",
        "type": "integer",
        "example": 142
      },
      "message": {
        "description": "Concise summary of the message, suitable for display in the caption of an alert box.",
        "type": "string",
        "example": "The entity was marked as deleted."
      },
      "description": {
        "description": "A more detailed description of the problem referenced by this error message, suitable for display in the contents area of an alert box.",
        "type": "string",
        "example": "Object successfully marked as deleted."
      },
      "faultCode": {
        "description": "Indicates the SOAP Fault code, if this was related to an error that corresponded to AvaTax SOAP v1 behavior.",
        "type": "string",
        "example": "Client"
      },
      "helpLink": {
        "description": "URL to help for this message",
        "type": "string",
        "readOnly": true,
        "example": "http://developer.avalara.com/avatax/errors/DeleteInformation"
      },
      "refersTo": {
        "description": "Item the message refers to, if applicable.  This is used to indicate a missing or incorrect value.",
        "type": "string"
      },
      "severity": {
        "description": "Severity of the message",
        "enum": [
          "Success",
          "Warning",
          "Error",
          "Exception"
        ],
        "type": "string",
        "example": "Success",
        "x-enum-type": "SeverityLevel",
        "x-enum-description": "Severity of message",
        "x-enum-value-comments": {
          "Success": "Operation succeeded",
          "Warning": "Warnings occured, operation succeeded",
          "Error": "Errors occured, operation failed",
          "Exception": "Unexpected exceptions occurred, operation failed"
        }
      }
    },
    "example": {
      "code": "DeleteInformation",
      "number": 142,
      "message": "The entity was marked as deleted.",
      "description": "Object successfully marked as deleted.",
      "faultCode": "Client",
      "helpLink": "http://developer.avalara.com/avatax/errors/DeleteInformation",
      "severity": "Success"
    },
    "x-methods-used-in": [
      "Batches/DeleteBatch",
      "Companies/DeleteCompany",
      "Contacts/DeleteContact",
      "DistanceThresholds/DeleteDistanceThreshold",
      "FilingCalendars/DeleteFilingCalendar",
      "Filings/DeleteReturnAdjustment",
      "Filings/DeleteReturnAugmentation",
      "Filings/DeleteReturnPayment",
      "Items/DeleteItem",
      "JurisdictionOverrides/DeleteJurisdictionOverride",
      "Locations/DeleteLocation",
      "Nexus/DeleteNexus",
      "Notices/DeleteNotice",
      "Notices/DeleteResponsibilities",
      "Notices/DeleteRootCauses",
      "Registrar/DeleteSubscription",
      "Registrar/DeleteUser",
      "Registrar/DeleteAccount",
      "Settings/DeleteSetting",
      "TaxCodes/DeleteTaxCode",
      "TaxRules/DeleteTaxRule",
      "Upcs/DeleteUPC"
    ]
  },
  "FetchResult[AccountModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/AccountModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Registrar/QueryAccounts"
    ]
  },
  "NewAccountRequestModel": {
    "description": "Represents a request for a new account with Avalara for a new subscriber.\r\nContains information about the account requested and the rate plan selected.",
    "required": [
      "offer",
      "accountName",
      "firstName",
      "lastName",
      "email",
      "companyAddress"
    ],
    "type": "object",
    "properties": {
      "offer": {
        "description": "The offer code provided to you by your Avalara business development contact.  \r\n\r\nThis code controls what services and rates the customer will be provisioned with upon creation.\r\n\r\nIf you do not know your offer code, please contact your Avalara business development representative.",
        "type": "string",
        "example": "DeveloperDotAvalaraFreeTrial"
      },
      "campaign": {
        "description": "If your Avalara business development representative requests, please provide the campaign ID associated with your\r\nsignup process.  This campaign identifier helps Avalara match users to the context in which they learned about the product\r\nto help improve the accuracy of our messaging.\r\n            \r\nThe `campaign` field must be either null or a value provided to you by an Avalara business development representative.\r\nIf you provide an unexpected value in this field, your API call will fail.",
        "type": "string",
        "example": "70140000000TsVb"
      },
      "leadSource": {
        "description": "If your Avalara business development representative requests, please provide the lead source value associated with your\r\nsignup process.  This lead source identifier helps Avalara match users to the context in which they learned about the product\r\nto help improve the accuracy of our messaging.\r\n            \r\nThe `leadSource` field must be either null or a value provided to you by an Avalara business development representative.\r\nIf you provide an unexpected value in this field, your API call will fail.",
        "type": "string",
        "example": "Direct Visitor"
      },
      "effectiveDate": {
        "format": "date-time",
        "description": "The date on which the account should take effect.  If null, defaults to today.\r\n\r\nYou should leave this value `null` unless specifically requested by your Avalara business development manager.",
        "type": "string"
      },
      "endDate": {
        "format": "date-time",
        "description": "The date on which the account should expire.\r\n\r\nYou should leave this value `null` unless specifically requested by your Avalara business development manager.",
        "type": "string"
      },
      "accountName": {
        "description": "The name of the account to create",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "BizTech Company Inc."
      },
      "website": {
        "description": "Website of the new customer whose account is being created.  \r\n\r\nIt is strongly recommended to provide the customer's website URL, as this will help our support representatives better\r\nassist customers.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "https://biztech.com"
      },
      "paymentMethodId": {
        "description": "Payment Method to be associated with the account.\r\n\r\nThis is strictly to be used internally unless your Avalara business development manager specifically asks you to provide this value\r\nwhile attempting to create an account.",
        "type": "string",
        "example": "701abc-def"
      },
      "firstName": {
        "description": "First name of the primary contact person for this account",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Bob"
      },
      "lastName": {
        "description": "Last name of the primary contact person for this account",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Example"
      },
      "title": {
        "description": "Title of the primary contact person for this account",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "phoneNumber": {
        "description": "Phone number of the primary contact person for this account",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "email": {
        "description": "Email of the primary contact person for this account",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "bob@example.org"
      },
      "userPassword": {
        "description": "If instructed by your Avalara business development manager, set this value to a temporary password to permit the user to continue their onboarding process.\r\n\r\nIf this value is null, a temporary password is generated by the system and emailed to the user. \r\n\r\nThe user will then be asked to choose a permanent password when they first log on to the AvaTax website.",
        "type": "string"
      },
      "welcomeEmail": {
        "description": "This option controls what type of a welcome email is sent when the account is created.\r\n\r\n* `Normal` - A standard welcome email will be sent.\r\n* `Suppressed` - No email will be sent.\r\n* `Custom` - If your Avalara business development representative provides you with a customized welcome email for your customers, please select this option.",
        "enum": [
          "Normal",
          "Suppressed",
          "Custom"
        ],
        "type": "string",
        "example": "Normal",
        "x-enum-type": "WelcomeEmail",
        "x-enum-description": "Represents the type of welcome email for the users",
        "x-enum-value-comments": {
          "Normal": "Normal",
          "Suppressed": "Suppressed",
          "Custom": "Custom"
        }
      },
      "companyAddress": {
        "$ref": "#/definitions/CompanyAddress",
        "description": "Address information of the account being created.",
        "example": {
          "line": "100 Ravine Ln",
          "region": "WA",
          "country": "US",
          "postalCode": "98010"
        }
      },
      "companyCode": {
        "description": "Company code to be assigned to the company created for this account.\r\n\r\nIf no company code is provided, this will be defaulted to \"DEFAULT\" company code.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "properties": {
        "description": "Properties of the primary contact person for this account",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "acceptAvalaraTermsAndConditions": {
        "description": "Set this to true if and only if the owner of the newly created account accepts Avalara's terms and conditions for your account.\r\n\r\nReading and accepting Avalara's terms and conditions is necessary in order for the account to receive a license key.",
        "type": "boolean",
        "example": true
      },
      "haveReadAvalaraTermsAndConditions": {
        "description": "Set this to true if and only if the owner of the newly created account has fully read Avalara's terms and conditions for your account.\r\n\r\nReading and accepting Avalara's terms and conditions is necessary in order for the account to receive a license key.",
        "type": "boolean",
        "example": true
      }
    },
    "example": {
      "offer": "DeveloperDotAvalaraFreeTrial",
      "campaign": "70140000000TsVb",
      "leadSource": "Direct Visitor",
      "accountName": "BizTech Company Inc.",
      "website": "https://biztech.com",
      "paymentMethodId": "701abc-def",
      "firstName": "Bob",
      "lastName": "Example",
      "email": "bob@example.org",
      "welcomeEmail": "Normal",
      "companyAddress": {
        "line": "100 Ravine Ln",
        "region": "WA",
        "country": "US",
        "postalCode": "98010"
      },
      "acceptAvalaraTermsAndConditions": true,
      "haveReadAvalaraTermsAndConditions": true
    },
    "x-methods-used-in": [
      "Onboarding/RequestNewAccount"
    ]
  },
  "CompanyAddress": {
    "description": "Company Address Information",
    "required": [
      "line",
      "region",
      "country",
      "postalCode"
    ],
    "type": "object",
    "properties": {
      "line": {
        "description": "Address Line1",
        "maxLength": 100,
        "minLength": 0,
        "type": "string",
        "example": "2000 Main Street"
      },
      "city": {
        "description": "City",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Irvine"
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region within the country.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string",
        "example": "CA"
      },
      "country": {
        "description": "Name or ISO 3166 code identifying the country.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string",
        "example": "US"
      },
      "postalCode": {
        "description": "Postal Code",
        "maxLength": 10,
        "minLength": 0,
        "type": "string",
        "example": "92614"
      }
    },
    "example": {
      "line": "2000 Main Street",
      "city": "Irvine",
      "region": "CA",
      "country": "US",
      "postalCode": "92614"
    },
    "x-methods-used-in": []
  },
  "NewAccountModel": {
    "description": "Represents information about a newly created account",
    "type": "object",
    "properties": {
      "accountId": {
        "format": "int32",
        "description": "This is the ID number of the account that was created",
        "type": "integer",
        "example": 123456789
      },
      "accountDetailsEmailedTo": {
        "description": "This is the email address to which credentials were mailed",
        "type": "string",
        "example": "bob@example.org"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date and time when this account was created",
        "type": "string",
        "example": "0001-01-01T00:00:00"
      },
      "emailedDate": {
        "format": "date-time",
        "description": "The date and time when account information was emailed to the user",
        "type": "string",
        "example": "0001-01-01T00:00:00"
      },
      "limitations": {
        "description": "If this account includes any limitations, specify them here",
        "type": "string"
      },
      "licenseKey": {
        "description": "The license key of the account that was created",
        "type": "string"
      },
      "paymentUrl": {
        "description": "The payment url where the payment method can be set up",
        "type": "string"
      }
    },
    "example": {
      "accountId": 123456789,
      "accountDetailsEmailedTo": "bob@example.org",
      "createdDate": "0001-01-01T00:00:00",
      "emailedDate": "0001-01-01T00:00:00"
    },
    "x-methods-used-in": [
      "Free/RequestFreeTrial",
      "Onboarding/RequestNewAccount"
    ]
  },
  "FreeTrialRequestModel": {
    "description": "Represents a request for a free trial account for AvaTax.\r\nFree trial accounts are only available on the Sandbox environment.",
    "required": [
      "firstName",
      "lastName",
      "email",
      "company",
      "phone",
      "companyAddress"
    ],
    "type": "object",
    "properties": {
      "firstName": {
        "description": "The first or given name of the user requesting a free trial.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Bob"
      },
      "lastName": {
        "description": "The last or family name of the user requesting a free trial.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "McExample"
      },
      "email": {
        "description": "The email address of the user requesting a free trial.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "bob@example.org"
      },
      "company": {
        "description": "The company or organizational name for this free trial.  If this account is for personal use, it is acceptable \r\nto use your full name here.",
        "type": "string",
        "example": "Bob's Artisan Pottery"
      },
      "phone": {
        "description": "The phone number of the person requesting the free trial.",
        "type": "string",
        "example": "+1 (714) 555-1212"
      },
      "campaign": {
        "description": "Campaign identifier for Notification purpose",
        "type": "string",
        "example": "70140000000TsVb"
      },
      "companyAddress": {
        "$ref": "#/definitions/CompanyAddress",
        "description": "The Address information of the account",
        "example": {
          "line": "100 Ravine Ln",
          "region": "WA",
          "country": "US",
          "postalCode": "98010"
        }
      },
      "website": {
        "description": "Website of the company or user requesting a free trial",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "www.bobartisanpottery.com"
      }
    },
    "example": {
      "firstName": "Bob",
      "lastName": "McExample",
      "email": "bob@example.org",
      "company": "Bob's Artisan Pottery",
      "phone": "+1 (714) 555-1212",
      "campaign": "70140000000TsVb",
      "companyAddress": {
        "line": "100 Ravine Ln",
        "region": "WA",
        "country": "US",
        "postalCode": "98010"
      },
      "website": "www.bobartisanpottery.com"
    },
    "x-methods-used-in": [
      "Free/RequestFreeTrial"
    ]
  },
  "ResetLicenseKeyModel": {
    "description": "Represents a license key reset request.",
    "required": [
      "accountId",
      "confirmResetLicenseKey"
    ],
    "type": "object",
    "properties": {
      "accountId": {
        "format": "int32",
        "description": "The primary key of the account ID to reset",
        "type": "integer",
        "example": 123456789
      },
      "confirmResetLicenseKey": {
        "description": "Set this value to true to reset the license key for this account.\r\nThis license key reset function will only work when called using the credentials of the account administrator of this account.",
        "type": "boolean",
        "example": true
      }
    },
    "example": {
      "accountId": 123456789,
      "confirmResetLicenseKey": true
    },
    "x-methods-used-in": [
      "Accounts/AccountResetLicenseKey"
    ]
  },
  "LicenseKeyModel": {
    "description": "Represents a license key for this account.",
    "type": "object",
    "properties": {
      "accountId": {
        "format": "int32",
        "description": "The primary key of the account",
        "type": "integer",
        "example": 123456789
      },
      "privateLicenseKey": {
        "description": "This is your private license key.  You must record this license key for safekeeping.\r\nIf you lose this key, you must contact the ResetLicenseKey API in order to request a new one.\r\nEach account can only have one license key at a time.",
        "type": "string",
        "example": "742A02AA463CDE741E932EC365360CA3CF378BD9"
      },
      "httpRequestHeader": {
        "description": "If your software allows you to specify the HTTP Authorization header directly, this is the header string you \r\nshould use when contacting Avalara to make API calls with this license key.",
        "type": "string",
        "example": "Basic MTIzNDU2Nzg5Ojc0MkEwMkFBNDYzQ0RFNzQxRTkzMkVDMzY1MzYwQ0EzQ0YzNzhCRDk="
      }
    },
    "example": {
      "accountId": 123456789,
      "privateLicenseKey": "742A02AA463CDE741E932EC365360CA3CF378BD9",
      "httpRequestHeader": "Basic MTIzNDU2Nzg5Ojc0MkEwMkFBNDYzQ0RFNzQxRTkzMkVDMzY1MzYwQ0EzQ0YzNzhCRDk="
    },
    "x-methods-used-in": [
      "Accounts/AccountResetLicenseKey"
    ]
  },
  "ActivateAccountModel": {
    "description": "Represents a request to activate an account by reading and accepting its terms and conditions.",
    "type": "object",
    "properties": {
      "acceptAvalaraTermsAndConditions": {
        "description": "Set this to true if and only if you accept Avalara's terms and conditions for your account.",
        "type": "boolean",
        "example": true
      },
      "haveReadAvalaraTermsAndConditions": {
        "description": "Set this to true if and only if you have fully read Avalara's terms and conditions for your account.",
        "type": "boolean",
        "example": true
      }
    },
    "example": {
      "acceptAvalaraTermsAndConditions": true,
      "haveReadAvalaraTermsAndConditions": true
    },
    "x-methods-used-in": [
      "Accounts/ActivateAccount"
    ]
  },
  "AccountConfigurationModel": {
    "description": "Represents one configuration setting for this account",
    "required": [
      "category",
      "name"
    ],
    "type": "object",
    "properties": {
      "accountId": {
        "format": "int32",
        "description": "The unique ID number of the account to which this setting applies",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "category": {
        "description": "The category of the configuration setting.  Avalara-defined categories include `AddressServiceConfig` and `TaxServiceConfig`.  Customer-defined categories begin with `X-`.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "TaxServiceConfig"
      },
      "name": {
        "description": "The name of the configuration setting",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "MaxLines"
      },
      "value": {
        "description": "The current value of the configuration setting",
        "maxLength": 200,
        "minLength": 0,
        "type": "string",
        "example": "1000"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      }
    },
    "example": {
      "accountId": 0,
      "category": "TaxServiceConfig",
      "name": "MaxLines",
      "value": "1000"
    },
    "x-methods-used-in": [
      "Accounts/GetAccountConfiguration",
      "Accounts/SetAccountConfiguration"
    ]
  },
  "AddressValidationInfo": {
    "description": "TextCase info for input address",
    "type": "object",
    "properties": {
      "textCase": {
        "description": "Specify the text case for the validated address result.  If not specified, will return uppercase.",
        "enum": [
          "Upper",
          "Mixed"
        ],
        "type": "string",
        "example": "Upper",
        "x-enum-type": "TextCase",
        "x-enum-description": "Casing to use for validation result",
        "x-enum-value-comments": {
          "Upper": "Upper case",
          "Mixed": "Mixed Case"
        }
      },
      "line1": {
        "description": "First line of the street address",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "2000 Main Street"
      },
      "line2": {
        "description": "Second line of the street address",
        "maxLength": 100,
        "minLength": 0,
        "type": "string"
      },
      "line3": {
        "description": "Third line of the street address",
        "maxLength": 100,
        "minLength": 0,
        "type": "string"
      },
      "city": {
        "description": "City component of the address",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Irvine"
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region within the country.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string",
        "example": "CA"
      },
      "country": {
        "description": "Name or ISO 3166 code identifying the country.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string",
        "example": "US"
      },
      "postalCode": {
        "description": "Postal Code / Zip Code component of the address.",
        "maxLength": 11,
        "minLength": 0,
        "type": "string",
        "example": "92614"
      },
      "latitude": {
        "format": "double",
        "description": "Geospatial latitude measurement, in Decimal Degrees floating point format.",
        "type": "number"
      },
      "longitude": {
        "format": "double",
        "description": "Geospatial longitude measurement, in Decimal Degrees floating point format.",
        "type": "number"
      }
    },
    "example": {
      "textCase": "Upper",
      "line1": "2000 Main Street",
      "city": "Irvine",
      "region": "CA",
      "country": "US",
      "postalCode": "92614"
    },
    "x-methods-used-in": [
      "Addresses/ResolveAddressPost"
    ]
  },
  "AddressResolutionModel": {
    "description": "Address Resolution Model",
    "type": "object",
    "properties": {
      "address": {
        "$ref": "#/definitions/AddressInfo",
        "description": "The original address",
        "example": {
          "line1": "2000 Main Street",
          "city": "Irvine",
          "region": "CA",
          "country": "US",
          "postalCode": "92614"
        }
      },
      "validatedAddresses": {
        "description": "The validated address or addresses",
        "type": "array",
        "items": {
          "$ref": "#/definitions/ValidatedAddressInfo"
        }
      },
      "coordinates": {
        "$ref": "#/definitions/CoordinateInfo",
        "description": "The geospatial coordinates of this address",
        "example": {
          "latitude": 33.684884,
          "longitude": -117.851321
        }
      },
      "resolutionQuality": {
        "description": "The resolution quality of the geospatial coordinates",
        "enum": [
          "NotCoded",
          "External",
          "CountryCentroid",
          "RegionCentroid",
          "PartialCentroid",
          "PostalCentroidGood",
          "PostalCentroidBetter",
          "PostalCentroidBest",
          "Intersection",
          "Interpolated",
          "Rooftop",
          "Constant"
        ],
        "type": "string",
        "example": "Rooftop",
        "x-enum-type": "ResolutionQuality",
        "x-enum-description": "The address resolution quality of an address validation result",
        "x-enum-value-comments": {
          "NotCoded": "Location was not geocoded",
          "External": "Location was already geocoded on the request",
          "CountryCentroid": "Avalara-defined country centroid",
          "RegionCentroid": "Avalara-defined state / province centroid",
          "PartialCentroid": "Geocoded at a level more coarse than a PostalCentroid1",
          "PostalCentroidGood": "Largest postal code (zip5 in US, left three in CA, etc",
          "PostalCentroidBetter": "Better postal code (zip7 in US)",
          "PostalCentroidBest": "Best postal code (zip9 in US, complete postal code elsewhere)",
          "Intersection": "Nearest intersection",
          "Interpolated": "Interpolated to rooftop",
          "Rooftop": "Assumed to be rooftop level, non-interpolated",
          "Constant": "Pulled from a static list of geocodes for specific jurisdictions"
        }
      },
      "taxAuthorities": {
        "description": "List of informational and warning messages regarding this address",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxAuthorityInfo"
        }
      },
      "messages": {
        "description": "List of informational and warning messages regarding this address",
        "type": "array",
        "items": {
          "$ref": "#/definitions/AvaTaxMessage"
        },
        "example": [
          {
            "summary": "The address is not deliverable.",
            "details": "The physical location exists but there are no homes on this street. One reason might be railroad tracks or rivers running alongside this street, as they would prevent construction of homes in this location.",
            "refersTo": "address",
            "severity": "Error",
            "source": "Avalara.AvaTax.Services.Address"
          }
        ]
      }
    },
    "example": {
      "address": {
        "line1": "2000 Main Street",
        "city": "Irvine",
        "region": "CA",
        "country": "US",
        "postalCode": "92614"
      },
      "coordinates": {
        "latitude": 33.684884,
        "longitude": -117.851321
      },
      "resolutionQuality": "Rooftop",
      "messages": [
        {
          "summary": "The address is not deliverable.",
          "details": "The physical location exists but there are no homes on this street. One reason might be railroad tracks or rivers running alongside this street, as they would prevent construction of homes in this location.",
          "refersTo": "address",
          "severity": "Error",
          "source": "Avalara.AvaTax.Services.Address"
        }
      ]
    },
    "x-methods-used-in": [
      "Addresses/ResolveAddress",
      "Addresses/ResolveAddressPost"
    ]
  },
  "AddressInfo": {
    "description": "Represents a base address element.",
    "type": "object",
    "properties": {
      "line1": {
        "description": "First line of the street address",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "2000 Main Street"
      },
      "line2": {
        "description": "Second line of the street address",
        "maxLength": 100,
        "minLength": 0,
        "type": "string"
      },
      "line3": {
        "description": "Third line of the street address",
        "maxLength": 100,
        "minLength": 0,
        "type": "string"
      },
      "city": {
        "description": "City component of the address",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Irvine"
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region within the country.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string",
        "example": "CA"
      },
      "country": {
        "description": "Name or ISO 3166 code identifying the country.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string",
        "example": "US"
      },
      "postalCode": {
        "description": "Postal Code / Zip Code component of the address.",
        "maxLength": 11,
        "minLength": 0,
        "type": "string",
        "example": "92614"
      },
      "latitude": {
        "format": "double",
        "description": "Geospatial latitude measurement, in Decimal Degrees floating point format.",
        "type": "number"
      },
      "longitude": {
        "format": "double",
        "description": "Geospatial longitude measurement, in Decimal Degrees floating point format.",
        "type": "number"
      }
    },
    "example": {
      "line1": "2000 Main Street",
      "city": "Irvine",
      "region": "CA",
      "country": "US",
      "postalCode": "92614"
    },
    "x-methods-used-in": []
  },
  "ValidatedAddressInfo": {
    "description": "Represents a validated address",
    "type": "object",
    "properties": {
      "addressType": {
        "description": "Address type code. One of: \r\n* Firm or company address\r\n* General Delivery address\r\n* High-rise or business complex\r\n* PO Box address\r\n* Rural route address\r\n* Street or residential address",
        "type": "string",
        "example": "S"
      },
      "line1": {
        "description": "First line of the street address",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "2000 Main Street"
      },
      "line2": {
        "description": "Second line of the street address",
        "maxLength": 100,
        "minLength": 0,
        "type": "string"
      },
      "line3": {
        "description": "Third line of the street address",
        "maxLength": 100,
        "minLength": 0,
        "type": "string"
      },
      "city": {
        "description": "City component of the address",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Irvine"
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region within the country.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string",
        "example": "CA"
      },
      "country": {
        "description": "Name or ISO 3166 code identifying the country.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string",
        "example": "US"
      },
      "postalCode": {
        "description": "Postal Code / Zip Code component of the address.",
        "maxLength": 11,
        "minLength": 0,
        "type": "string",
        "example": "92614"
      },
      "latitude": {
        "format": "double",
        "description": "Geospatial latitude measurement, in Decimal Degrees floating point format.",
        "type": "number"
      },
      "longitude": {
        "format": "double",
        "description": "Geospatial longitude measurement, in Decimal Degrees floating point format.",
        "type": "number"
      }
    },
    "example": {
      "addressType": "S",
      "line1": "2000 Main Street",
      "city": "Irvine",
      "region": "CA",
      "country": "US",
      "postalCode": "92614"
    },
    "x-methods-used-in": []
  },
  "CoordinateInfo": {
    "description": "Coordinate Info",
    "type": "object",
    "properties": {
      "latitude": {
        "format": "double",
        "description": "Latitude",
        "type": "number",
        "example": 33.684884
      },
      "longitude": {
        "format": "double",
        "description": "Longitude",
        "type": "number",
        "example": -117.851321
      }
    },
    "example": {
      "latitude": 33.684884,
      "longitude": -117.851321
    },
    "x-methods-used-in": []
  },
  "TaxAuthorityInfo": {
    "description": "Information about a tax authority relevant for an address.",
    "required": [
      "jurisdictionName"
    ],
    "type": "object",
    "properties": {
      "avalaraId": {
        "description": "A unique ID number assigned by Avalara to this tax authority.",
        "type": "string",
        "example": "AGAM"
      },
      "jurisdictionName": {
        "description": "The friendly jurisdiction name for this tax authority.",
        "maxLength": 128,
        "minLength": 0,
        "type": "string",
        "example": "CALIFORNIA"
      },
      "jurisdictionType": {
        "description": "The type of jurisdiction referenced by this tax authority.",
        "enum": [
          "Country",
          "Composite",
          "State",
          "County",
          "City",
          "Special"
        ],
        "type": "string",
        "example": "State",
        "x-enum-type": "JurisdictionType",
        "x-enum-description": "Jurisdiction Type",
        "x-enum-value-comments": {
          "Country": "Country",
          "Composite": "Deprecated",
          "State": "State",
          "County": "County",
          "City": "City",
          "Special": "Special Tax Jurisdiction"
        }
      },
      "signatureCode": {
        "description": "An Avalara-assigned signature code for this tax authority.",
        "maxLength": 4,
        "minLength": 0,
        "type": "string",
        "example": "AGAM"
      }
    },
    "example": {
      "avalaraId": "AGAM",
      "jurisdictionName": "CALIFORNIA",
      "jurisdictionType": "State",
      "signatureCode": "AGAM"
    },
    "x-methods-used-in": []
  },
  "AvaTaxMessage": {
    "description": "Informational or warning messages returned by AvaTax with a transaction",
    "type": "object",
    "properties": {
      "summary": {
        "description": "A brief summary of what this message tells us",
        "type": "string",
        "example": "Using JAAS"
      },
      "details": {
        "description": "Detailed information that explains what the summary provided",
        "type": "string",
        "example": "Address: 123 Main Street, Irvine, CA 92615 US, TaxRegion:2127863, Latitude: 33.657808, Longitude: -117.968489"
      },
      "refersTo": {
        "description": "Information about what object in your request this message refers to",
        "type": "string",
        "example": "Addresses[0] - TaxDate: 2017-09-21 00:00:00Z"
      },
      "severity": {
        "description": "A category that indicates how severely this message affects the results",
        "type": "string",
        "example": "Success"
      },
      "source": {
        "description": "The name of the code or service that generated this message",
        "type": "string",
        "example": "Avalara.AvaTax.Services.Tax.Steps"
      }
    },
    "example": {
      "summary": "Using JAAS",
      "details": "Address: 123 Main Street, Irvine, CA 92615 US, TaxRegion:2127863, Latitude: 33.657808, Longitude: -117.968489",
      "refersTo": "Addresses[0] - TaxDate: 2017-09-21 00:00:00Z",
      "severity": "Success",
      "source": "Avalara.AvaTax.Services.Tax.Steps"
    },
    "x-methods-used-in": []
  },
  "BatchModel": {
    "description": "Represents a batch of uploaded documents.",
    "required": [
      "name",
      "type"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this batch.",
        "type": "integer",
        "readOnly": true
      },
      "name": {
        "description": "The user-friendly readable name for this batch.",
        "maxLength": 194,
        "minLength": 0,
        "type": "string",
        "example": "TestBatch"
      },
      "accountId": {
        "format": "int32",
        "description": "The Account ID number of the account that owns this batch.",
        "type": "integer"
      },
      "companyId": {
        "format": "int32",
        "description": "The Company ID number of the company that owns this batch.",
        "type": "integer"
      },
      "type": {
        "description": "The type of this batch.",
        "enum": [
          "AvaCertUpdate",
          "AvaCertUpdateAll",
          "BatchMaintenance",
          "CompanyLocationImport",
          "DocumentImport",
          "ExemptCertImport",
          "ItemImport",
          "SalesAuditExport",
          "SstpTestDeckImport",
          "TaxRuleImport",
          "TransactionImport",
          "UPCBulkImport",
          "UPCValidationImport"
        ],
        "type": "string",
        "example": "TransactionImport",
        "x-enum-type": "BatchType",
        "x-enum-description": "The type of data contained in this batch",
        "x-enum-value-comments": {
          "TransactionImport": "This batch type represents tax transaction data being uploaded to AvaTax.  Each line in the batch represents a single transaction\n            or a line in a multi-line transaction.  For reference, see [Batched Transactions in REST v2](http://developer.avalara.com/blog/2016/10/24/batch-transaction-upload-in-rest-v2)"
        }
      },
      "status": {
        "description": "This batch's current processing status",
        "enum": [
          "Waiting",
          "SystemErrors",
          "Cancelled",
          "Completed",
          "Creating",
          "Deleted",
          "Errors",
          "Paused",
          "Processing"
        ],
        "type": "string",
        "readOnly": true,
        "x-enum-type": "BatchStatus",
        "x-enum-description": "The status of a batch file",
        "x-enum-value-comments": {
          "Waiting": "Batch file has been received and is in the queue to be processed.",
          "SystemErrors": "Batch file experienced system errors and cannot be processed.",
          "Cancelled": "Batch file is cancelled",
          "Completed": "Batch file has been completely processed.",
          "Creating": "Batch file is currently being created.",
          "Deleted": "Batch file has been deleted.",
          "Errors": "Batch file was processed with some errors.",
          "Paused": "Batch processing was paused.",
          "Processing": "Batch is currently being processed."
        }
      },
      "options": {
        "description": "Any optional flags provided for this batch",
        "maxLength": 200,
        "minLength": 0,
        "type": "string"
      },
      "batchAgent": {
        "description": "The agent used to create this batch",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "manual"
      },
      "startedDate": {
        "format": "date-time",
        "description": "The date/time when this batch started processing",
        "type": "string",
        "readOnly": true
      },
      "recordCount": {
        "format": "int32",
        "description": "The number of records in this batch; determined by the server",
        "type": "integer",
        "readOnly": true
      },
      "currentRecord": {
        "format": "int32",
        "description": "The current record being processed",
        "type": "integer",
        "readOnly": true
      },
      "completedDate": {
        "format": "date-time",
        "description": "The date/time when this batch was completely processed",
        "type": "string",
        "readOnly": true
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      },
      "files": {
        "description": "The list of files contained in this batch.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/BatchFileModel"
        },
        "example": [
          {
            "name": "samplebatch.csv",
            "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
            "contentLength": 0,
            "contentType": "text/csv",
            "fileExtension": ".csv",
            "filePath": "samplebatch.csv"
          }
        ]
      }
    },
    "example": {
      "name": "TestBatch",
      "type": "TransactionImport",
      "batchAgent": "manual",
      "files": [
        {
          "name": "samplebatch.csv",
          "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
          "contentLength": 0,
          "contentType": "text/csv",
          "fileExtension": ".csv",
          "filePath": "samplebatch.csv"
        }
      ]
    },
    "x-methods-used-in": [
      "Batches/CreateBatches",
      "Batches/GetBatch"
    ]
  },
  "BatchFileModel": {
    "description": "Represents one file in a batch upload.",
    "required": [
      "content"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number assigned to this batch file.",
        "type": "integer",
        "readOnly": true
      },
      "batchId": {
        "format": "int32",
        "description": "The unique ID number of the batch that this file belongs to.",
        "type": "integer",
        "readOnly": true
      },
      "name": {
        "description": "Logical Name of file (e.g. \"Input\" or \"Error\").",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "samplebatch.csv"
      },
      "content": {
        "format": "byte",
        "description": "Content of the batch file.",
        "type": "string",
        "example": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg=="
      },
      "contentLength": {
        "format": "int32",
        "description": "Size of content, in bytes.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "contentType": {
        "description": "Content mime type (e.g. text/csv).  This is used for HTTP downloading.",
        "maxLength": 100,
        "minLength": 0,
        "type": "string",
        "example": "text/csv"
      },
      "fileExtension": {
        "description": "File extension (e.g. CSV).",
        "maxLength": 10,
        "minLength": 0,
        "type": "string",
        "example": ".csv"
      },
      "filePath": {
        "description": "Path to the file - name/S3 key",
        "type": "string",
        "example": "samplebatch.csv"
      },
      "errorCount": {
        "format": "int32",
        "description": "Number of errors that occurred when processing this file.",
        "type": "integer"
      }
    },
    "example": {
      "name": "samplebatch.csv",
      "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
      "contentLength": 0,
      "contentType": "text/csv",
      "fileExtension": ".csv",
      "filePath": "samplebatch.csv"
    },
    "x-methods-used-in": []
  },
  "FetchResult[BatchModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/BatchModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Batches/QueryBatches",
      "Batches/ListBatchesByCompany"
    ]
  },
  "CreateCertExpressInvitationModel": {
    "description": "Represents an invitation for a customer to use CertExpress to self-report their own certificates.\r\nThis invitation is delivered by your choice of method, or you can present a hyperlink to the user\r\ndirectly in your connector.  Your customer will be redirected to https://app.certexpress.com/ where\r\nthey can follow a step-by-step guide to enter information about their exemption certificates.  The\r\ncertificates entered will be recorded and automatically linked to their customer record.",
    "type": "object",
    "properties": {
      "recipient": {
        "description": "If the value of `deliveryMethod` is set to `Email`, please specify the email address of the recipient \r\nfor the request.",
        "type": "string",
        "example": "bob@example.org"
      },
      "coverLetterTitle": {
        "description": "If this invitation is sent via email or download, please specify the cover letter to use when building this\r\ninvitation.  For a list of cover letters, please call `ListCoverLetters`.",
        "type": "string",
        "example": "STANDARD_REQUEST"
      },
      "exposureZones": {
        "description": "You may optionally specify a list of exposure zones to request in this CertExpress invitation.  If you list \r\nmore than one exposure zone, the customer will be prompted to provide an exemption certificate for each one.  \r\nIf you do not provide a list of exposure zones, the customer will be prompted to select an exposure zone.\r\nFor a list of available exposure zones, please call `ListExposureZones`.",
        "type": "array",
        "items": {
          "format": "int32",
          "type": "integer"
        }
      },
      "exemptReasons": {
        "description": "You may optionally specify a list of exemption reasons to pre-populate in this CertExpress invitation.\r\nIf you list exemption reasons, the customer will have part of their form already filled in when they visit\r\nthe CertExpress website.  For a list of available exemption reasons, please call `ListCertificateExemptReasons`.",
        "type": "array",
        "items": {
          "format": "int32",
          "type": "integer"
        }
      },
      "deliveryMethod": {
        "description": "Specify the type of invitation.  CertExpress invitations can be delivered via email, PDF download, or\r\nfacsimile.  If you specify facsimile, the invitation will be sent via fax to the customer's fax number\r\non file.",
        "enum": [
          "Email",
          "Fax",
          "Download"
        ],
        "type": "string",
        "example": "Email",
        "x-enum-type": "CertificateRequestDeliveryMethod",
        "x-enum-description": "The way of delivering request",
        "x-enum-value-comments": {
          "Email": "Emailing the request to recipients",
          "Fax": "Faxing the request to recipients",
          "Download": "Downloading the request"
        }
      }
    },
    "example": {
      "recipient": "bob@example.org",
      "coverLetterTitle": "STANDARD_REQUEST",
      "deliveryMethod": "Email"
    },
    "x-methods-used-in": [
      "CertExpressInvites/CreateCertExpressInvitation"
    ]
  },
  "CertExpressInvitationStatusModel": {
    "description": "Represent what is the current status of certificate request",
    "type": "object",
    "properties": {
      "status": {
        "description": "The status of the CertExpress invitation for this customer.  If this status says",
        "enum": [
          "InProgress",
          "Ready"
        ],
        "type": "string",
        "example": "InProgress",
        "x-enum-type": "CertExpressInvitationStatus",
        "x-enum-description": "Indicates the status of a CertExpress invitation link.",
        "x-enum-value-comments": {
          "InProgress": "The CertExpress website is currently building a landing page for the customer.  Please\n            wait about 10 seconds and fetch this request again to see when it will be ready.",
          "Ready": "Indicates that the CertExpress invitation has been completed and is ready to use."
        }
      },
      "invitation": {
        "$ref": "#/definitions/CertExpressInvitationModel",
        "description": "The CertExpress invitation for the customer.  If you specified an email address in the invitation\r\nrequest, this invitation will be sent via email.  Otherwise, you are expected to direct the customer\r\nusing a hyperlink directly in your application.",
        "example": {
          "customerCode": "123456789"
        }
      }
    },
    "example": {
      "status": "InProgress",
      "invitation": {
        "customerCode": "123456789"
      }
    },
    "x-methods-used-in": [
      "CertExpressInvites/CreateCertExpressInvitation"
    ]
  },
  "CertExpressInvitationModel": {
    "description": "Represents an invitation for a customer to use CertExpress to self-report their own certificates.\r\nThis invitation is delivered by your choice of method, or you can present a hyperlink to the user\r\ndirectly in your connector.  Your customer will be redirected to https://app.certexpress.com/ where\r\nthey can follow a step-by-step guide to enter information about their exemption certificates.  The\r\ncertificates entered will be recorded and automatically linked to their customer record.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "A unique ID number representing this CertExpress invitation.",
        "type": "integer",
        "readOnly": true
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the AvaTax company that sent this invitation.",
        "type": "integer"
      },
      "recipient": {
        "description": "The email address to which this invitation was sent.  If this invitation was presented as a weblink, this value will be null.",
        "type": "string"
      },
      "customerCode": {
        "description": "The unique code of the customer that received this invitation.",
        "type": "string",
        "example": "123456789"
      },
      "customer": {
        "$ref": "#/definitions/CustomerModel",
        "description": "The customer who received this invitation.",
        "readOnly": true
      },
      "coverLetter": {
        "$ref": "#/definitions/CoverLetterModel",
        "description": "The attached cover letter object to this request.",
        "readOnly": true
      },
      "emailStatus": {
        "description": "The status of the emails associated with this invitation.  If this invitation was sent via email,\r\nthis value will change to `Sent` when the email message has been sent.",
        "type": "string",
        "readOnly": true
      },
      "coverLettersOnly": {
        "description": "True if this invitation contained a cover letter only.",
        "type": "boolean",
        "readOnly": true
      },
      "exposureZones": {
        "description": "When an invitation is sent, it contains a list of exposure zones for which the customer is invited to upload\r\ntheir exemption certificates.  This list contains the ID numbers of the exposure zones identified.",
        "type": "array",
        "items": {
          "format": "int32",
          "type": "integer"
        }
      },
      "exemptReasons": {
        "description": "The list of exemption reasons identified by this CertExpress invitation.",
        "type": "array",
        "items": {
          "format": "int32",
          "type": "integer"
        }
      },
      "deliveryMethod": {
        "description": "Indicates the method that was used to deliver this CertExpress invitation.",
        "enum": [
          "Email",
          "Fax",
          "Download"
        ],
        "type": "string",
        "x-enum-type": "CertificateRequestDeliveryMethod",
        "x-enum-description": "The way of delivering request",
        "x-enum-value-comments": {
          "Email": "Emailing the request to recipients",
          "Fax": "Faxing the request to recipients",
          "Download": "Downloading the request"
        }
      },
      "message": {
        "description": "The custom message delivered with this invitation.",
        "type": "string"
      },
      "date": {
        "format": "date-time",
        "description": "The date of the invitation.",
        "type": "string"
      },
      "requestLink": {
        "description": "The web link for this CertExpress invitation.  This value is only usable if the status of this invitation is `Ready`.\r\nIf this invitation was sent via email, this value will be null.",
        "type": "string"
      }
    },
    "example": {
      "customerCode": "123456789"
    },
    "x-methods-used-in": [
      "CertExpressInvites/GetCertExpressInvitation"
    ]
  },
  "CustomerModel": {
    "description": "Represents a customer to whom you sell products and/or services.",
    "required": [
      "companyId",
      "customerCode"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "Unique ID number of this customer.",
        "type": "integer",
        "readOnly": true
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the AvaTax company that recorded this customer.",
        "type": "integer",
        "example": 0
      },
      "customerCode": {
        "description": "The unique code identifying this customer.  Must be unique within your company.\r\n\r\nThis code should be used in the `customerCode` field of any call that creates or adjusts a transaction\r\nin order to ensure that all exemptions that apply to this customer are correctly considered.",
        "type": "string",
        "example": "123456789"
      },
      "alternateId": {
        "description": "A customer-configurable alternate ID number for this customer.  You may set this value to match any\r\nother system that would like to reference this customer record.",
        "type": "string",
        "example": "987654321"
      },
      "name": {
        "description": "A friendly name identifying this customer.",
        "type": "string",
        "example": "Dr. Bob Example"
      },
      "attnName": {
        "description": "Indicates the \"Attn:\" component of the address for this customer, if this customer requires mailings to be shipped \r\nto the attention of a specific person or department name.",
        "type": "string",
        "example": "Attn: Receiving"
      },
      "line1": {
        "description": "First line of the street address of this customer.",
        "type": "string",
        "example": "645 Main Street"
      },
      "line2": {
        "description": "Second line of the street address of this customer.",
        "type": "string"
      },
      "city": {
        "description": "City component of the street address of this customer.",
        "type": "string",
        "example": "Irvine"
      },
      "postalCode": {
        "description": "Postal Code / Zip Code component of the address of this customer.",
        "type": "string",
        "example": "92614"
      },
      "phoneNumber": {
        "description": "The main phone number for this customer.",
        "type": "string",
        "example": "(949) 555-1212"
      },
      "faxNumber": {
        "description": "The fax phone number for this customer, if any.",
        "type": "string",
        "example": "949.555.1213"
      },
      "emailAddress": {
        "description": "The main email address for this customer.",
        "type": "string",
        "example": "dr.bob.example@example.org"
      },
      "contactName": {
        "description": "The name of the main contact person for this customer.",
        "type": "string",
        "example": "Alice Smith"
      },
      "lastTransaction": {
        "format": "date-time",
        "description": "Date when this customer last executed a transaction.",
        "type": "string",
        "readOnly": true,
        "example": "2008-10-08T00:00:00"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "country": {
        "description": "Name or ISO 3166 code identifying the country.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string",
        "example": "US"
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region within the country.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "maxLength": 3,
        "minLength": 0,
        "type": "string",
        "example": "CA"
      },
      "isBill": {
        "description": "True if this customer record is specifically used for bill-to purposes.",
        "type": "boolean"
      },
      "isShip": {
        "description": "True if this customer record is specifically used for ship-to purposes.",
        "type": "boolean"
      },
      "taxpayerIdNumber": {
        "description": "For customers in the United States, this field is the federal taxpayer ID number.  For businesses, this is \r\na Federal Employer Identification Number.  For individuals, this will be a Social Security Number.",
        "type": "string"
      },
      "certificates": {
        "description": "A list of exemption certficates that apply to this customer.  You can fetch this data by specifying \r\n`$include=certificates` when calling a customer fetch API.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/CertificateModel"
        }
      }
    },
    "example": {
      "companyId": 0,
      "customerCode": "123456789",
      "alternateId": "987654321",
      "name": "Dr. Bob Example",
      "attnName": "Attn: Receiving",
      "line1": "645 Main Street",
      "city": "Irvine",
      "postalCode": "92614",
      "phoneNumber": "(949) 555-1212",
      "faxNumber": "949.555.1213",
      "emailAddress": "dr.bob.example@example.org",
      "contactName": "Alice Smith",
      "lastTransaction": "2008-10-08T00:00:00",
      "country": "US",
      "region": "CA"
    },
    "x-methods-used-in": [
      "Customers/CreateCustomers",
      "Customers/GetCustomer",
      "Customers/UpdateCustomer",
      "Customers/DeleteCustomer"
    ]
  },
  "CoverLetterModel": {
    "description": "The CoverLetter model represents a message sent along with an invitation to use CertExpress to\r\nupload certificates.  An invitation allows customers to use CertExpress to upload their exemption \r\ncertificates directly; this cover letter explains why the invitation was sent.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "A unique ID number representing a cover letter sent with a CertExpress invitation.",
        "type": "integer",
        "readOnly": true
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the AvaTax company that received this certificate.",
        "type": "integer"
      },
      "title": {
        "description": "The title used when sending the cover letter.",
        "type": "string",
        "example": "STANDARD_REQUEST"
      },
      "subject": {
        "description": "The subject message used when sending the cover letter via email.",
        "type": "string",
        "example": "Please submit your exemption certificate"
      },
      "description": {
        "description": "A full description of the cover letter's contents and message.",
        "type": "string",
        "example": "Please upload your certificate to CertCapture"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true,
        "example": "0001-01-01T00:00:00"
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true,
        "example": "0001-01-01T00:00:00"
      },
      "active": {
        "description": "Is this cover letter active",
        "type": "boolean"
      },
      "pageCount": {
        "format": "int32",
        "description": "How many pages this cover letter encompasses",
        "type": "integer",
        "readOnly": true
      },
      "templateFilename": {
        "description": "The file name of the cover letter template",
        "type": "string"
      },
      "version": {
        "format": "int32",
        "description": "The version number of the template",
        "type": "integer",
        "example": 0
      }
    },
    "example": {
      "title": "STANDARD_REQUEST",
      "subject": "Please submit your exemption certificate",
      "description": "Please upload your certificate to CertCapture",
      "createdDate": "0001-01-01T00:00:00",
      "modifiedDate": "0001-01-01T00:00:00",
      "version": 0
    },
    "x-methods-used-in": []
  },
  "CertificateModel": {
    "description": "A certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain information about a customer's eligibility for exemption from sales or use taxes based on\r\ncriteria you specify when you store the certificate.  To view or manage your certificates directly, please \r\nlog onto the administrative website for the product you purchased.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "Unique ID number of this certificate.",
        "type": "integer",
        "example": 0
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the AvaTax company that recorded this certificate.",
        "type": "integer"
      },
      "signedDate": {
        "format": "date-time",
        "description": "The date when this certificate was signed.",
        "type": "string",
        "example": "2016-02-01T00:00:00",
        "x-date-type": "date-only"
      },
      "expirationDate": {
        "format": "date-time",
        "description": "Expiration date when this certificate will no longer be valid.",
        "type": "string",
        "example": "2020-12-31T00:00:00",
        "x-date-type": "date-only"
      },
      "filename": {
        "description": "File name for the image of this certificate.\r\n\r\nWhen creating a certificate, if you do not upload a PDF or JPG image, you must specify the filename\r\nof the certificate as it is tracked in your repository.\r\n\r\nTo create a certificate, you must provide one of the following fields: either a `filename`, a `pdf` file,\r\nor an array of JPG `pages`.  The API will return an error if you omit these fields or if you attempt to\r\nput values in more than one of them.",
        "type": "string",
        "example": "1337bde9-3a43-40d6-b1b2-61ffefa0a481"
      },
      "valid": {
        "description": "True if this certificate is marked as valid.  A valid certificate can be considered for exemption purposes.\r\nWhen a certificate is marked invalid, it will no longer be considered when calculating exemption for\r\na customer.",
        "type": "boolean",
        "example": true
      },
      "verified": {
        "description": "This value is true if the certificate has gone through the certificate validation process.\r\nFor more information on the certificate validation process, please see the Avalara Help Center.",
        "type": "boolean",
        "readOnly": true,
        "example": false
      },
      "exemptPercentage": {
        "format": "double",
        "description": "If this certificate provides exemption from transactional taxes, what percentage of the transaction \r\nis considered exempt?\r\n\r\nFor a fully exempt certificate, this percentage should be 100.",
        "type": "number",
        "example": 0
      },
      "isSingleCertificate": {
        "description": "This value is true if this certificate is a single (or standalone) certificate.  This value is set\r\nduring the audit stage of the certificate validation process.",
        "type": "boolean",
        "readOnly": true,
        "example": false
      },
      "exemptionReason": {
        "$ref": "#/definitions/ExemptionReasonModel",
        "description": "The exemption reason associated with this certificate.",
        "example": {
          "name": "EXPOSURE"
        }
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date/time when this record was created.",
        "type": "string",
        "example": "2018-01-24T20:04:51.9086516Z"
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "example": "2018-01-24T20:04:51.9086516Z",
        "x-date-type": "date-only"
      },
      "pageCount": {
        "format": "int32",
        "description": "Number of pages contained within this certificate.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "poNumbers": {
        "description": "A list of purchase order numbers that are valid for use with this certificate.\r\n\r\nIf this certificate is applicable for all purchase order numbers, this field will be empty.\r\n\r\nYou can fetch this data by specifying `$include=ponumbers` when calling a certificate fetch API.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/PoNumberModel"
        }
      },
      "exposureZone": {
        "$ref": "#/definitions/ExposureZoneModel",
        "description": "The exposure zone where this certificate is valid.",
        "example": {
          "name": "Washington"
        }
      },
      "attributes": {
        "description": "A list of certificate attributes that apply to this certificate.\r\n\r\nYou can fetch this data by specifying `$include=attributes` when calling a certificate fetch API.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/CertificateAttributeModel"
        }
      },
      "pdf": {
        "description": "This field is available for input only.  To retrieve the image after creation, use the \r\n`DownloadCertificateImage` API.\r\n\r\nWhen creating a certificate, you may optionally provide a PDF image in Base64 URLEncoded format.  \r\nPDFs are automatically parsed into individual page JPG images and can be retrieved back\r\nlater as either the original PDF or the individual pages.  \r\n\r\nTo create a certificate, you must provide one of the following fields: either a `filename`, a `pdf` file,\r\nor an array of JPG `pages`.  The API will return an error if you omit these fields or if you attempt to\r\nput values in more than one of them.",
        "type": "string"
      },
      "pages": {
        "description": "This field is available for input only.  To retrieve the image after creation, use the \r\n`DownloadCertificateImage` API.\r\n\r\nWhen creating a certificate, you may optionally provide a list of JPG images, one per page, in\r\nBase64 URLEncoded format.  These JPG images are automatically combined into a single downloadable\r\nPDF and can be retrieved back later as either the original JPG images or the combined PDF.  \r\n\r\nTo create a certificate, you must provide one of the following fields: either a `filename`, a `pdf` file,\r\nor an array of JPG `pages`.  The API will return an error if you omit these fields or if you attempt to\r\nput values in more than one of them.",
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "example": {
      "id": 0,
      "signedDate": "2016-02-01",
      "expirationDate": "2020-12-31",
      "filename": "1337bde9-3a43-40d6-b1b2-61ffefa0a481",
      "valid": true,
      "verified": false,
      "exemptPercentage": 0,
      "isSingleCertificate": false,
      "exemptionReason": {
        "name": "EXPOSURE"
      },
      "createdDate": "2018-01-24T20:04:51.9086516Z",
      "modifiedDate": "2018-01-24",
      "pageCount": 0,
      "customers": [
        {
          "companyId": 0,
          "customerCode": "249ecf50-f3fb-48e1-8cea-c3212bb93942"
        },
        {
          "companyId": 0,
          "customerCode": "2a6d560a-9be4-4ff7-afa1-3ff8687ece78"
        }
      ],
      "exposureZone": {
        "name": "Washington"
      }
    },
    "x-methods-used-in": [
      "Certificates/CreateCertificates",
      "Certificates/GetCertificate",
      "Certificates/UpdateCertificate",
      "Certificates/DeleteCertificate"
    ]
  },
  "ExemptionReasonModel": {
    "description": "An exemption reason defines why a certificate allows a customer to be exempt\r\nfor purposes of tax calculation.  For a full list of defined exemption reasons,\r\nplease call the `ListCertificateExemptionReasons` API.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "A unique ID number representing this exemption reason.",
        "type": "integer"
      },
      "name": {
        "description": "A friendly name describing this exemption reason.",
        "type": "string",
        "example": "EXPOSURE"
      }
    },
    "example": {
      "name": "EXPOSURE"
    },
    "x-methods-used-in": []
  },
  "PoNumberModel": {
    "description": "Represents a purchase order number for a transaction",
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "Unique ID number",
        "type": "integer",
        "readOnly": true,
        "example": 1234
      },
      "poNumber": {
        "description": "Purchase order number.",
        "type": "string",
        "example": "test"
      }
    },
    "example": {
      "id": 1234,
      "poNumber": "test"
    },
    "x-methods-used-in": []
  },
  "ExposureZoneModel": {
    "description": "Information about a physical area or zone in which a certificate can apply.\r\nAn exposure zone for an exemption certificate will generally be a tax authority such\r\nas a state, country, or local government entity.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "A unique ID number representing this exposure zone.",
        "type": "integer",
        "readOnly": true,
        "example": 141
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the AvaTax company that recorded this customer.",
        "type": "integer"
      },
      "name": {
        "description": "The short name of this exposure zone, suitable for use in a drop-down list.",
        "type": "string",
        "example": "Alabama"
      },
      "tag": {
        "description": "A tag indicating",
        "type": "string",
        "example": "EZ_US_AL"
      },
      "description": {
        "description": "A more complete description of this exposure zone, suitable for use as a tooltip or help text.",
        "type": "string",
        "example": "Alabama Sales Tax"
      },
      "created": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string"
      },
      "modified": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string"
      },
      "region": {
        "description": "Two or three character ISO 3166 region, province, or state name of this exposure zone.",
        "type": "string",
        "readOnly": true,
        "example": "AL"
      },
      "country": {
        "description": "Two character ISO 3166 county code for the country component of this exposure zone.",
        "type": "string",
        "readOnly": true,
        "example": "US"
      }
    },
    "example": {
      "id": 141,
      "name": "Alabama",
      "tag": "EZ_US_AL",
      "description": "Alabama Sales Tax",
      "region": "AL",
      "country": "US"
    },
    "x-methods-used-in": []
  },
  "CertificateAttributeModel": {
    "description": "A certificate attribute can be thought of as a feature or flag that is applied to a certificate.\r\nA single certificate can be linked to zero, one, or many certificate attributes.  The full list of \r\nattributes can be obtained by calling the `ListCertificateAttributes` API.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "A unique ID number representing this certificate attribute.",
        "type": "integer",
        "example": 0
      },
      "name": {
        "description": "A friendly readable name for this certificate attribute.",
        "type": "string",
        "example": "DIRECT PAY"
      },
      "description": {
        "description": "A full help text description of the certificate attribute.",
        "type": "string"
      },
      "isSystemCode": {
        "description": "This value is true if this is a system-defined certificate attribute.  System-defined attributes\r\ncannot be modified or deleted on the CertCapture website.",
        "type": "boolean",
        "example": false
      }
    },
    "example": {
      "id": 0,
      "name": "DIRECT PAY",
      "isSystemCode": false
    },
    "x-methods-used-in": [
      "Certificates/LinkAttributesToCertificate",
      "Certificates/UnlinkAttributesFromCertificate"
    ]
  },
  "FetchResult[CertExpressInvitationModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/CertExpressInvitationModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "CertExpressInvites/ListCertExpressInvitations"
    ]
  },
  "FetchResult[CertificateModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/CertificateModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Certificates/QueryCertificates",
      "Customers/ListCertificatesForCustomer",
      "Customers/LinkCertificatesToCustomer",
      "Customers/UnlinkCertificatesFromCustomer"
    ]
  },
  "LinkCustomersModel": {
    "description": "Represents a customer to whom you sell products and/or services.",
    "type": "object",
    "properties": {
      "customers": {
        "description": "An array of customerCodes that are exempted by this certificate",
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "123456789"
        ]
      }
    },
    "example": {
      "customers": [
        "123456789"
      ]
    },
    "x-methods-used-in": [
      "Certificates/LinkCustomersToCertificate",
      "Certificates/UnlinkCustomersFromCertificate"
    ]
  },
  "FetchResult[CustomerModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/CustomerModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Certificates/ListCustomersForCertificate",
      "Certificates/LinkCustomersToCertificate",
      "Certificates/UnlinkCustomersFromCertificate",
      "Customers/QueryCustomers"
    ]
  },
  "FetchResult[CertificateAttributeModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/CertificateAttributeModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Certificates/ListAttributesForCertificate",
      "Certificates/LinkAttributesToCertificate",
      "Certificates/UnlinkAttributesFromCertificate",
      "Definitions/ListCertificateAttributes"
    ]
  },
  "CompanyModel": {
    "description": "A company or business entity.",
    "required": [
      "id",
      "accountId",
      "companyCode",
      "name",
      "defaultCountry"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this company.",
        "type": "integer",
        "readOnly": true,
        "example": 12345
      },
      "accountId": {
        "format": "int32",
        "description": "The unique ID number of the account this company belongs to.",
        "type": "integer",
        "readOnly": true,
        "example": 123456789
      },
      "parentCompanyId": {
        "format": "int32",
        "description": "If this company is fully owned by another company, this is the unique identity of the parent company.",
        "type": "integer"
      },
      "sstPid": {
        "description": "If this company files Streamlined Sales Tax, this is the PID of this company as defined by the Streamlined Sales Tax governing board.",
        "maxLength": 9,
        "minLength": 0,
        "type": "string"
      },
      "companyCode": {
        "description": "A unique code that references this company within your account.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "DEFAULT"
      },
      "name": {
        "description": "The name of this company, as shown to customers.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Default Company"
      },
      "isDefault": {
        "description": "This flag is true if this company is the default company for this account.  Only one company may be set as the default.",
        "type": "boolean",
        "example": false
      },
      "defaultLocationId": {
        "format": "int32",
        "description": "If set, this is the unique ID number of the default location for this company.",
        "type": "integer"
      },
      "isActive": {
        "description": "This flag indicates whether tax activity can occur for this company.  Set this flag to true to permit the company to process transactions.",
        "type": "boolean",
        "example": true
      },
      "taxpayerIdNumber": {
        "description": "For United States companies, this field contains your Taxpayer Identification Number.  \r\nThis is a nine digit number that is usually called an EIN for an Employer Identification Number if this company is a corporation, \r\nor SSN for a Social Security Number if this company is a person.\r\nThis value is required if you subscribe to Avalara Managed Returns or the SST Certified Service Provider services, \r\nbut it is optional if you do not subscribe to either of those services.",
        "maxLength": 11,
        "minLength": 0,
        "type": "string",
        "example": "123456789"
      },
      "hasProfile": {
        "description": "Set this flag to true to give this company its own unique tax profile.\r\nIf this flag is true, this company will have its own Nexus, TaxRule, TaxCode, and Item definitions.\r\nIf this flag is false, this company will inherit all profile values from its parent.",
        "type": "boolean",
        "example": true
      },
      "isReportingEntity": {
        "description": "Set this flag to true if this company must file its own tax returns.\r\nFor users who have Returns enabled, this flag turns on monthly Worksheet generation for the company.",
        "type": "boolean",
        "example": false
      },
      "sstEffectiveDate": {
        "format": "date-time",
        "description": "If this company participates in Streamlined Sales Tax, this is the date when the company joined the SST program.",
        "type": "string",
        "x-date-type": "date-only"
      },
      "defaultCountry": {
        "description": "The two character ISO-3166 country code of the default country for this company.",
        "maxLength": 2,
        "minLength": 2,
        "type": "string",
        "example": "US"
      },
      "baseCurrencyCode": {
        "description": "This is the three character ISO-4217 currency code of the default currency used by this company.",
        "maxLength": 3,
        "minLength": 0,
        "type": "string",
        "example": "USD"
      },
      "roundingLevelId": {
        "description": "Indicates whether this company prefers to round amounts at the document level or line level.",
        "enum": [
          "Line",
          "Document"
        ],
        "type": "string",
        "example": "Line",
        "x-enum-type": "RoundingLevelId",
        "x-enum-description": "Choice of rounding level for a transaction",
        "x-enum-value-comments": {
          "Line": "Round tax on each line separately",
          "Document": "Round tax at the document level"
        }
      },
      "warningsEnabled": {
        "description": "Set this value to true to receive warnings in API calls via SOAP.",
        "type": "boolean"
      },
      "isTest": {
        "description": "Set this flag to true to indicate that this company is a test company.\r\nIf you have Returns enabled, Test companies will not file tax returns and can be used for validation purposes.",
        "type": "boolean",
        "example": true
      },
      "taxDependencyLevelId": {
        "description": "Used to apply tax detail dependency at a jurisdiction level.",
        "enum": [
          "Document",
          "State",
          "TaxRegion",
          "Address"
        ],
        "type": "string",
        "example": "Document",
        "x-enum-type": "TaxDependencyLevelId",
        "x-enum-description": "TaxDependencyLevelId",
        "x-enum-value-comments": {
          "Document": "Document",
          "State": "State",
          "TaxRegion": "TaxRegion",
          "Address": "Address"
        }
      },
      "inProgress": {
        "description": "Set this value to true to indicate that you are still working to finish configuring this company.\r\nWhile this value is true, no tax reporting will occur and the company will not be usable for transactions.",
        "type": "boolean",
        "example": false
      },
      "businessIdentificationNo": {
        "description": "Business Identification No",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      },
      "contacts": {
        "description": "Optional: A list of contacts defined for this company.  To fetch this list, add the query string \"?$include=Contacts\" to your URL.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/ContactModel"
        }
      },
      "items": {
        "description": "Optional: A list of items defined for this company.  To fetch this list, add the query string \"?$include=Items\" to your URL.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/ItemModel"
        }
      },
      "locations": {
        "description": "Optional: A list of locations defined for this company.  To fetch this list, add the query string \"?$include=Locations\" to your URL.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/LocationModel"
        }
      },
      "nexus": {
        "description": "Optional: A list of nexus defined for this company.  To fetch this list, add the query string \"?$include=Nexus\" to your URL.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/NexusModel"
        }
      },
      "settings": {
        "description": "Optional: A list of settings defined for this company.  To fetch this list, add the query string \"?$include=Settings\" to your URL.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/SettingModel"
        }
      },
      "taxCodes": {
        "description": "Optional: A list of tax codes defined for this company.  To fetch this list, add the query string \"?$include=TaxCodes\" to your URL.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxCodeModel"
        }
      },
      "taxRules": {
        "description": "Optional: A list of tax rules defined for this company.  To fetch this list, add the query string \"?$include=TaxRules\" to your URL.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxRuleModel"
        }
      },
      "upcs": {
        "description": "Optional: A list of UPCs defined for this company.  To fetch this list, add the query string \"?$include=UPCs\" to your URL.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/UPCModel"
        }
      },
      "exemptCerts": {
        "description": "DEPRECATED - Please use the `ListCertificates` API.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/EcmsModel"
        },
        "readOnly": true
      },
      "mossId": {
        "description": "The unique identifier of the mini-one-stop-shop used for Value Added Tax (VAT) processing.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "mossCountry": {
        "description": "The country code of the mini-one-stop-shop used for Value Added Tax (VAT) processing.",
        "maxLength": 2,
        "minLength": 0,
        "type": "string"
      }
    },
    "example": {
      "id": 12345,
      "accountId": 123456789,
      "companyCode": "DEFAULT",
      "name": "Default Company",
      "isDefault": false,
      "isActive": true,
      "taxpayerIdNumber": "123456789",
      "hasProfile": true,
      "isReportingEntity": false,
      "defaultCountry": "US",
      "baseCurrencyCode": "USD",
      "roundingLevelId": "Line",
      "isTest": true,
      "taxDependencyLevelId": "Document",
      "inProgress": false
    },
    "x-methods-used-in": [
      "Companies/CreateCompanies",
      "Companies/GetCompany",
      "Companies/UpdateCompany",
      "Companies/CompanyInitialize"
    ]
  },
  "ContactModel": {
    "description": "A contact person for a company.",
    "required": [
      "id",
      "companyId",
      "contactCode"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this contact.",
        "type": "integer",
        "readOnly": true,
        "example": 56789
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the company to which this contact belongs.",
        "type": "integer",
        "readOnly": true,
        "example": 12345
      },
      "contactCode": {
        "description": "A unique code for this contact.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "DEFAULT"
      },
      "firstName": {
        "description": "The first or given name of this contact.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Bob"
      },
      "middleName": {
        "description": "The middle name of this contact.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "lastName": {
        "description": "The last or family name of this contact.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "McExample"
      },
      "title": {
        "description": "Professional title of this contact.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Owner"
      },
      "line1": {
        "description": "The first line of the postal mailing address of this contact.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "2000 Main Street"
      },
      "line2": {
        "description": "The second line of the postal mailing address of this contact.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "line3": {
        "description": "The third line of the postal mailing address of this contact.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "city": {
        "description": "The city of the postal mailing address of this contact.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Irvine"
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region within the country.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string",
        "example": "CA"
      },
      "postalCode": {
        "description": "The postal code or zip code of the postal mailing address of this contact.",
        "maxLength": 10,
        "minLength": 0,
        "type": "string",
        "example": "92614"
      },
      "country": {
        "description": "Name or ISO 3166 code identifying the country.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string",
        "example": "US"
      },
      "email": {
        "description": "The email address of this contact.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "bob@example.org"
      },
      "phone": {
        "description": "The main phone number for this contact.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "714 555-1212"
      },
      "mobile": {
        "description": "The mobile phone number for this contact.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "fax": {
        "description": "The facsimile phone number for this contact.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      }
    },
    "example": {
      "id": 56789,
      "companyId": 12345,
      "contactCode": "DEFAULT",
      "firstName": "Bob",
      "lastName": "McExample",
      "title": "Owner",
      "line1": "2000 Main Street",
      "city": "Irvine",
      "region": "CA",
      "postalCode": "92614",
      "country": "US",
      "email": "bob@example.org",
      "phone": "714 555-1212"
    },
    "x-methods-used-in": [
      "Contacts/CreateContacts",
      "Contacts/GetContact",
      "Contacts/UpdateContact"
    ]
  },
  "ItemModel": {
    "description": "Represents an item in your company's product catalog.",
    "required": [
      "id",
      "companyId",
      "itemCode",
      "description"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique ID number of this item.",
        "type": "integer",
        "readOnly": true,
        "example": 56789
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the company that owns this item.",
        "type": "integer",
        "readOnly": true,
        "example": 12345
      },
      "itemCode": {
        "description": "A unique code representing this item.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "CERMUG"
      },
      "taxCodeId": {
        "format": "int32",
        "description": "The unique ID number of the tax code that is applied when selling this item.\r\nWhen creating or updating an item, you can either specify the Tax Code ID number or the Tax Code string; you do not need to specify both values.",
        "type": "integer"
      },
      "taxCode": {
        "description": "The unique code string of the Tax Code that is applied when selling this item.\r\nWhen creating or updating an item, you can either specify the Tax Code ID number or the Tax Code string; you do not need to specify both values.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "P0000000"
      },
      "description": {
        "description": "A friendly description of this item in your product catalog.",
        "maxLength": 255,
        "minLength": 0,
        "type": "string",
        "example": "Ceramic Mug"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      }
    },
    "example": {
      "id": 56789,
      "companyId": 12345,
      "itemCode": "CERMUG",
      "taxCode": "P0000000",
      "description": "Ceramic Mug"
    },
    "x-methods-used-in": [
      "Items/CreateItems",
      "Items/GetItem",
      "Items/UpdateItem"
    ]
  },
  "LocationModel": {
    "description": "A location where this company does business.\r\nSome jurisdictions may require you to list all locations where your company does business.",
    "required": [
      "id",
      "companyId",
      "locationCode",
      "addressTypeId",
      "addressCategoryId",
      "line1",
      "postalCode"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this location.",
        "type": "integer",
        "readOnly": true,
        "example": 56789
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the company that operates at this location.",
        "type": "integer",
        "readOnly": true,
        "example": 12345
      },
      "locationCode": {
        "description": "A code that identifies this location.  Must be unique within your company.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "DEFAULT"
      },
      "description": {
        "description": "A friendly name for this location.",
        "maxLength": 255,
        "minLength": 0,
        "type": "string",
        "example": "Bob's Artisan Pottery"
      },
      "addressTypeId": {
        "description": "Indicates whether this location is a physical place of business or a temporary salesperson location.",
        "enum": [
          "Location",
          "Salesperson"
        ],
        "type": "string",
        "example": "Location",
        "x-enum-type": "AddressTypeId",
        "x-enum-description": "Indicates whether this address refers to a person or an business",
        "x-enum-value-comments": {
          "Location": "A business location, for example a store, warehouse, or office.",
          "Salesperson": "A person's address who performs sales tasks for the company remotely from an office."
        }
      },
      "addressCategoryId": {
        "description": "Indicates the type of place of business represented by this location.",
        "enum": [
          "Storefront",
          "MainOffice",
          "Warehouse",
          "Salesperson",
          "Other"
        ],
        "type": "string",
        "example": "MainOffice",
        "x-enum-type": "AddressCategoryId",
        "x-enum-description": "The type of address represented by this object",
        "x-enum-value-comments": {
          "Storefront": "Address refers to a storefront location",
          "MainOffice": "Address refers to a main office of this company",
          "Warehouse": "Address refers to a warehouse or other non-public location",
          "Salesperson": "Address refers to a location for a single salesperson",
          "Other": "Address is a type not reflected in the other lists"
        }
      },
      "line1": {
        "description": "The first line of the physical address of this location.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "2000 Main Street"
      },
      "line2": {
        "description": "The second line of the physical address of this location.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "line3": {
        "description": "The third line of the physical address of this location.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "city": {
        "description": "The city of the physical address of this location.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Irvine"
      },
      "county": {
        "description": "The county name of the physical address of this location.  Not required.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Orange"
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region within the country of the physical address of this location.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string",
        "example": "CA"
      },
      "postalCode": {
        "description": "The postal code or zip code of the physical address of this location.",
        "maxLength": 10,
        "minLength": 0,
        "type": "string",
        "example": "92614"
      },
      "country": {
        "description": "Name or ISO 3166 code identifying the country of the physical address of this location.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string",
        "example": "US"
      },
      "isDefault": {
        "description": "Set this flag to true to indicate that this is the default location for this company.",
        "type": "boolean",
        "example": true
      },
      "isRegistered": {
        "description": "Set this flag to true to indicate that this location has been registered with a tax authority.",
        "type": "boolean",
        "example": true
      },
      "dbaName": {
        "description": "If this location has a different business name from its legal entity name, specify the \"Doing Business As\" name for this location.",
        "maxLength": 100,
        "minLength": 0,
        "type": "string",
        "example": "Bob's Artisan Pottery"
      },
      "outletName": {
        "description": "A friendly name for this location.",
        "maxLength": 100,
        "minLength": 0,
        "type": "string",
        "example": "Main Office"
      },
      "effectiveDate": {
        "format": "date-time",
        "description": "The date when this location was opened for business, or null if not known.",
        "type": "string",
        "x-date-type": "date-only"
      },
      "endDate": {
        "format": "date-time",
        "description": "If this place of business has closed, the date when this location closed business.",
        "type": "string",
        "x-date-type": "date-only"
      },
      "lastTransactionDate": {
        "format": "date-time",
        "description": "The most recent date when a transaction was processed for this location.  Set by AvaTax.",
        "type": "string",
        "readOnly": true
      },
      "registeredDate": {
        "format": "date-time",
        "description": "The date when this location was registered with a tax authority.  Not required.",
        "type": "string",
        "example": "2015-01-01T00:00:00"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      },
      "settings": {
        "description": "Extra information required by certain jurisdictions for filing.\r\nFor a list of settings recognized by Avalara, query the endpoint \"/api/v2/definitions/locationquestions\". \r\nTo determine the list of settings required for this location, query the endpoint \"/api/v2/companies/(id)/locations/(id)/validate\".",
        "type": "array",
        "items": {
          "$ref": "#/definitions/LocationSettingModel"
        },
        "example": [
          {
            "questionId": 17,
            "value": "abcdefghij"
          }
        ]
      }
    },
    "example": {
      "id": 56789,
      "companyId": 12345,
      "locationCode": "DEFAULT",
      "description": "Bob's Artisan Pottery",
      "addressTypeId": "Location",
      "addressCategoryId": "MainOffice",
      "line1": "2000 Main Street",
      "city": "Irvine",
      "county": "Orange",
      "region": "CA",
      "postalCode": "92614",
      "country": "US",
      "isDefault": true,
      "isRegistered": true,
      "dbaName": "Bob's Artisan Pottery",
      "outletName": "Main Office",
      "registeredDate": "2015-01-01T00:00:00",
      "settings": [
        {
          "questionId": 17,
          "value": "abcdefghij"
        }
      ]
    },
    "x-methods-used-in": [
      "Locations/CreateLocations",
      "Locations/GetLocation",
      "Locations/UpdateLocation"
    ]
  },
  "NexusModel": {
    "description": "Represents a declaration of nexus within a particular taxing jurisdiction.",
    "required": [
      "id",
      "companyId",
      "country",
      "region",
      "jurisCode",
      "jurisName"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this declaration of nexus.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the company that declared nexus.",
        "type": "integer",
        "example": 0
      },
      "country": {
        "description": "Name or ISO 3166 code identifying the country in which this company declared nexus.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string",
        "example": "US"
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region within the country.\r\n\r\nIf the `jurisTypeId` field is set to `CNT` or `Country`, this field can be left blank.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string",
        "example": "CA"
      },
      "jurisTypeId": {
        "description": "The jurisdiction type of the jurisdiction in which this company declared nexus.",
        "enum": [
          "STA",
          "CTY",
          "CIT",
          "STJ",
          "CNT"
        ],
        "type": "string",
        "example": "STA",
        "x-enum-type": "JurisTypeId",
        "x-enum-description": "Types of jurisdiction referenced in a transaction",
        "x-enum-value-comments": {
          "STA": "State",
          "CTY": "County",
          "CIT": "City",
          "STJ": "Special",
          "CNT": "Country"
        }
      },
      "jurisCode": {
        "description": "The code identifying the jurisdiction in which this company declared nexus.",
        "maxLength": 10,
        "minLength": 0,
        "type": "string",
        "readOnly": true,
        "example": "06"
      },
      "jurisName": {
        "description": "The common name of the jurisdiction in which this company declared nexus.",
        "maxLength": 200,
        "minLength": 0,
        "type": "string",
        "readOnly": true,
        "example": "CALIFORNIA"
      },
      "effectiveDate": {
        "format": "date-time",
        "description": "The date when this nexus began.  If not known, set to null.",
        "type": "string",
        "x-date-type": "date-only"
      },
      "endDate": {
        "format": "date-time",
        "description": "If this nexus will end or has ended on a specific date, set this to the date when this nexus ends.",
        "type": "string",
        "x-date-type": "date-only"
      },
      "shortName": {
        "description": "The short name of the jurisdiction.",
        "maxLength": 15,
        "minLength": 0,
        "type": "string",
        "readOnly": true,
        "example": "CA"
      },
      "signatureCode": {
        "description": "The signature code of the boundary region as defined by Avalara.",
        "maxLength": 4,
        "minLength": 0,
        "type": "string",
        "readOnly": true,
        "example": ""
      },
      "stateAssignedNo": {
        "description": "The state assigned number of this jurisdiction.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "readOnly": true,
        "example": ""
      },
      "nexusTypeId": {
        "description": "The type of nexus that this company is declaring.\r\n\r\nIf you are voluntarily declaring nexus in a jurisdiction, you should select `SalesOrSellersUseTax` for your\r\nnexus type option.  This option allows you to calculate tax correctly whether you are selling in-state or\r\nshipping from an out-of-state location.\r\n\r\nIf you are legally obligated to declare nexus due to physical presence or other sufficient nexus, you\r\nshould select `SalesTax`.  This indicates that, as a legal requirement, your company must always collect\r\nand remit full sales tax in this jurisdiction.\r\n\r\nIf you are participating in the Streamlined Sales Tax program, your SST administrator will select nexus\r\nsettings for you in all SST jurisdictions.  Do not select any SST options by yourself.",
        "enum": [
          "None",
          "SalesOrSellersUseTax",
          "SalesTax",
          "SSTVolunteer",
          "SSTNonVolunteer"
        ],
        "type": "string",
        "example": "SalesOrSellersUseTax",
        "x-enum-type": "NexusTypeId",
        "x-enum-description": "Describes the different types of statuses which describe an entity (company).",
        "x-enum-value-comments": {
          "None": "Indicates no nexus",
          "SalesOrSellersUseTax": "Indicates the entity is voluntarily collecting tax (default)\n            \n            This has replaced Collect",
          "SalesTax": "Indicates the entity is required to collect tax in the state\n            \n            This has replaced Legal",
          "SSTVolunteer": "Indicates the entity is registered as a Volunteer in an SST state.\n            Only your SST administrator may set this option.",
          "SSTNonVolunteer": "Indicates the entity is registered as a Non-Volunteer in an SST state.\n            Only your SST administrator may set this option."
        }
      },
      "sourcing": {
        "description": "Indicates whether this nexus is defined as origin or destination nexus.",
        "enum": [
          "Mixed",
          "Destination",
          "Origin"
        ],
        "type": "string",
        "x-enum-type": "Sourcing",
        "x-enum-description": "Sourcing",
        "x-enum-value-comments": {
          "Origin": "Origin",
          "Destination": "Destination",
          "Mixed": "Mixed sourcing, for states that do both origin and destination calculation"
        }
      },
      "hasLocalNexus": {
        "description": "True if you are also declaring local nexus within this jurisdiction.\r\nMany U.S. states have options for declaring nexus in local jurisdictions as well as within the state.",
        "type": "boolean",
        "example": true
      },
      "localNexusTypeId": {
        "description": "If you are declaring local nexus within this jurisdiction, this indicates whether you are declaring only \r\na specified list of local jurisdictions, all state-administered local jurisdictions, or all local jurisdictions.",
        "enum": [
          "Selected",
          "StateAdministered",
          "All"
        ],
        "type": "string",
        "x-enum-type": "LocalNexusTypeId",
        "x-enum-description": "Describes nexus type id",
        "x-enum-value-comments": {
          "Selected": "Only the specific nexus objects declared for this company are declared.",
          "StateAdministered": "Customer declares nexus in all state administered taxing authorities.\n            \n            This value only takes effect if you set `hasLocalNexus` = true.",
          "All": "Customer declares nexus in all local taxing authorities.  \n            \n            This value only takes effect if you set `hasLocalNexus` = true."
        }
      },
      "hasPermanentEstablishment": {
        "description": "Set this value to true if your company has a permanent establishment within this jurisdiction.",
        "type": "boolean",
        "example": true
      },
      "taxId": {
        "description": "Optional - the tax identification number under which you declared nexus.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "streamlinedSalesTax": {
        "description": "For the United States, this flag indicates whether this particular nexus falls within a U.S. State that participates \r\nin the Streamlined Sales Tax program.  For countries other than the US, this flag is null.",
        "type": "boolean",
        "example": false
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true,
        "example": "2006-10-08T18:21:34.15"
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true,
        "example": "2018-01-09T23:42:04.27"
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "nexusTaxTypeGroup": {
        "description": "The type of nexus that this company is declaring.Replaces NexusTypeId.\r\nUse `/api/v2/definitions/taxtypegroups` for a list of tax type groups.",
        "type": "string",
        "example": "SalesAndUse"
      },
      "taxAuthorityId": {
        "format": "int64",
        "description": "The tax authority id associated with the jurisdiction the nexus is for",
        "type": "integer"
      },
      "isSellerImporterOfRecord": {
        "description": "For nexus declarations at the country level, specifies whether this company is considered the importer of record in this nexus region.\r\n\r\nSome taxes only apply if the seller is the importer of record for a product.  In cases where companies are working together to\r\nship products, there may be mutual agreement as to which company is the entity designated as importer of record.  The importer\r\nof record will then be the company designated to pay taxes marked as being obligated to the importer of record.\r\n\r\nSet this value to `true` to consider your company as the importer of record and collect these taxes.  Leave this value as false\r\nor null and taxes will be calculated as if your company is not the importer of record.\r\n\r\nThis value may also be set during each transaction API call.  See `CreateTransaction()` for more information.",
        "type": "boolean"
      }
    },
    "example": {
      "id": 0,
      "companyId": 0,
      "country": "US",
      "region": "CA",
      "jurisTypeId": "STA",
      "jurisCode": "06",
      "jurisName": "CALIFORNIA",
      "shortName": "CA",
      "signatureCode": "",
      "stateAssignedNo": "",
      "nexusTypeId": "SalesOrSellersUseTax",
      "hasLocalNexus": true,
      "hasPermanentEstablishment": true,
      "streamlinedSalesTax": false,
      "createdDate": "2006-10-08T18:21:34.15",
      "createdUserId": 0,
      "modifiedDate": "2018-01-09T23:42:04.27",
      "modifiedUserId": 0,
      "nexusTaxTypeGroup": "SalesAndUse",
      "isSellerImporterOfRecord": false
    },
    "x-methods-used-in": [
      "Nexus/CreateNexus",
      "Nexus/GetNexus",
      "Nexus/UpdateNexus"
    ]
  },
  "SettingModel": {
    "description": "This object is used to keep track of custom information about a company.\r\nA setting can refer to any type of data you need to remember about this company object.\r\nWhen creating this object, you may define your own \"set\", \"name\", and \"value\" parameters.\r\nTo define your own values, please choose a \"set\" name that begins with \"X-\" to indicate an extension.",
    "required": [
      "id",
      "companyId",
      "set",
      "name"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this setting.",
        "type": "integer",
        "readOnly": true,
        "example": 56789
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the company this setting refers to.",
        "type": "integer",
        "readOnly": true,
        "example": 12345
      },
      "set": {
        "description": "A user-defined \"set\" containing this name-value pair.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "ItemsToRemember"
      },
      "name": {
        "description": "A user-defined \"name\" for this name-value pair.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Texas"
      },
      "value": {
        "description": "The value of this name-value pair.",
        "maxLength": 200,
        "minLength": 0,
        "type": "string",
        "example": "Alamo"
      }
    },
    "example": {
      "id": 56789,
      "companyId": 12345,
      "set": "ItemsToRemember",
      "name": "Texas",
      "value": "Alamo"
    },
    "x-methods-used-in": [
      "Settings/CreateSettings",
      "Settings/GetSetting",
      "Settings/UpdateSetting"
    ]
  },
  "TaxCodeModel": {
    "description": "Represents a tax code that can be applied to items on a transaction.\r\nA tax code can have specific rules for specific jurisdictions that change the tax calculation behavior.",
    "required": [
      "companyId",
      "taxCode",
      "taxCodeTypeId"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this tax code.",
        "type": "integer",
        "readOnly": true,
        "example": 56789
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the company that owns this tax code.",
        "type": "integer",
        "readOnly": true,
        "example": 12345
      },
      "taxCode": {
        "description": "A code string that identifies this tax code.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "PS081282"
      },
      "taxCodeTypeId": {
        "description": "The type of this tax code.",
        "maxLength": 2,
        "minLength": 0,
        "type": "string",
        "example": "P"
      },
      "description": {
        "description": "A friendly description of this tax code.",
        "maxLength": 255,
        "minLength": 0,
        "type": "string",
        "example": "Yarn"
      },
      "parentTaxCode": {
        "description": "If this tax code is a subset of a different tax code, this identifies the parent code.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "PS080100"
      },
      "isPhysical": {
        "description": "True if this tax code type refers to a physical object.  Read only field.",
        "type": "boolean",
        "readOnly": true,
        "example": true
      },
      "goodsServiceCode": {
        "format": "int64",
        "description": "The Avalara Goods and Service Code represented by this tax code.",
        "type": "integer",
        "example": 0
      },
      "entityUseCode": {
        "description": "The Avalara Entity Use Code represented by this tax code.",
        "maxLength": 40,
        "minLength": 0,
        "type": "string",
        "example": ""
      },
      "isActive": {
        "description": "True if this tax code is active and can be used in transactions.",
        "type": "boolean",
        "example": true
      },
      "isSSTCertified": {
        "description": "True if this tax code has been certified by the Streamlined Sales Tax governing board.\r\nBy default, you should leave this value empty.",
        "type": "boolean",
        "example": false
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      }
    },
    "example": {
      "id": 56789,
      "companyId": 12345,
      "taxCode": "PS081282",
      "taxCodeTypeId": "P",
      "description": "Yarn",
      "parentTaxCode": "PS080100",
      "isPhysical": true,
      "goodsServiceCode": 0,
      "entityUseCode": "",
      "isActive": true,
      "isSSTCertified": false
    },
    "x-methods-used-in": [
      "TaxCodes/CreateTaxCodes",
      "TaxCodes/GetTaxCode",
      "TaxCodes/UpdateTaxCode"
    ]
  },
  "TaxRuleModel": {
    "description": "Represents a tax rule that changes the behavior of Avalara's tax engine for certain products in certain jurisdictions.",
    "required": [
      "id",
      "companyId",
      "jurisCode",
      "country"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this tax rule.",
        "type": "integer",
        "readOnly": true,
        "example": 56789
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the company that owns this tax rule.",
        "type": "integer",
        "readOnly": true,
        "example": 12345
      },
      "taxCodeId": {
        "format": "int32",
        "description": "The unique ID number of the tax code for this rule.\r\nWhen creating or updating a tax rule, you may specify either the taxCodeId value or the taxCode value.",
        "type": "integer"
      },
      "taxCode": {
        "description": "The code string of the tax code for this rule.\r\nWhen creating or updating a tax rule, you may specify either the taxCodeId value or the taxCode value.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "FR020800"
      },
      "stateFIPS": {
        "description": "For U.S. tax rules, this is the state's Federal Information Processing Standard (FIPS) code.",
        "maxLength": 2,
        "minLength": 0,
        "type": "string",
        "example": "04"
      },
      "jurisName": {
        "description": "The name of the jurisdiction to which this tax rule applies.",
        "maxLength": 200,
        "minLength": 0,
        "type": "string",
        "example": "MARICOPA"
      },
      "jurisCode": {
        "description": "The code of the jurisdiction to which this tax rule applies.",
        "maxLength": 10,
        "minLength": 0,
        "type": "string",
        "example": "013"
      },
      "jurisTypeId": {
        "description": "The type of the jurisdiction to which this tax rule applies.",
        "enum": [
          "STA",
          "CTY",
          "CIT",
          "STJ",
          "CNT"
        ],
        "type": "string",
        "example": "CTY",
        "x-enum-type": "JurisTypeId",
        "x-enum-description": "Types of jurisdiction referenced in a transaction",
        "x-enum-value-comments": {
          "STA": "State",
          "CTY": "County",
          "CIT": "City",
          "STJ": "Special",
          "CNT": "Country"
        }
      },
      "customerUsageType": {
        "description": "DEPRECATED - The type of customer usage to which this rule applies.\r\nPlease use entityUseCode instead.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "entityUseCode": {
        "description": "The type of customer usage to which this rule applies.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": ""
      },
      "taxTypeId": {
        "description": "Indicates which tax types to which this rule applies.",
        "enum": [
          "Excise",
          "Lodging",
          "Bottle",
          "All",
          "BothSalesAndUseTax",
          "ConsumerUseTax",
          "ConsumersUseAndSellersUseTax",
          "ConsumerUseAndSalesTax",
          "Fee",
          "VATInputTax",
          "VATNonrecoverableInputTax",
          "VATOutputTax",
          "Rental",
          "SalesTax",
          "UseTax"
        ],
        "type": "string",
        "example": "BothSalesAndUseTax",
        "x-enum-type": "MatchingTaxType",
        "x-enum-description": "This data type is only used when an object must \"Match\" tax types.  By specifying options here,\n            you can indicate which tax types will match for the purposes of this object.\n            For example, if you specify BothSalesAndUseTax, this value matches with both sales and seller's use tax.",
        "x-enum-value-comments": {
          "All": "Match all tax types",
          "BothSalesAndUseTax": "Match both Sales and Use Tax only",
          "ConsumerUseTax": "Match Consumer Use Tax only",
          "SalesTax": "Match Sales Tax only",
          "UseTax": "Match Seller's Use Tax only",
          "VATOutputTax": "Match VAT Output Tax only",
          "VATInputTax": "Match VAT Input Tax only",
          "VATNonrecoverableInputTax": "Match VAT Nonrecoverable Input Tax only",
          "Fee": "Match Fee tax types only",
          "Rental": "Match Rental tax types only",
          "ConsumerUseAndSalesTax": "Match both Consumer Use and Sales Tax types",
          "ConsumersUseAndSellersUseTax": "Match both Consumer Use and Seller's Use Tax types",
          "Excise": "Match medical excise type",
          "Lodging": "Match Lodging tax type",
          "Bottle": "Match bottle tax type"
        }
      },
      "rateTypeId": {
        "description": "(DEPRECATED) Enumerated rate type to which this rule applies.  Please use rateTypeCode instead.",
        "enum": [
          "ReducedA",
          "ReducedB",
          "Food",
          "General",
          "IncreasedStandard",
          "LinenRental",
          "Medical",
          "Parking",
          "SuperReduced",
          "ReducedR",
          "Standard",
          "Zero"
        ],
        "type": "string",
        "x-enum-type": "RateType",
        "x-enum-description": "",
        "x-enum-value-comments": {}
      },
      "rateTypeCode": {
        "description": "Indicates the code of the rate type that applies to this rule.  Use `/api/v2/definitions/ratetypes` for a full list of rate type codes.",
        "maxLength": 1,
        "minLength": 0,
        "type": "string"
      },
      "taxRuleTypeId": {
        "description": "This type value determines the behavior of the tax rule.\r\nYou can specify that this rule controls the product's taxability or exempt / nontaxable status, the product's rate \r\n(for example, if you have been granted an official ruling for your product's rate that differs from the official rate), \r\nor other types of behavior.",
        "enum": [
          "RateRule",
          "RateOverrideRule",
          "BaseRule",
          "ExemptEntityRule",
          "ProductTaxabilityRule",
          "NexusRule"
        ],
        "type": "string",
        "example": "ProductTaxabilityRule",
        "x-enum-type": "TaxRuleTypeId",
        "x-enum-description": "TaxRuleTypeId",
        "x-enum-value-comments": {
          "RateRule": "RateRule",
          "RateOverrideRule": "RateOverrideRule",
          "BaseRule": "BaseRule",
          "ExemptEntityRule": "ExemptEntityRule",
          "ProductTaxabilityRule": "ProductTaxabilityRule",
          "NexusRule": "NexusRule"
        }
      },
      "isAllJuris": {
        "description": "Set this value to true if this tax rule applies in all jurisdictions.",
        "type": "boolean",
        "example": true
      },
      "value": {
        "format": "double",
        "description": "The corrected rate for this tax rule.",
        "type": "number",
        "example": 0
      },
      "cap": {
        "format": "double",
        "description": "The maximum cap for the price of this item according to this rule.",
        "type": "number",
        "example": 0
      },
      "threshold": {
        "format": "double",
        "description": "The per-unit threshold that must be met before this rule applies.",
        "type": "number",
        "example": 0
      },
      "options": {
        "description": "Custom option flags for this rule.",
        "maxLength": 100,
        "minLength": 0,
        "type": "string",
        "example": ""
      },
      "effectiveDate": {
        "format": "date-time",
        "description": "The first date at which this rule applies.  If null, this rule will apply to all dates prior to the end date.",
        "type": "string",
        "example": "2018-01-24T00:00:00-08:00",
        "x-date-type": "date-only"
      },
      "endDate": {
        "format": "date-time",
        "description": "The last date for which this rule applies.  If null, this rule will apply to all dates after the effective date.",
        "type": "string",
        "x-date-type": "date-only"
      },
      "description": {
        "description": "A friendly name for this tax rule.",
        "maxLength": 255,
        "minLength": 0,
        "type": "string",
        "example": "Freight"
      },
      "countyFIPS": {
        "description": "For U.S. tax rules, this is the county's Federal Information Processing Standard (FIPS) code.",
        "maxLength": 3,
        "minLength": 0,
        "type": "string",
        "example": "013"
      },
      "isSTPro": {
        "description": "If true, indicates this rule is for Sales Tax Pro.",
        "type": "boolean",
        "example": false
      },
      "country": {
        "description": "Name or ISO 3166 code identifying the country where this rule will apply.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string",
        "example": "US"
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region where this rule will apply.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.\r\nNOTE: Region is not required for non-US countries because the user may be either creating a Country-level or Region-level rule.",
        "type": "string",
        "example": "AZ"
      },
      "sourcing": {
        "description": "The sourcing types to which this rule applies.",
        "enum": [
          "Mixed",
          "Destination",
          "Origin"
        ],
        "type": "string",
        "x-enum-type": "Sourcing",
        "x-enum-description": "Sourcing",
        "x-enum-value-comments": {
          "Origin": "Origin",
          "Destination": "Destination",
          "Mixed": "Mixed sourcing, for states that do both origin and destination calculation"
        }
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      },
      "taxTypeGroup": {
        "description": "The group Id of tax types supported by Avalara. Refer to /api/v2/definitions/taxtypegroups for types we support.",
        "type": "string",
        "example": "SalesAndUse"
      },
      "taxSubType": {
        "description": "The Id of sub tax types supported by Avalara. Refer to /api/v2/definitions/taxsubtypes for types we support.",
        "type": "string",
        "example": "ALL"
      },
      "taxTypeMappingId": {
        "format": "int32",
        "description": "Id for TaxTypeMapping object",
        "type": "integer",
        "readOnly": true
      },
      "rateTypeTaxTypeMappingId": {
        "format": "int32",
        "description": "Id for RateTypeTaxTypeMapping object",
        "type": "integer",
        "readOnly": true
      },
      "nonPassthroughExpression": {
        "description": "Indicates the expression to use to determine whether this tax rule generates a non-passthrough tax.\r\n\r\nNon-passthrough taxes are taxes that cannot be charged to the customer.",
        "maxLength": 500,
        "minLength": 0,
        "type": "string"
      },
      "currencyCode": {
        "description": "The currency code to use for this rule.",
        "maxLength": 3,
        "minLength": 0,
        "type": "string"
      },
      "preferredProgramId": {
        "format": "int32",
        "description": "For rules that only apply to one tax code program, this value indicates what program should be used for implementing this rule.",
        "type": "integer"
      },
      "uomId": {
        "format": "int32",
        "description": "For tax rules that are calculated using units of measurement, this indicates the unit of measurement type\r\nused to calculate the amounts for this rule.\r\n\r\nFor a list of units of measurement, please call `ListUnitsOfMeasurement()`.",
        "type": "integer"
      }
    },
    "example": {
      "id": 56789,
      "companyId": 12345,
      "taxCode": "FR020800",
      "stateFIPS": "04",
      "jurisName": "MARICOPA",
      "jurisCode": "013",
      "jurisTypeId": "CTY",
      "entityUseCode": "",
      "taxTypeId": "BothSalesAndUseTax",
      "taxRuleTypeId": "ProductTaxabilityRule",
      "isAllJuris": true,
      "value": 0,
      "cap": 0,
      "threshold": 0,
      "options": "",
      "effectiveDate": "2018-01-24",
      "description": "Freight",
      "countyFIPS": "013",
      "isSTPro": false,
      "country": "US",
      "region": "AZ",
      "taxTypeGroup": "SalesAndUse",
      "taxSubType": "ALL"
    },
    "x-methods-used-in": [
      "TaxRules/CreateTaxRules",
      "TaxRules/GetTaxRule",
      "TaxRules/UpdateTaxRule"
    ]
  },
  "UPCModel": {
    "description": "One Universal Product Code object as defined for your company.",
    "required": [
      "id",
      "companyId",
      "upc",
      "description"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number for this UPC.",
        "type": "integer",
        "readOnly": true,
        "example": 123456789
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the company to which this UPC belongs.",
        "type": "integer",
        "readOnly": true,
        "example": 1234567
      },
      "upc": {
        "description": "The 12-14 character Universal Product Code, European Article Number, or Global Trade Identification Number.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "023032550992"
      },
      "legacyTaxCode": {
        "description": "Legacy Tax Code applied to any product sold with this UPC.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "PS081282"
      },
      "description": {
        "description": "Description of the product to which this UPC applies.",
        "maxLength": 255,
        "minLength": 0,
        "type": "string",
        "example": "Yarn"
      },
      "effectiveDate": {
        "format": "date-time",
        "description": "If this UPC became effective on a certain date, this contains the first date on which the UPC was effective.",
        "type": "string",
        "x-date-type": "date-only"
      },
      "endDate": {
        "format": "date-time",
        "description": "If this UPC expired or will expire on a certain date, this contains the last date on which the UPC was effective.",
        "type": "string",
        "x-date-type": "date-only"
      },
      "usage": {
        "format": "int32",
        "description": "A usage identifier for this UPC code.",
        "type": "integer"
      },
      "isSystem": {
        "format": "int32",
        "description": "A flag indicating whether this UPC code is attached to the AvaTax system or to a company.",
        "type": "integer"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      }
    },
    "example": {
      "id": 123456789,
      "companyId": 1234567,
      "upc": "023032550992",
      "legacyTaxCode": "PS081282",
      "description": "Yarn"
    },
    "x-methods-used-in": [
      "Upcs/CreateUPCs",
      "Upcs/GetUPC",
      "Upcs/UpdateUPC"
    ]
  },
  "EcmsModel": {
    "description": "Exempt certificate",
    "required": [
      "exemptCertId",
      "companyId",
      "customerCode",
      "region",
      "country",
      "exemptCertTypeId",
      "businessTypeId",
      "regionsApplicable",
      "exemptCertStatusId"
    ],
    "type": "object",
    "properties": {
      "exemptCertId": {
        "format": "int32",
        "description": "Exempt certificate ID",
        "type": "integer",
        "readOnly": true,
        "example": 123
      },
      "companyId": {
        "format": "int32",
        "description": "Company ID",
        "type": "integer",
        "example": 456
      },
      "customerCode": {
        "description": "Customer code",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "ABA"
      },
      "customerName": {
        "description": "Customer name",
        "maxLength": 100,
        "minLength": 0,
        "type": "string"
      },
      "address1": {
        "description": "Address line 1",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "address2": {
        "description": "Address line 2",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "address3": {
        "description": "Address line 3",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "city": {
        "description": "City",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region within the country.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string"
      },
      "postalCode": {
        "description": "Postal code / zip code",
        "maxLength": 10,
        "minLength": 0,
        "type": "string"
      },
      "country": {
        "description": "Name or ISO 3166 code identifying the country.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string"
      },
      "exemptCertTypeId": {
        "description": "Exempt cert type",
        "enum": [
          "Blanket",
          "SingleUse"
        ],
        "type": "string",
        "example": "SingleUse",
        "x-enum-type": "ExemptCertTypeId",
        "x-enum-description": "Exempt Cert type",
        "x-enum-value-comments": {
          "Blanket": "Blanked certificate",
          "SingleUse": "Single use"
        }
      },
      "documentRefNo": {
        "description": "Document Reference Number",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "businessTypeId": {
        "format": "byte",
        "description": "Business type",
        "type": "integer",
        "example": 2
      },
      "businessTypeOtherDescription": {
        "description": "Other description for this business type",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "exemptReasonId": {
        "description": "Exempt reason ID",
        "maxLength": 1,
        "minLength": 0,
        "type": "string",
        "example": "A"
      },
      "exemptReasonOtherDescription": {
        "description": "Other description for exempt reason",
        "maxLength": 255,
        "minLength": 0,
        "type": "string",
        "example": "test"
      },
      "effectiveDate": {
        "format": "date-time",
        "description": "Effective date for this exempt certificate",
        "type": "string"
      },
      "regionsApplicable": {
        "description": "A list of applicable regions for this exempt certificate.\r\n\r\nTo list more than one applicable region, separate the list of region codes with commas.",
        "maxLength": 200,
        "minLength": 0,
        "type": "string"
      },
      "exemptCertStatusId": {
        "description": "Status for this exempt certificate",
        "enum": [
          "Inactive",
          "Active",
          "Expired",
          "Revoked"
        ],
        "type": "string",
        "example": "Active",
        "x-enum-type": "ExemptCertStatusId",
        "x-enum-description": "Status for this exempt certificate",
        "x-enum-value-comments": {
          "Inactive": "Inactive certificate",
          "Active": "Active certificate",
          "Expired": "Expired certificate",
          "Revoked": "Revoked certificate"
        }
      },
      "createdDate": {
        "format": "date-time",
        "description": "Date when this exempt certificate was created",
        "type": "string"
      },
      "lastTransactionDate": {
        "format": "date-time",
        "description": "Date when last transaction with this exempt certificate happened",
        "type": "string",
        "readOnly": true
      },
      "expiryDate": {
        "format": "date-time",
        "description": "When this exempt certificate will expire",
        "type": "string"
      },
      "createdUserId": {
        "format": "int32",
        "description": "User that creates the certificate",
        "type": "integer",
        "example": 0
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "Date when this exempt certificate was modified",
        "type": "string",
        "example": "0001-01-01T00:00:00"
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "Who modified this exempt certificate",
        "type": "integer",
        "example": 0
      },
      "countryIssued": {
        "description": "Name or ISO 3166 code identifying the country that issued this ECMS certificate.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string"
      },
      "avaCertId": {
        "description": "Certificate ID for AvaTax?",
        "maxLength": 10,
        "minLength": 0,
        "type": "string"
      },
      "exemptCertReviewStatusId": {
        "description": "Review status for this exempt certificate",
        "enum": [
          "Pending",
          "Accepted",
          "Rejected"
        ],
        "type": "string",
        "example": "Pending",
        "x-enum-type": "ExemptCertReviewStatusId",
        "x-enum-description": "Exempt certificate review status",
        "x-enum-value-comments": {
          "Pending": "Review pending",
          "Accepted": "Certificate was accepted",
          "Rejected": "Certificate was rejected"
        }
      },
      "details": {
        "description": "Exempt Cert details",
        "type": "array",
        "items": {
          "$ref": "#/definitions/EcmsDetailModel"
        }
      }
    },
    "example": {
      "exemptCertId": 123,
      "companyId": 456,
      "customerCode": "ABA",
      "exemptCertTypeId": "SingleUse",
      "businessTypeId": 2,
      "exemptReasonId": "A",
      "exemptReasonOtherDescription": "test",
      "exemptCertStatusId": "Active",
      "createdUserId": 0,
      "modifiedDate": "0001-01-01T00:00:00",
      "modifiedUserId": 0,
      "exemptCertReviewStatusId": "Pending"
    },
    "x-methods-used-in": []
  },
  "LocationSettingModel": {
    "description": "Represents the answer to one local jurisdiction question for a location.",
    "type": "object",
    "properties": {
      "questionId": {
        "format": "int32",
        "description": "The unique ID number of the location question answered.",
        "type": "integer",
        "example": 17
      },
      "value": {
        "description": "The answer the user provided.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "abcdefghij"
      }
    },
    "example": {
      "questionId": 17,
      "value": "abcdefghij"
    },
    "x-methods-used-in": []
  },
  "EcmsDetailModel": {
    "description": "Represents an ECMS record, used internally by AvaTax to track information about exemptions.",
    "required": [
      "exemptCertDetailId",
      "exemptCertId",
      "stateFips",
      "region",
      "country"
    ],
    "type": "object",
    "properties": {
      "exemptCertDetailId": {
        "format": "int32",
        "description": "detail id",
        "type": "integer",
        "example": 1235
      },
      "exemptCertId": {
        "format": "int32",
        "description": "exempt certificate id",
        "type": "integer",
        "example": 1111
      },
      "stateFips": {
        "description": "State FIPS",
        "maxLength": 2,
        "minLength": 0,
        "type": "string",
        "example": "AAA"
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region within the country.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string",
        "example": "WA"
      },
      "idNo": {
        "description": "ID number",
        "maxLength": 100,
        "minLength": 0,
        "type": "string"
      },
      "country": {
        "description": "Name or ISO 3166 code identifying the country.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string",
        "example": "US"
      },
      "endDate": {
        "format": "date-time",
        "description": "End date of this exempt certificate",
        "type": "string",
        "example": "2018-01-24T00:00:00-08:00"
      },
      "idType": {
        "description": "ID type of this exempt certificate",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "TIN"
      },
      "isTaxCodeListExclusionList": {
        "format": "byte",
        "description": "Is the tax code list an exculsion list?",
        "type": "integer",
        "example": 0
      },
      "taxCodes": {
        "description": "optional: list of tax code associated with this exempt certificate detail",
        "type": "array",
        "items": {
          "$ref": "#/definitions/EcmsDetailTaxCodeModel"
        }
      }
    },
    "example": {
      "exemptCertDetailId": 1235,
      "exemptCertId": 1111,
      "stateFips": "AAA",
      "region": "WA",
      "country": "US",
      "endDate": "2018-01-24T00:00:00-08:00",
      "idType": "TIN",
      "isTaxCodeListExclusionList": 0
    },
    "x-methods-used-in": []
  },
  "EcmsDetailTaxCodeModel": {
    "description": "",
    "type": "object",
    "properties": {
      "exemptCertDetailTaxCodeId": {
        "format": "int32",
        "description": "Id of the exempt certificate detail tax code",
        "type": "integer",
        "example": 4316
      },
      "exemptCertDetailId": {
        "format": "int32",
        "description": "exempt certificate detail id",
        "type": "integer",
        "example": 1235
      },
      "taxCodeId": {
        "format": "int32",
        "description": "tax code id",
        "type": "integer",
        "example": 0
      }
    },
    "example": {
      "exemptCertDetailTaxCodeId": 4316,
      "exemptCertDetailId": 1235,
      "taxCodeId": 0
    },
    "x-methods-used-in": []
  },
  "FetchResult[MrsCompanyModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/MrsCompanyModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Companies/ListMrsCompanies"
    ]
  },
  "MrsCompanyModel": {
    "description": "A company and account",
    "type": "object",
    "properties": {
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of this company.",
        "type": "integer",
        "example": 12345
      },
      "companyName": {
        "description": "The name of this company, as shown to customers.",
        "type": "string",
        "example": "Default Company"
      },
      "accountId": {
        "format": "int32",
        "description": "The unique ID number of the account this company belongs to.",
        "type": "integer",
        "example": 123456789
      },
      "accountName": {
        "description": "The name of this account, as shown to customers.",
        "type": "string",
        "example": "Default Account"
      },
      "tin": {
        "description": "The taxpayer identification number for the company",
        "type": "string"
      },
      "companyCode": {
        "description": "The company code for the company",
        "type": "string"
      }
    },
    "example": {
      "companyId": 12345,
      "companyName": "Default Company",
      "accountId": 123456789,
      "accountName": "Default Account"
    },
    "x-methods-used-in": []
  },
  "FetchResult[CompanyModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/CompanyModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Companies/QueryCompanies"
    ]
  },
  "CompanyInitializationModel": {
    "description": "Company Initialization Model",
    "required": [
      "name",
      "companyCode",
      "line1",
      "city",
      "region",
      "postalCode",
      "country",
      "firstName",
      "lastName",
      "email",
      "phoneNumber"
    ],
    "type": "object",
    "properties": {
      "name": {
        "description": "Company Name",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Bob's Artisan Pottery"
      },
      "companyCode": {
        "description": "Company Code - used to distinguish between companies within your accounting system",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "DEFAULT"
      },
      "vatRegistrationId": {
        "description": "Vat Registration Id - leave blank if not known.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "taxpayerIdNumber": {
        "description": "United States Taxpayer ID number, usually your Employer Identification Number if you are a business or your \r\nSocial Security Number if you are an individual.\r\nThis value is required if you subscribe to Avalara Managed Returns or the SST Certified Service Provider services, \r\nbut it is optional if you do not subscribe to either of those services.",
        "maxLength": 11,
        "minLength": 0,
        "type": "string",
        "example": "12-3456789"
      },
      "line1": {
        "description": "Address Line1",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "2000 Main Street"
      },
      "line2": {
        "description": "Line2",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "line3": {
        "description": "Line3",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "city": {
        "description": "City",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Irvine"
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region within the country.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string",
        "example": "CA"
      },
      "postalCode": {
        "description": "Postal Code",
        "maxLength": 10,
        "minLength": 0,
        "type": "string",
        "example": "92614"
      },
      "country": {
        "description": "Name or ISO 3166 code identifying the country.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string",
        "example": "US"
      },
      "firstName": {
        "description": "First Name",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Bob"
      },
      "lastName": {
        "description": "Last Name",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Example"
      },
      "title": {
        "description": "Title",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Owner"
      },
      "email": {
        "description": "Email",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "bob@example.org"
      },
      "phoneNumber": {
        "description": "Phone Number",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "714 555-2121"
      },
      "mobileNumber": {
        "description": "Mobile Number",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "714 555-1212"
      },
      "faxNumber": {
        "description": "Fax Number",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "parentCompanyId": {
        "format": "int32",
        "description": "Parent Company ID",
        "type": "integer"
      }
    },
    "example": {
      "name": "Bob's Artisan Pottery",
      "companyCode": "DEFAULT",
      "taxpayerIdNumber": "12-3456789",
      "line1": "2000 Main Street",
      "city": "Irvine",
      "region": "CA",
      "postalCode": "92614",
      "country": "US",
      "firstName": "Bob",
      "lastName": "Example",
      "title": "Owner",
      "email": "bob@example.org",
      "phoneNumber": "714 555-2121",
      "mobileNumber": "714 555-1212"
    },
    "x-methods-used-in": [
      "Companies/CompanyInitialize"
    ]
  },
  "FundingStatusModel": {
    "description": "Status of an Avalara Managed Returns funding configuration for a company",
    "type": "object",
    "properties": {
      "requestId": {
        "format": "int64",
        "description": "The unique ID number of this funding request",
        "type": "integer"
      },
      "subledgerProfileID": {
        "format": "int32",
        "description": "SubledgerProfileID",
        "type": "integer"
      },
      "companyID": {
        "description": "CompanyID",
        "type": "string"
      },
      "domain": {
        "description": "Domain",
        "type": "string"
      },
      "recipient": {
        "description": "Recipient",
        "type": "string"
      },
      "sender": {
        "description": "Sender",
        "type": "string"
      },
      "documentKey": {
        "description": "DocumentKey",
        "type": "string"
      },
      "documentType": {
        "description": "DocumentType",
        "type": "string"
      },
      "documentName": {
        "description": "DocumentName",
        "type": "string"
      },
      "methodReturn": {
        "$ref": "#/definitions/FundingESignMethodReturn",
        "description": "MethodReturn"
      },
      "status": {
        "description": "Status",
        "type": "string"
      },
      "errorMessage": {
        "description": "ErrorMessage",
        "type": "string"
      },
      "lastPolled": {
        "format": "date-time",
        "description": "LastPolled",
        "type": "string"
      },
      "lastSigned": {
        "format": "date-time",
        "description": "LastSigned",
        "type": "string"
      },
      "lastActivated": {
        "format": "date-time",
        "description": "LastActivated",
        "type": "string"
      },
      "templateRequestId": {
        "format": "int64",
        "description": "TemplateRequestId",
        "type": "integer"
      }
    },
    "example": {
      "requestId": 12345,
      "subledgerProfileID": 12345,
      "companyID": "123456",
      "domain": "AvaTax15",
      "recipient": "bob@example.org",
      "sender": "treasury@avalara.com",
      "documentKey": "RTdIy3AAABLblqZhBCV9kul4F1qC -",
      "documentType": "ACH",
      "documentName": "New Customer - Avalara Returns Funding Power of Attorney",
      "methodReturn": {
        "javaScriptReady": false
      },
      "status": "Expired",
      "lastPolled": "2016-01-01T20:16:17",
      "lastActivated": "2016-01-01T19:16:17"
    },
    "x-methods-used-in": [
      "Companies/ListFundingRequestsByCompany",
      "Companies/CreateFundingRequest",
      "FundingRequests/FundingRequestStatus",
      "FundingRequests/ActivateFundingRequest"
    ]
  },
  "FundingESignMethodReturn": {
    "description": "Represents the current status of a funding ESign method",
    "type": "object",
    "properties": {
      "method": {
        "description": "Method",
        "type": "string"
      },
      "javaScriptReady": {
        "description": "JavaScriptReady",
        "type": "boolean"
      },
      "javaScript": {
        "description": "The actual javascript to use to render this object",
        "type": "string"
      }
    },
    "example": {
      "method": "",
      "javaScriptReady": false
    },
    "x-methods-used-in": []
  },
  "FundingConfigurationModel": {
    "description": "Status of an Avalara Managed Returns funding configuration for a company",
    "type": "object",
    "properties": {
      "companyId": {
        "format": "int32",
        "description": "CompanyID",
        "type": "integer",
        "example": 2793
      },
      "systemType": {
        "description": "Domain",
        "type": "string",
        "example": "AvaTax15"
      },
      "currency": {
        "description": "Recipient",
        "type": "string",
        "example": "USD"
      },
      "isFundingSetup": {
        "description": "Sender",
        "type": "boolean",
        "example": true
      },
      "fundingMethod": {
        "description": "DocumentKey",
        "type": "string",
        "example": "ACH Pull"
      },
      "lastUpdated": {
        "format": "date-time",
        "description": "LastPolled",
        "type": "string",
        "example": "2018-01-24T12:04:52.2523977-08:00"
      }
    },
    "example": {
      "companyId": 2793,
      "systemType": "AvaTax15",
      "currency": "USD",
      "isFundingSetup": true,
      "fundingMethod": "ACH Pull",
      "lastUpdated": "2018-01-24T12:04:52.2523977-08:00"
    },
    "x-methods-used-in": [
      "Companies/FundingConfigurationByCompany",
      "Companies/FundingConfigurationsByCompanyAndCurrency"
    ]
  },
  "FundingInitiateModel": {
    "description": "",
    "required": [
      "fundingEmailRecipient"
    ],
    "type": "object",
    "properties": {
      "requestEmail": {
        "description": "Set this value to true to request an email to the recipient",
        "type": "boolean",
        "example": true
      },
      "fundingEmailRecipient": {
        "description": "If you have requested an email for funding setup, this is the recipient who will receive an \r\nemail inviting them to setup funding configuration for Avalara Managed Returns.  The recipient can\r\nthen click on a link in the email and setup funding configuration for this company.",
        "type": "string",
        "example": "user@example.org"
      },
      "requestWidget": {
        "description": "Set this value to true to request an HTML-based funding widget that can be embedded within an \r\nexisting user interface.  A user can then interact with the HTML-based funding widget to set up\r\nfunding information for the company.",
        "type": "boolean"
      }
    },
    "example": {
      "requestEmail": true,
      "fundingEmailRecipient": "user@example.org"
    },
    "x-methods-used-in": [
      "Companies/CreateFundingRequest"
    ]
  },
  "CompanyConfigurationModel": {
    "description": "Represents one configuration setting for this company",
    "required": [
      "category",
      "name"
    ],
    "type": "object",
    "properties": {
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the account to which this setting applies",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "category": {
        "description": "The category of the configuration setting.  Avalara-defined categories include `AddressServiceConfig` and `TaxServiceConfig`.  Customer-defined categories begin with `X-`.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "AvaCertServiceConfig"
      },
      "name": {
        "description": "The name of the configuration setting",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "AllowPending"
      },
      "value": {
        "description": "The current value of the configuration setting",
        "maxLength": 1000,
        "minLength": 0,
        "type": "string",
        "example": "true"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      }
    },
    "example": {
      "companyId": 0,
      "category": "AvaCertServiceConfig",
      "name": "AllowPending",
      "value": "true"
    },
    "x-methods-used-in": [
      "Companies/GetCompanyConfiguration",
      "Companies/SetCompanyConfiguration"
    ]
  },
  "FilingStatusChangeModel": {
    "description": "Represents a change request for filing status for a company",
    "type": "object",
    "properties": {
      "requestedStatus": {
        "description": "Indicates the filing status you are requesting for this company",
        "enum": [
          "NoReporting",
          "NotYetFiling",
          "FilingRequested",
          "FirstFiling",
          "Active",
          "NotConfiguredForCompliance"
        ],
        "type": "string",
        "example": "FirstFiling",
        "x-enum-type": "CompanyFilingStatus",
        "x-enum-description": "Indicates whether Avalara Managed Returns has begun filing for this company.",
        "x-enum-value-comments": {
          "NoReporting": "This company is not a reporting entity and cannot file taxes.  To change this behavior, you must mark\n            the company as a reporting entity.",
          "NotYetFiling": "This company is a reporting entity, but Avalara is not currently filing tax returns for this company.",
          "FilingRequested": "The customer has requested that Avalara Managed Returns begin filing for this company, however filing has\n            not yet started.  Avalara's compliance team is reviewing this request and will update the company to\n            first filing status when complete.",
          "FirstFiling": "Avalara has begun filing tax returns for this company.  Normally, this status will change to `Active` after \n            one month of successful filing of tax returns.",
          "Active": "Avalara currently files tax returns for this company.",
          "NotConfiguredForCompliance": "This company has not been configured for compliance"
        }
      }
    },
    "example": {
      "requestedStatus": "FirstFiling"
    },
    "x-methods-used-in": [
      "Companies/ChangeFilingStatus"
    ]
  },
  "FetchResult[ContactModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ContactModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Contacts/ListContactsByCompany",
      "Contacts/QueryContacts"
    ]
  },
  "LinkCertificatesModel": {
    "description": "Represents a customer to whom you sell products and/or services.",
    "type": "object",
    "properties": {
      "certificates": {
        "description": "An array of certificate ID numbers to link",
        "type": "array",
        "items": {
          "format": "int32",
          "type": "integer"
        },
        "example": [
          1,
          3
        ]
      }
    },
    "example": {
      "certificates": [
        1,
        3
      ]
    },
    "x-methods-used-in": [
      "Customers/LinkCertificatesToCustomer",
      "Customers/UnlinkCertificatesFromCustomer"
    ]
  },
  "ExemptionStatusModel": {
    "description": "Indicates the customer's exemption status in a specific country and region.",
    "type": "object",
    "properties": {
      "status": {
        "description": "The exemption status of this customer in this country/region.",
        "type": "string",
        "example": "Exempt"
      },
      "certificate": {
        "$ref": "#/definitions/CertificateModel",
        "description": "Certificate if the customer is exempted",
        "example": {
          "id": 0,
          "signedDate": "2016-02-01",
          "expirationDate": "2020-12-31",
          "filename": "faf02f0b-eb1d-4960-9de9-6c2bdccde922",
          "valid": true,
          "verified": false,
          "exemptPercentage": 0,
          "isSingleCertificate": false,
          "exemptionReason": {
            "name": "EXPOSURE"
          },
          "createdDate": "2018-01-24T20:04:52.2836476Z",
          "modifiedDate": "2018-01-24",
          "pageCount": 0,
          "customers": [
            {
              "companyId": 0,
              "customerCode": "8fc74736-90d3-498d-970c-fdf6a94d0492"
            },
            {
              "companyId": 0,
              "customerCode": "166b9123-a962-4b15-bf7f-a0db581905c3"
            }
          ],
          "exposureZone": {
            "name": "Washington"
          }
        }
      }
    },
    "example": {
      "status": "Exempt",
      "certificate": {
        "id": 0,
        "signedDate": "2016-02-01",
        "expirationDate": "2020-12-31",
        "filename": "faf02f0b-eb1d-4960-9de9-6c2bdccde922",
        "valid": true,
        "verified": false,
        "exemptPercentage": 0,
        "isSingleCertificate": false,
        "exemptionReason": {
          "name": "EXPOSURE"
        },
        "createdDate": "2018-01-24T20:04:52.2836476Z",
        "modifiedDate": "2018-01-24",
        "pageCount": 0,
        "customers": [
          {
            "companyId": 0,
            "customerCode": "8fc74736-90d3-498d-970c-fdf6a94d0492"
          },
          {
            "companyId": 0,
            "customerCode": "166b9123-a962-4b15-bf7f-a0db581905c3"
          }
        ],
        "exposureZone": {
          "name": "Washington"
        }
      }
    },
    "x-methods-used-in": [
      "Customers/ListValidCertificatesForCustomer"
    ]
  },
  "FetchResult[NexusModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NexusModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListNexus",
      "Definitions/ListNexusByCountry",
      "Definitions/ListNexusByCountryAndRegion",
      "Definitions/ListNexusByAddress",
      "Nexus/ListNexusByCompany",
      "Nexus/QueryNexus"
    ]
  },
  "NexusByTaxFormModel": {
    "description": "Identifies all nexus that match a particular tax form",
    "type": "object",
    "properties": {
      "formCode": {
        "description": "The code of the tax form that was requested",
        "type": "string",
        "example": "AL2100"
      },
      "companyId": {
        "format": "int32",
        "description": "The company ID of the company that was used to load the companyNexus array.  If this value is null, no company data was loaded.",
        "type": "integer",
        "example": 1
      },
      "nexusDefinitions": {
        "description": "A list of all Avalara-defined nexus that are relevant to this tax form",
        "type": "array",
        "items": {
          "$ref": "#/definitions/NexusModel"
        },
        "example": [
          {
            "id": 42145,
            "companyId": 1,
            "country": "US",
            "region": "AL",
            "jurisTypeId": "STA",
            "jurisCode": "01",
            "jurisName": "ALABAMA",
            "shortName": "AL",
            "signatureCode": "",
            "stateAssignedNo": "",
            "nexusTypeId": "SalesOrSellersUseTax",
            "hasLocalNexus": true,
            "hasPermanentEstablishment": true,
            "streamlinedSalesTax": false,
            "createdDate": "2005-12-21T21:15:41.78",
            "createdUserId": 0,
            "modifiedDate": "2018-01-09T23:41:59.807",
            "modifiedUserId": 0,
            "nexusTaxTypeGroup": "SalesAndUse",
            "isSellerImporterOfRecord": false
          }
        ]
      },
      "companyNexus": {
        "description": "A list of all currently-defined company nexus that are related to this tax form",
        "type": "array",
        "items": {
          "$ref": "#/definitions/NexusModel"
        },
        "example": []
      }
    },
    "example": {
      "formCode": "AL2100",
      "companyId": 1,
      "nexusDefinitions": [
        {
          "id": 42145,
          "companyId": 1,
          "country": "US",
          "region": "AL",
          "jurisTypeId": "STA",
          "jurisCode": "01",
          "jurisName": "ALABAMA",
          "shortName": "AL",
          "signatureCode": "",
          "stateAssignedNo": "",
          "nexusTypeId": "SalesOrSellersUseTax",
          "hasLocalNexus": true,
          "hasPermanentEstablishment": true,
          "streamlinedSalesTax": false,
          "createdDate": "2005-12-21T21:15:41.78",
          "createdUserId": 0,
          "modifiedDate": "2018-01-09T23:41:59.807",
          "modifiedUserId": 0,
          "nexusTaxTypeGroup": "SalesAndUse",
          "isSellerImporterOfRecord": false
        }
      ],
      "companyNexus": []
    },
    "x-methods-used-in": [
      "Definitions/ListNexusByFormCode",
      "Nexus/GetNexusByFormCode"
    ]
  },
  "FetchResult[TaxCodeModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxCodeModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListTaxCodes",
      "TaxCodes/ListTaxCodesByCompany",
      "TaxCodes/QueryTaxCodes"
    ]
  },
  "TaxCodeTypesModel": {
    "description": "Information about Avalara-defined tax code types.\r\nThis list is used when creating tax codes and tax rules.",
    "type": "object",
    "properties": {
      "types": {
        "$ref": "#/definitions/TaxCodeTypesModel > Types"
      }
    },
    "example": {
      "types": {
        "D": "Digital",
        "F": "Freight",
        "O": "Other",
        "P": "Product",
        "S": "Service",
        "U": "Unknown"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListTaxCodeTypes"
    ]
  },
  "FetchResult[SubscriptionTypeModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/SubscriptionTypeModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListSubscriptionTypes"
    ]
  },
  "SubscriptionTypeModel": {
    "description": "Represents a service or a subscription type.",
    "required": [
      "description"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this subscription type.",
        "type": "integer",
        "readOnly": true,
        "example": 2
      },
      "description": {
        "description": "The friendly name of the service this subscription type represents.",
        "maxLength": 255,
        "minLength": 0,
        "type": "string",
        "readOnly": true,
        "example": "AvaTaxPro"
      }
    },
    "example": {
      "id": 2,
      "description": "AvaTaxPro"
    },
    "x-methods-used-in": []
  },
  "FetchResult[String]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListPermissions"
    ]
  },
  "FetchResult[SecurityRoleModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/SecurityRoleModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListSecurityRoles"
    ]
  },
  "SecurityRoleModel": {
    "description": "Represents a single security role.",
    "type": "object",
    "properties": {
      "id": {
        "format": "byte",
        "description": "The unique ID number of this security role.",
        "type": "integer",
        "readOnly": true,
        "example": 3
      },
      "description": {
        "description": "A description of this security role",
        "type": "string",
        "readOnly": true,
        "example": "AccountAdmin"
      }
    },
    "example": {
      "id": 3,
      "description": "AccountAdmin"
    },
    "x-methods-used-in": []
  },
  "FetchResult[TaxAuthorityModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxAuthorityModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListTaxAuthorities"
    ]
  },
  "TaxAuthorityModel": {
    "description": "Tax Authority Model",
    "required": [
      "id",
      "name"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this tax authority.",
        "type": "integer",
        "readOnly": true,
        "example": 12345
      },
      "name": {
        "description": "The friendly name of this tax authority.",
        "maxLength": 128,
        "minLength": 0,
        "type": "string",
        "example": "COLORADO"
      },
      "taxAuthorityTypeId": {
        "format": "int32",
        "description": "The type of this tax authority.",
        "type": "integer",
        "example": 45
      },
      "jurisdictionId": {
        "format": "int32",
        "description": "The unique ID number of the jurisdiction for this tax authority.",
        "type": "integer",
        "example": 12345
      }
    },
    "example": {
      "id": 12345,
      "name": "COLORADO",
      "taxAuthorityTypeId": 45,
      "jurisdictionId": 12345
    },
    "x-methods-used-in": []
  },
  "FetchResult[TaxAuthorityFormModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxAuthorityFormModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListTaxAuthorityForms"
    ]
  },
  "TaxAuthorityFormModel": {
    "description": "Represents a form that can be filed with a tax authority.",
    "required": [
      "taxAuthorityId",
      "formName"
    ],
    "type": "object",
    "properties": {
      "taxAuthorityId": {
        "format": "int32",
        "description": "The unique ID number of the tax authority.",
        "type": "integer",
        "example": 69
      },
      "formName": {
        "description": "The form name of the form for this tax authority.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "CABOE401A2"
      }
    },
    "example": {
      "taxAuthorityId": 69,
      "formName": "CABOE401A2"
    },
    "x-methods-used-in": []
  },
  "FetchResult[ParameterModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ParameterModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListParameters"
    ]
  },
  "ParameterModel": {
    "description": "An extra property that can change the behavior of tax transactions.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique ID number of this property.",
        "type": "integer",
        "example": 12345
      },
      "category": {
        "description": "The category grouping of this parameter.  When your user interface displays a large number of parameters, they should\r\nbe grouped by their category value.",
        "type": "string",
        "example": "Lodging"
      },
      "name": {
        "description": "The name of the property.  To use this property, add a field on the `parameters` object of a `/api/v2/transactions/create` call.",
        "type": "string",
        "example": "AvaTax.Lodging.NumberOfNights"
      },
      "dataType": {
        "description": "The data type of the property.",
        "enum": [
          "String",
          "Boolean",
          "Numeric"
        ],
        "type": "string",
        "example": "Numeric",
        "x-enum-type": "ParameterBagDataType",
        "x-enum-description": "The data type that must be passed in a parameter bag",
        "x-enum-value-comments": {
          "String": "This data type is a string.",
          "Boolean": "This data type is either 'true' or 'false'.",
          "Numeric": "This data type is a numeric value.  It can include decimals."
        }
      },
      "helpText": {
        "description": "Help text to be shown to the user when they are filling out this parameter.  Help text may include HTML links to additional\r\ncontent with more information about a parameter.",
        "type": "string",
        "example": "Please enter the number of nights the customer stayed in your lodging; whole numbers only."
      },
      "serviceTypes": {
        "description": "A list of service types to which this parameter applies.",
        "type": "array",
        "items": {
          "enum": [
            "None",
            "AvaTaxST",
            "AvaTaxPro",
            "AvaTaxGlobal",
            "AutoAddress",
            "AutoReturns",
            "TaxSolver",
            "AvaTaxCsp",
            "Twe",
            "Mrs",
            "AvaCert",
            "AuthorizationPartner",
            "CertCapture",
            "AvaUpc",
            "AvaCUT",
            "AvaLandedCost",
            "AvaLodging",
            "AvaBottle",
            "MRSComplianceManager"
          ],
          "type": "string"
        },
        "example": [
          "AvaLodging"
        ],
        "x-enum-type": "ServiceTypeId",
        "x-enum-description": "Represents the type of service or subscription given to a user",
        "x-enum-value-comments": {
          "None": "None",
          "AvaTaxST": "AvaTaxST",
          "AvaTaxPro": "AvaTaxPro",
          "AvaTaxGlobal": "AvaTaxGlobal",
          "AutoAddress": "AutoAddress",
          "AutoReturns": "AutoReturns",
          "TaxSolver": "TaxSolver",
          "AvaTaxCsp": "AvaTaxCsp",
          "Twe": "Twe",
          "Mrs": "Mrs",
          "AvaCert": "AvaCert",
          "AuthorizationPartner": "AuthorizationPartner",
          "CertCapture": "CertCapture",
          "AvaUpc": "AvaUpc",
          "AvaCUT": "AvaCUT",
          "AvaLandedCost": "AvaLandedCost",
          "AvaLodging": "AvaLodging",
          "AvaBottle": "AvaBottle",
          "MRSComplianceManager": "MRSComplianceManager"
        }
      },
      "prompt": {
        "description": "The prompt you should use when displaying this parameter to a user.  For example, if your user interface displays a\r\nparameter in a text box, this is the label you should use to identify that text box.",
        "type": "string",
        "example": "Lodging Number of Nights"
      },
      "regularExpression": {
        "description": "If your user interface permits client-side validation of parameters, this string is a regular expression you can use\r\nto validate the user's data entry prior to submitting a tax request.",
        "type": "string",
        "example": "\\d*"
      }
    },
    "example": {
      "id": 12345,
      "category": "Lodging",
      "name": "AvaTax.Lodging.NumberOfNights",
      "dataType": "Numeric",
      "helpText": "Please enter the number of nights the customer stayed in your lodging; whole numbers only.",
      "serviceTypes": [
        "AvaLodging"
      ],
      "prompt": "Lodging Number of Nights",
      "regularExpression": "\\d*"
    },
    "x-methods-used-in": []
  },
  "FetchResult[LocationQuestionModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/LocationQuestionModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListLocationQuestionsByAddress"
    ]
  },
  "LocationQuestionModel": {
    "description": "Information about questions that the local jurisdictions require for each location",
    "required": [
      "id",
      "question",
      "description"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this location setting type",
        "type": "integer",
        "example": 1
      },
      "question": {
        "description": "This is the prompt for this question",
        "type": "string",
        "example": "State Assigned Code"
      },
      "description": {
        "description": "If additional information is available about the location setting, this contains descriptive text to help\r\nyou identify the correct value to provide in this setting.",
        "type": "string",
        "example": ""
      },
      "regularExpression": {
        "description": "If available, this regular expression will verify that the input from the user is in the expected format.",
        "type": "string"
      },
      "exampleValue": {
        "description": "If available, this is an example value that you can demonstrate to the user to show what is expected.",
        "type": "string"
      },
      "jurisdictionName": {
        "description": "Indicates which jurisdiction requires this question",
        "type": "string"
      },
      "jurisdictionType": {
        "description": "Indicates which type of jurisdiction requires this question",
        "enum": [
          "Country",
          "Composite",
          "State",
          "County",
          "City",
          "Special"
        ],
        "type": "string",
        "example": "Country",
        "x-enum-type": "JurisdictionType",
        "x-enum-description": "Jurisdiction Type",
        "x-enum-value-comments": {
          "Country": "Country",
          "Composite": "Deprecated",
          "State": "State",
          "County": "County",
          "City": "City",
          "Special": "Special Tax Jurisdiction"
        }
      },
      "jurisdictionCountry": {
        "description": "Indicates the country that this jurisdiction belongs to",
        "type": "string"
      },
      "jurisdictionRegion": {
        "description": "Indicates the state, region, or province that this jurisdiction belongs to",
        "type": "string"
      }
    },
    "example": {
      "id": 1,
      "question": "State Assigned Code",
      "description": "",
      "jurisdictionType": "Country"
    },
    "x-methods-used-in": []
  },
  "FetchResult[IsoCountryModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/IsoCountryModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListCountries"
    ]
  },
  "IsoCountryModel": {
    "description": "Represents an ISO 3166 recognized country",
    "type": "object",
    "properties": {
      "code": {
        "description": "The two character ISO 3166 country code",
        "type": "string",
        "example": "FR"
      },
      "alpha3Code": {
        "description": "The three character ISO 3166 country code",
        "type": "string"
      },
      "name": {
        "description": "The full name of this country in uppercase.\r\n\r\nFor names in proper or formal case, or for names in other languages, please examine the `localizedNames` element for an appropriate name.",
        "type": "string",
        "example": "France"
      },
      "isEuropeanUnion": {
        "description": "True if this country is a member of the European Union",
        "type": "boolean",
        "example": true
      },
      "localizedNames": {
        "description": "A list of localized names in a variety of languages.\r\n\r\nThis list is maintained by the International Standards Organization.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/IsoLocalizedName"
        }
      }
    },
    "example": {
      "code": "FR",
      "name": "France",
      "isEuropeanUnion": true
    },
    "x-methods-used-in": []
  },
  "IsoLocalizedName": {
    "description": "Represents a language-specific localized name of a particular geographic entity such\r\nas a country or a region.",
    "type": "object",
    "properties": {
      "languageAlpha2Code": {
        "description": "The two-character alphanumeric code identifying the language in which this name is used.\r\n\r\nNote that languageAlpha2Code and language3AlphaCode refer to the same language.",
        "type": "string",
        "example": "en"
      },
      "languageAlpha3Code": {
        "description": "The three-character alphanumeric code identifying the language in which this name is used.\r\n\r\nNote that languageAlpha2Code and language3AlphaCode refer to the same language.",
        "type": "string",
        "example": "eng"
      },
      "name": {
        "description": "The name of this geographic entity as known in this language.",
        "type": "string",
        "example": "United States"
      }
    },
    "example": {
      "languageAlpha2Code": "en",
      "languageAlpha3Code": "eng",
      "name": "United States"
    },
    "x-methods-used-in": []
  },
  "FetchResult[IsoRegionModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/IsoRegionModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListRegionsByCountry",
      "Definitions/ListRegions"
    ]
  },
  "IsoRegionModel": {
    "description": "Represents a region, province, or state within a country",
    "type": "object",
    "properties": {
      "countryCode": {
        "description": "The two-character ISO 3166 country code this region belongs to",
        "type": "string",
        "example": "US"
      },
      "code": {
        "description": "The three character ISO 3166 region code",
        "type": "string",
        "example": "CA"
      },
      "name": {
        "description": "The full name, using localized characters, for this region, in uppercase.\r\n\r\nFor names in proper or formal case, or for names in other languages, please examine the `localizedNames` element for an appropriate name.",
        "type": "string",
        "example": "California"
      },
      "classification": {
        "description": "The word in the local language that classifies what type of a region this represents",
        "type": "string",
        "example": "State"
      },
      "streamlinedSalesTax": {
        "description": "For the United States, this flag indicates whether a U.S. State participates in the Streamlined\r\nSales Tax program.  For countries other than the US, this flag is null.",
        "type": "boolean"
      },
      "localizedNames": {
        "description": "A list of localized names in a variety of languages.\r\n\r\nThis list is maintained by the International Standards Organization.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/IsoLocalizedName"
        }
      }
    },
    "example": {
      "countryCode": "US",
      "code": "CA",
      "name": "California",
      "classification": "State"
    },
    "x-methods-used-in": []
  },
  "FetchResult[EntityUseCodeModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/EntityUseCodeModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListEntityUseCodes"
    ]
  },
  "EntityUseCodeModel": {
    "description": "Represents a code describing the intended use for a product that may affect its taxability",
    "type": "object",
    "properties": {
      "code": {
        "description": "The Avalara-recognized entity use code for this definition",
        "type": "string",
        "example": "A"
      },
      "name": {
        "description": "The name of this entity use code",
        "type": "string",
        "example": "FEDERAL GOV"
      },
      "description": {
        "description": "Text describing the meaning of this use code",
        "type": "string",
        "example": ""
      },
      "validCountries": {
        "description": "A list of countries where this use code is valid",
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "US"
        ]
      }
    },
    "example": {
      "code": "A",
      "name": "FEDERAL GOV",
      "description": "",
      "validCountries": [
        "US"
      ]
    },
    "x-methods-used-in": []
  },
  "FetchResult[TaxAuthorityTypeModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxAuthorityTypeModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListTaxAuthorityTypes"
    ]
  },
  "TaxAuthorityTypeModel": {
    "description": "Tax Authority Type Model",
    "required": [
      "id",
      "description"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this tax Authority customer type.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "description": {
        "description": "The description name of this tax authority type.",
        "type": "string",
        "example": "County"
      },
      "taxAuthorityGroup": {
        "description": "Tax Authority Group",
        "type": "string",
        "example": "LocalCounty"
      }
    },
    "example": {
      "id": 0,
      "description": "County",
      "taxAuthorityGroup": "LocalCounty"
    },
    "x-methods-used-in": []
  },
  "FetchResult[NoticeStatusModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeStatusModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListNoticeStatuses"
    ]
  },
  "NoticeStatusModel": {
    "description": "Tax Notice Status Model",
    "required": [
      "id",
      "description"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this tax authority type.",
        "type": "integer",
        "readOnly": true,
        "example": 12345
      },
      "description": {
        "description": "The description name of this tax authority type.",
        "type": "string",
        "example": "City"
      },
      "isOpen": {
        "description": "True if a tax notice in this status is considered 'open' and has more work expected to be done before it is closed.",
        "type": "boolean",
        "example": false
      },
      "sortOrder": {
        "format": "int32",
        "description": "If a list of status values is to be displayed in a dropdown, they should be displayed in this numeric order.",
        "type": "integer",
        "example": 0
      }
    },
    "example": {
      "id": 12345,
      "description": "City",
      "isOpen": false,
      "sortOrder": 0
    },
    "x-methods-used-in": []
  },
  "FetchResult[NoticeCustomerTypeModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeCustomerTypeModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListNoticeCustomerTypes"
    ]
  },
  "NoticeCustomerTypeModel": {
    "description": "Tax Authority Model",
    "required": [
      "id",
      "description"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this tax notice customer type.",
        "type": "integer",
        "readOnly": true,
        "example": 12345
      },
      "description": {
        "description": "The description name of this tax authority type.",
        "type": "string",
        "example": "City"
      },
      "activeFlag": {
        "description": "A flag if the type is active",
        "type": "boolean",
        "example": true
      },
      "sortOrder": {
        "format": "int32",
        "description": "sort order of the types",
        "type": "integer",
        "example": 5
      }
    },
    "example": {
      "id": 12345,
      "description": "City",
      "activeFlag": true,
      "sortOrder": 5
    },
    "x-methods-used-in": []
  },
  "FetchResult[NoticeReasonModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeReasonModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListNoticeReasons"
    ]
  },
  "NoticeReasonModel": {
    "description": "Tax Notice Reason Model",
    "required": [
      "id",
      "description"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this tax notice customer type.",
        "type": "integer",
        "readOnly": true,
        "example": 1
      },
      "description": {
        "description": "The description name of this tax authority type.",
        "type": "string",
        "example": "AvaTax Returns"
      },
      "activeFlag": {
        "description": "A flag if the type is active",
        "type": "boolean",
        "example": true
      },
      "sortOrder": {
        "format": "int32",
        "description": "sort order of the types",
        "type": "integer",
        "example": 5
      }
    },
    "example": {
      "id": 1,
      "description": "AvaTax Returns",
      "activeFlag": true,
      "sortOrder": 5
    },
    "x-methods-used-in": []
  },
  "FetchResult[FilingFrequencyModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilingFrequencyModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListFilingFrequencies"
    ]
  },
  "FilingFrequencyModel": {
    "description": "FilingFrequency Model",
    "required": [
      "id",
      "description"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this filing frequency.",
        "type": "integer",
        "readOnly": true,
        "example": 1
      },
      "description": {
        "description": "The description name of this filing frequency",
        "type": "string",
        "example": "Monthly"
      }
    },
    "example": {
      "id": 1,
      "description": "Monthly"
    },
    "x-methods-used-in": []
  },
  "FetchResult[NoticeFilingTypeModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeFilingTypeModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListNoticeFilingtypes"
    ]
  },
  "NoticeFilingTypeModel": {
    "description": "Tax Notice FilingType Model",
    "required": [
      "id",
      "description"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this tax notice customer type.",
        "type": "integer",
        "readOnly": true,
        "example": 1
      },
      "description": {
        "description": "The description name of this tax authority type.",
        "type": "string",
        "example": "Electronic Return "
      },
      "activeFlag": {
        "description": "A flag if the type is active",
        "type": "boolean",
        "example": true
      },
      "sortOrder": {
        "format": "int32",
        "description": "sort order of the types",
        "type": "integer",
        "example": 5
      }
    },
    "example": {
      "id": 1,
      "description": "Electronic Return ",
      "activeFlag": true,
      "sortOrder": 5
    },
    "x-methods-used-in": []
  },
  "FetchResult[NoticeTypeModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeTypeModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListNoticeTypes"
    ]
  },
  "NoticeTypeModel": {
    "description": "Tax Notice Type Model",
    "required": [
      "id",
      "description"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this tax notice customer type.",
        "type": "integer",
        "readOnly": true,
        "example": 2
      },
      "description": {
        "description": "The description name of this tax authority type.",
        "type": "string",
        "example": "Notices"
      },
      "activeFlag": {
        "description": "A flag if the type is active",
        "type": "boolean",
        "example": true
      },
      "sortOrder": {
        "format": "int32",
        "description": "sort order of the types",
        "type": "integer",
        "example": 10
      }
    },
    "example": {
      "id": 2,
      "description": "Notices",
      "activeFlag": true,
      "sortOrder": 10
    },
    "x-methods-used-in": []
  },
  "FetchResult[NoticeCustomerFundingOptionModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeCustomerFundingOptionModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListNoticeCustomerFundingOptions"
    ]
  },
  "NoticeCustomerFundingOptionModel": {
    "description": "Tax Authority Model",
    "required": [
      "id",
      "description"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this tax notice customer FundingOption.",
        "type": "integer",
        "readOnly": true,
        "example": 1
      },
      "description": {
        "description": "The description name of this tax authority FundingOption.",
        "type": "string",
        "example": "Pull"
      },
      "activeFlag": {
        "description": "A flag if the FundingOption is active",
        "type": "boolean",
        "example": true
      },
      "sortOrder": {
        "format": "int32",
        "description": "sort order of the FundingOptions",
        "type": "integer",
        "example": 5
      }
    },
    "example": {
      "id": 1,
      "description": "Pull",
      "activeFlag": true,
      "sortOrder": 5
    },
    "x-methods-used-in": []
  },
  "FetchResult[NoticePriorityModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticePriorityModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListNoticePriorities"
    ]
  },
  "NoticePriorityModel": {
    "description": "Tax Notice Priority Model",
    "required": [
      "id",
      "description"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this tax notice customer Priority.",
        "type": "integer",
        "readOnly": true,
        "example": 2
      },
      "description": {
        "description": "The description name of this tax authority Priority.",
        "type": "string",
        "example": "High"
      },
      "activeFlag": {
        "description": "A flag if the Priority is active",
        "type": "boolean",
        "example": true
      },
      "sortOrder": {
        "format": "int32",
        "description": "sort order of the Prioritys",
        "type": "integer",
        "example": 10
      }
    },
    "example": {
      "id": 2,
      "description": "High",
      "activeFlag": true,
      "sortOrder": 10
    },
    "x-methods-used-in": []
  },
  "FetchResult[NoticeResponsibilityModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeResponsibilityModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListNoticeResponsibilities"
    ]
  },
  "NoticeResponsibilityModel": {
    "description": "NoticeResponsibility Model",
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this notice responsibility.",
        "type": "integer",
        "example": 11
      },
      "description": {
        "description": "The description name of this notice responsibility",
        "type": "string",
        "example": "Customer-Invalid login (Return filed manual)"
      },
      "isActive": {
        "description": "Defines if the responsibility is active",
        "type": "boolean",
        "example": true
      },
      "sortOrder": {
        "format": "int32",
        "description": "The sort order of this responsibility",
        "type": "integer",
        "example": 55
      }
    },
    "example": {
      "id": 11,
      "description": "Customer-Invalid login (Return filed manual)",
      "isActive": true,
      "sortOrder": 55
    },
    "x-methods-used-in": []
  },
  "FetchResult[NoticeRootCauseModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeRootCauseModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListNoticeRootCauses"
    ]
  },
  "NoticeRootCauseModel": {
    "description": "NoticeRootCause Model",
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this notice RootCause.",
        "type": "integer",
        "example": 11
      },
      "description": {
        "description": "The description name of this notice RootCause",
        "type": "string",
        "example": "Customer-Invalid login (Return filed manual)"
      },
      "isActive": {
        "description": "Defines if the RootCause is active",
        "type": "boolean",
        "example": true
      },
      "sortOrder": {
        "format": "int32",
        "description": "The sort order of this RootCause",
        "type": "integer",
        "example": 55
      }
    },
    "example": {
      "id": 11,
      "description": "Customer-Invalid login (Return filed manual)",
      "isActive": true,
      "sortOrder": 55
    },
    "x-methods-used-in": []
  },
  "FetchResult[SkyscraperStatusModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/SkyscraperStatusModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListLoginVerifiers",
      "Definitions/GetLoginVerifierByForm"
    ]
  },
  "SkyscraperStatusModel": {
    "description": "Represents a list of statuses of returns available in skyscraper",
    "type": "object",
    "properties": {
      "name": {
        "description": "The specific name of the returns available in skyscraper",
        "type": "string",
        "example": "AL"
      },
      "taxFormCodes": {
        "description": "The tax form codes available to file through skyscrper",
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "USAL21009501"
        ]
      },
      "country": {
        "description": "The country of the returns",
        "type": "string",
        "example": "US"
      },
      "scraperType": {
        "description": "They Scraper type",
        "enum": [
          "Login",
          "CustomerDorData"
        ],
        "type": "string",
        "example": "Login",
        "x-enum-type": "ScraperType",
        "x-enum-description": "Type of verification task",
        "x-enum-value-comments": {
          "Login": "Indicates that is is a login type",
          "CustomerDorData": "Indicates that it is a Customer DOR Data type"
        }
      },
      "isAvailable": {
        "description": "Indicates if the return is currently available",
        "type": "boolean",
        "example": true
      },
      "expectedResponseTime": {
        "description": "The expected response time of the call",
        "type": "string",
        "example": "00:30:00"
      },
      "message": {
        "description": "Message on the returns",
        "type": "string",
        "example": "Message"
      },
      "requiredFilingCalendarDataFields": {
        "description": "A list of required fields to file",
        "type": "array",
        "items": {
          "$ref": "#/definitions/requiredFilingCalendarDataFieldModel"
        },
        "example": [
          {
            "name": "RegistrationId",
            "description": "Id Used for Registration"
          }
        ]
      }
    },
    "example": {
      "name": "AL",
      "taxFormCodes": [
        "USAL21009501"
      ],
      "country": "US",
      "scraperType": "Login",
      "isAvailable": true,
      "expectedResponseTime": "00:30:00",
      "message": "Message",
      "requiredFilingCalendarDataFields": [
        {
          "name": "RegistrationId",
          "description": "Id Used for Registration"
        }
      ]
    },
    "x-methods-used-in": []
  },
  "requiredFilingCalendarDataFieldModel": {
    "description": "Represents a verification request using Skyscraper for a company",
    "type": "object",
    "properties": {
      "name": {
        "description": "Region of the verification request",
        "type": "string",
        "example": "RegistrationId"
      },
      "description": {
        "description": "Username that we are using for verification",
        "type": "string",
        "example": "Id Used for Registration"
      }
    },
    "example": {
      "name": "RegistrationId",
      "description": "Id Used for Registration"
    },
    "x-methods-used-in": []
  },
  "FetchResult[JurisdictionOverrideModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/JurisdictionOverrideModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListJurisdictionsByAddress",
      "JurisdictionOverrides/ListJurisdictionOverridesByAccount",
      "JurisdictionOverrides/QueryJurisdictionOverrides"
    ]
  },
  "JurisdictionOverrideModel": {
    "description": "Represents an override of tax jurisdictions for a specific address.\r\n\r\nDuring the time period represented by EffDate through EndDate, all tax decisions for addresses matching\r\nthis override object will be assigned to the list of jurisdictions designated in this object.",
    "required": [
      "description",
      "region",
      "postalCode",
      "jurisdictions",
      "taxRegionId"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this override.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "accountId": {
        "format": "int32",
        "description": "The unique ID number assigned to this account.",
        "type": "integer",
        "example": 0
      },
      "description": {
        "description": "A description of why this jurisdiction override was created.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "a test JO"
      },
      "line1": {
        "description": "The street address of the physical location affected by this override.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "5500 Irvine Center Dr"
      },
      "city": {
        "description": "The city address of the physical location affected by this override.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Irvine"
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region within the country to be affected by this override.\r\n\r\nNote that only United States addresses are affected by the jurisdiction override system.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string",
        "example": "CA"
      },
      "country": {
        "description": "The two character ISO-3166 country code of the country affected by this override.\r\n\r\nNote that only United States addresses are affected by the jurisdiction override system.",
        "type": "string",
        "readOnly": true,
        "example": "US"
      },
      "postalCode": {
        "description": "The postal code of the physical location affected by this override.",
        "maxLength": 11,
        "minLength": 0,
        "type": "string",
        "example": "92618"
      },
      "effectiveDate": {
        "format": "date-time",
        "description": "The date when this override first takes effect.  Set this value to null to affect all dates up to the end date.",
        "type": "string",
        "example": "2006-08-01T00:00:00",
        "x-date-type": "date-only"
      },
      "endDate": {
        "format": "date-time",
        "description": "The date when this override will cease to take effect.  Set this value to null to never expire.",
        "type": "string",
        "example": "2099-01-12T00:00:00",
        "x-date-type": "date-only"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      },
      "jurisdictions": {
        "description": "A list of the tax jurisdictions that will be assigned to this overridden address.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/JurisdictionModel"
        }
      },
      "taxRegionId": {
        "format": "int32",
        "description": "The TaxRegionId of the new location affected by this jurisdiction override.",
        "type": "integer",
        "example": 0
      },
      "boundaryLevel": {
        "description": "The boundary level of this override",
        "enum": [
          "Address",
          "Zip9",
          "Zip5"
        ],
        "type": "string",
        "readOnly": true,
        "example": "Address",
        "x-enum-type": "BoundaryLevel",
        "x-enum-description": "Jurisdiction boundary precision level found for address.  This depends on the accuracy of the address\n                as well as the precision level of the state provided jurisdiction boundaries.",
        "x-enum-value-comments": {
          "Address": "Street address precision",
          "Zip9": "9-digit zip precision",
          "Zip5": "5-digit zip precision"
        }
      },
      "isDefault": {
        "description": "True if this is a default boundary",
        "type": "boolean"
      }
    },
    "example": {
      "id": 0,
      "accountId": 0,
      "description": "a test JO",
      "line1": "5500 Irvine Center Dr",
      "city": "Irvine",
      "region": "CA",
      "country": "US",
      "postalCode": "92618",
      "effectiveDate": "2006-08-01",
      "endDate": "2099-01-12",
      "jurisdictions": [
        {
          "code": "53",
          "name": "WASHINGTON",
          "type": "State",
          "rate": 0.06,
          "salesRate": 0.06,
          "signatureCode": "",
          "region": "WA",
          "useRate": 0.06
        }
      ],
      "taxRegionId": 0,
      "boundaryLevel": "Address",
      "isDefault": false
    },
    "x-methods-used-in": [
      "JurisdictionOverrides/CreateJurisdictionOverrides",
      "JurisdictionOverrides/GetJurisdictionOverride",
      "JurisdictionOverrides/UpdateJurisdictionOverride"
    ]
  },
  "JurisdictionModel": {
    "description": "Represents information about a single legal taxing jurisdiction",
    "required": [
      "code",
      "name",
      "type",
      "signatureCode"
    ],
    "type": "object",
    "properties": {
      "code": {
        "description": "The code that is used to identify this jurisdiction",
        "type": "string",
        "example": "53"
      },
      "name": {
        "description": "The name of this jurisdiction",
        "type": "string",
        "example": "WASHINGTON"
      },
      "type": {
        "description": "The type of the jurisdiction, indicating whether it is a country, state/region, city, for example.",
        "enum": [
          "Country",
          "Composite",
          "State",
          "County",
          "City",
          "Special"
        ],
        "type": "string",
        "example": "State",
        "x-enum-type": "JurisdictionType",
        "x-enum-description": "Jurisdiction Type",
        "x-enum-value-comments": {
          "Country": "Country",
          "Composite": "Deprecated",
          "State": "State",
          "County": "County",
          "City": "City",
          "Special": "Special Tax Jurisdiction"
        }
      },
      "rate": {
        "format": "double",
        "description": "The base rate of tax specific to this jurisdiction.",
        "type": "number",
        "example": 0.06
      },
      "salesRate": {
        "format": "double",
        "description": "The \"Sales\" tax rate specific to this jurisdiction.",
        "type": "number",
        "example": 0.06
      },
      "signatureCode": {
        "description": "The Avalara-supplied signature code for this jurisdiction.",
        "type": "string",
        "example": ""
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region within the country.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string",
        "example": "WA"
      },
      "useRate": {
        "format": "double",
        "description": "The \"Seller's Use\" tax rate specific to this jurisdiction.",
        "type": "number",
        "example": 0.06
      },
      "city": {
        "description": "The city name of this jurisdiction",
        "type": "string"
      },
      "county": {
        "description": "The county name of this jurisdiction",
        "type": "string"
      },
      "country": {
        "description": "Name or ISO 3166 code identifying the country of this jurisdiction.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string"
      },
      "shortName": {
        "description": "A short name of the jurisidiction",
        "type": "string"
      },
      "stateFips": {
        "description": "State FIPS code",
        "type": "string"
      },
      "countyFips": {
        "description": "County FIPS code",
        "type": "string"
      },
      "placeFips": {
        "description": "City FIPS code",
        "type": "string"
      },
      "id": {
        "format": "int32",
        "description": "Unique AvaTax Id of this Jurisdiction",
        "type": "integer"
      },
      "effectiveDate": {
        "format": "date-time",
        "description": "The date this jurisdiction starts to take effect on tax calculations",
        "type": "string"
      },
      "endDate": {
        "format": "date-time",
        "description": "The date this jurisdiction stops to take effect on tax calculations",
        "type": "string"
      }
    },
    "example": {
      "code": "53",
      "name": "WASHINGTON",
      "type": "State",
      "rate": 0.06,
      "salesRate": 0.06,
      "signatureCode": "",
      "region": "WA",
      "useRate": 0.06
    },
    "x-methods-used-in": []
  },
  "FetchResult[JurisdictionModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/JurisdictionModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListJurisdictions"
    ]
  },
  "FetchResult[ResourceFileTypeModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ResourceFileTypeModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListResourceFileTypes"
    ]
  },
  "ResourceFileTypeModel": {
    "description": "Resource File Type Model",
    "type": "object",
    "properties": {
      "resourceFileTypeId": {
        "format": "int32",
        "description": "The resource file type id",
        "type": "integer",
        "example": 1
      },
      "name": {
        "description": "The name of the file type",
        "type": "string",
        "example": "TaxNoticeAttachment"
      }
    },
    "example": {
      "resourceFileTypeId": 1,
      "name": "TaxNoticeAttachment"
    },
    "x-methods-used-in": []
  },
  "FetchResult[RateTypeModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/RateTypeModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListRateTypesByCountry"
    ]
  },
  "RateTypeModel": {
    "description": "Rate type Model",
    "type": "object",
    "properties": {
      "id": {
        "description": "The unique ID number of this rate type.",
        "type": "string",
        "readOnly": true,
        "example": "1"
      },
      "description": {
        "description": "Description of this rate type.",
        "type": "string",
        "readOnly": true,
        "example": "test"
      },
      "country": {
        "description": "Country code for this rate type",
        "type": "string",
        "readOnly": true,
        "example": "US"
      }
    },
    "example": {
      "id": "1",
      "description": "test",
      "country": "US"
    },
    "x-methods-used-in": []
  },
  "FetchResult[AvaFileFormModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/AvaFileFormModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListAvaFileForms"
    ]
  },
  "AvaFileFormModel": {
    "description": "Represents information about a tax form known to Avalara",
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "Unique Id of the form",
        "type": "integer",
        "example": 2415
      },
      "returnName": {
        "description": "Name of the file being returned",
        "type": "string",
        "example": "CABOE401A2"
      },
      "formName": {
        "description": "Name of the submitted form",
        "type": "string",
        "example": "CA BOE 401 A2"
      },
      "description": {
        "description": "A description of the submitted form",
        "type": "string",
        "example": "State, Local, and District Sales and Use Tax Return"
      },
      "effDate": {
        "format": "date-time",
        "description": "The date this form starts to take effect",
        "type": "string",
        "example": "2005-04-01T00:00:00"
      },
      "endDate": {
        "format": "date-time",
        "description": "The date the form finishes to take effect",
        "type": "string",
        "example": "9999-12-31T00:00:00"
      },
      "region": {
        "description": "State/Province/Region where the form is submitted for",
        "type": "string",
        "example": "CA"
      },
      "country": {
        "description": "The country this form is submitted for",
        "type": "string",
        "example": "US"
      },
      "formTypeId": {
        "format": "byte",
        "description": "The type of the form being submitted",
        "type": "integer",
        "example": 0
      },
      "filingOptionTypeId": {
        "format": "byte",
        "description": "",
        "type": "integer",
        "example": 0
      },
      "dueDateTypeId": {
        "format": "byte",
        "description": "The type of the due date",
        "type": "integer",
        "example": 0
      },
      "dueDay": {
        "format": "byte",
        "description": "Due date",
        "type": "integer",
        "example": 20
      },
      "efileDueDateTypeId": {
        "format": "byte",
        "description": "",
        "type": "integer",
        "example": 0
      },
      "efileDueDay": {
        "format": "byte",
        "description": "The date by when the E-filing should be submitted",
        "type": "integer",
        "example": 20
      },
      "efileDueTime": {
        "format": "date-time",
        "description": "The time of day by when the E-filing should be submitted",
        "type": "string",
        "example": "1900-01-01T00:00:00"
      },
      "hasVendorDiscount": {
        "description": "Whether the customer has discount",
        "type": "boolean",
        "example": false
      },
      "roundingTypeId": {
        "format": "byte",
        "description": "The way system does the rounding",
        "type": "integer",
        "example": 0
      }
    },
    "example": {
      "id": 2415,
      "returnName": "CABOE401A2",
      "formName": "CA BOE 401 A2",
      "description": "State, Local, and District Sales and Use Tax Return",
      "effDate": "2005-04-01T00:00:00",
      "endDate": "9999-12-31T00:00:00",
      "region": "CA",
      "country": "US",
      "formTypeId": 0,
      "filingOptionTypeId": 0,
      "dueDateTypeId": 0,
      "dueDay": 20,
      "efileDueDateTypeId": 0,
      "efileDueDay": 20,
      "efileDueTime": "1900-01-01T00:00:00",
      "hasVendorDiscount": false,
      "roundingTypeId": 0
    },
    "x-methods-used-in": []
  },
  "FetchResult[FormMasterModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/FormMasterModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListTaxForms"
    ]
  },
  "FormMasterModel": {
    "description": "Represents information about a tax form known to Avalara",
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "Unique ID number of this form master object",
        "type": "integer",
        "example": 2415
      },
      "formTypeId": {
        "format": "int32",
        "description": "The type of the form being submitted",
        "type": "integer",
        "example": 0
      },
      "taxFormCode": {
        "description": "Unique tax form code representing this tax form",
        "type": "string"
      },
      "legacyReturnName": {
        "description": "Legacy return name as known in the AvaFileForm table",
        "type": "string",
        "example": "CABOE401A2"
      },
      "taxFormName": {
        "description": "Human readable form summary name",
        "type": "string",
        "example": "CA BOE 401 A2"
      },
      "description": {
        "description": "Description of this tax form",
        "type": "string",
        "example": "State, Local, and District Sales and Use Tax Return"
      },
      "isEffective": {
        "description": "True if this form is available for use",
        "type": "boolean",
        "example": true
      },
      "country": {
        "description": "ISO 3166 code of the country that issued this tax form",
        "type": "string",
        "example": "US"
      },
      "region": {
        "description": "The region within which this form was issued",
        "type": "string",
        "example": "CA"
      },
      "authorityName": {
        "description": "Tax authority that issued the form",
        "type": "string"
      },
      "shortCode": {
        "description": "DEPRECATED",
        "type": "string"
      },
      "dueDay": {
        "format": "int32",
        "description": "Day of the month when the form is due",
        "type": "integer",
        "example": 20
      },
      "delinquentDay": {
        "format": "int32",
        "description": "Day of the month on which the form is considered delinquent. Almost always the same as DueDay",
        "type": "integer"
      },
      "fiscalYearStartMonth": {
        "format": "int32",
        "description": "Month of the year the state considers as the first fiscal month",
        "type": "integer"
      },
      "hasMultiFrequencies": {
        "description": "Can form support multi frequencies",
        "type": "boolean",
        "example": false
      },
      "isPOARequired": {
        "description": "Does this tax authority require a power of attorney in order to speak to Avalara",
        "type": "boolean",
        "example": false
      },
      "isRegistrationRequired": {
        "description": "True if this form requires that the customer register with the authority",
        "type": "boolean",
        "example": false
      },
      "hasMultiRegistrationMethods": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "hasSchedules": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "hasMultiFilingMethods": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "hasMultiPayMethods": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "isEFTRequired": {
        "description": "Unused",
        "type": "boolean"
      },
      "isFilePayMethodLinked": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "mailingReceivedRuleId": {
        "format": "int32",
        "description": "Unused",
        "type": "integer",
        "example": 0
      },
      "proofOfMailingId": {
        "format": "int32",
        "description": "Unused",
        "type": "integer",
        "example": 0
      },
      "isNegAmountAllowed": {
        "description": "True if you can report a negative amount in a single jurisdiction on the form",
        "type": "boolean"
      },
      "allowNegativeOverallTax": {
        "description": "True if the form overall can go negative",
        "type": "boolean",
        "example": false
      },
      "isNettingRequired": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "roundingMethodId": {
        "format": "int32",
        "description": "Unused",
        "type": "integer",
        "example": 0
      },
      "vendorDiscountAnnualMax": {
        "format": "double",
        "description": "Total amount of discounts that can be received by a vendor each year",
        "type": "number",
        "example": 0
      },
      "versionsRequireAuthorityApproval": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "outletReportingMethodId": {
        "format": "int32",
        "description": "Type of outlet reporting for this form",
        "type": "integer",
        "example": 0
      },
      "hasReportingCodes": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "hasPrepayments": {
        "description": "Not sure if used",
        "type": "boolean",
        "example": false
      },
      "grossIncludesInterstateSales": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "grossIncludesTax": {
        "description": "Unused",
        "type": "string"
      },
      "hasEfileFee": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "hasEpayFee": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "hasDependencies": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "requiredEfileTrigger": {
        "description": "Unused",
        "type": "string"
      },
      "requiredEftTrigger": {
        "description": "Unused",
        "type": "string"
      },
      "vendorDiscountEfile": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "vendorDiscountPaper": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "peerReviewed": {
        "description": "Unused",
        "type": "string"
      },
      "peerReviewedId": {
        "description": "Unused",
        "type": "string"
      },
      "peerReviewedDate": {
        "description": "Unused",
        "type": "string"
      },
      "createdUserId": {
        "format": "int32",
        "description": "ID of the Avalara user who created the form",
        "type": "integer",
        "example": 0
      },
      "createdDate": {
        "format": "date-time",
        "description": "Date when form was created",
        "type": "string",
        "example": "0001-01-01T00:00:00"
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "ID of the Avalara user who modified the form",
        "type": "integer",
        "example": 0
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "Date when form was modified",
        "type": "string",
        "example": "0001-01-01T00:00:00"
      },
      "dorAddressMailTo": {
        "description": "Mailing address of the department of revenue",
        "type": "string"
      },
      "dorAddress1": {
        "description": "Mailing address of the department of revenue",
        "type": "string"
      },
      "dorAddress2": {
        "description": "Mailing address of the department of revenue",
        "type": "string"
      },
      "dorAddressCity": {
        "description": "Mailing address of the department of revenue",
        "type": "string"
      },
      "dorAddressRegion": {
        "description": "Mailing address of the department of revenue",
        "type": "string"
      },
      "dorAddressPostalCode": {
        "description": "Mailing address of the department of revenue",
        "type": "string"
      },
      "dorAddressCountry": {
        "description": "Mailing address of the department of revenue",
        "type": "string"
      },
      "zeroAddressMailTo": {
        "description": "Mailing address to use when a zero dollar form is filed",
        "type": "string"
      },
      "zeroAddress1": {
        "description": "Mailing address to use when a zero dollar form is filed",
        "type": "string"
      },
      "zeroAddress2": {
        "description": "Mailing address to use when a zero dollar form is filed",
        "type": "string"
      },
      "zeroAddressCity": {
        "description": "Mailing address to use when a zero dollar form is filed",
        "type": "string"
      },
      "zeroAddressRegion": {
        "description": "Mailing address to use when a zero dollar form is filed",
        "type": "string"
      },
      "zeroAddressPostalCode": {
        "description": "Mailing address to use when a zero dollar form is filed",
        "type": "string"
      },
      "zeroAddressCountry": {
        "description": "Mailing address to use when a zero dollar form is filed",
        "type": "string"
      },
      "amendedAddressMailTo": {
        "description": "Mailing address to use when filing an amended return",
        "type": "string"
      },
      "amendedAddress1": {
        "description": "Mailing address to use when filing an amended return",
        "type": "string"
      },
      "amendedAddress2": {
        "description": "Mailing address to use when filing an amended return",
        "type": "string"
      },
      "amendedAddressCity": {
        "description": "Mailing address to use when filing an amended return",
        "type": "string"
      },
      "amendedAddressRegion": {
        "description": "Mailing address to use when filing an amended return",
        "type": "string"
      },
      "amendedAddressPostalCode": {
        "description": "Mailing address to use when filing an amended return",
        "type": "string"
      },
      "amendedAddressCountry": {
        "description": "Mailing address to use when filing an amended return",
        "type": "string"
      },
      "onlineBackFiling": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "onlineAmendedReturns": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "prepaymentFrequency": {
        "description": "--Need Further Clarification",
        "type": "string"
      },
      "outletLocationIdentifiersRequired": {
        "description": "Unused",
        "type": "boolean"
      },
      "listingSortOrder": {
        "description": "--Need Further Clarification",
        "type": "string"
      },
      "dorWebsite": {
        "description": "Link to the state department of revenue website, if available",
        "type": "string"
      },
      "fileForAllOutlets": {
        "description": "--Need Further Clarification",
        "type": "boolean",
        "example": false
      },
      "paperFormsDoNotHaveDiscounts": {
        "description": "--Need Further Clarification",
        "type": "boolean",
        "example": false
      },
      "stackAggregation": {
        "description": "Internal behavior",
        "type": "boolean",
        "example": false
      },
      "roundingPrecision": {
        "description": "--Need Further Clarification",
        "type": "string"
      },
      "inconsistencyTolerance": {
        "description": "--Need Further Clarification",
        "type": "string"
      },
      "effDate": {
        "format": "date-time",
        "description": "Date when this form became effective",
        "type": "string",
        "example": "2005-04-01T00:00:00"
      },
      "endDate": {
        "format": "date-time",
        "description": "Date when this form expired",
        "type": "string",
        "example": "9999-12-31T00:00:00"
      },
      "visibleToCustomers": {
        "description": "True if this form can be shown to customers",
        "type": "boolean",
        "example": false
      },
      "requiresOutletSetup": {
        "description": "True if this form requires that you set up outlets in the state",
        "type": "boolean",
        "example": false
      },
      "achCreditAllowed": {
        "description": "True if this state permits payment by ACH Credit",
        "type": "boolean",
        "example": false
      },
      "reportLevel": {
        "description": "Jurisdiction level of the state",
        "type": "string"
      },
      "postOfficeValidated": {
        "description": "True if this form is verified filed via email",
        "type": "boolean",
        "example": false
      },
      "stackAggregationOption": {
        "description": "Internal Avalara flag",
        "type": "string"
      },
      "sstBehavior": {
        "description": "Internal Avalara flag",
        "type": "string"
      },
      "nonSstBehavior": {
        "description": "Internal Avalara flag",
        "type": "string"
      },
      "dorPhoneNumber": {
        "description": "Phone number of the department of revenue",
        "type": "string"
      },
      "averageCheckClearDays": {
        "description": "Unused",
        "type": "string"
      },
      "filterZeroRatedLineDetails": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "allowsBulkFilingAccounts": {
        "description": "Unused",
        "type": "boolean",
        "example": false
      },
      "bulkAccountInstructionLink": {
        "description": "Unused",
        "type": "string"
      },
      "registrationIdFormat": {
        "description": "Unused",
        "type": "string"
      },
      "thresholdTrigger": {
        "description": "Unused",
        "type": "string"
      },
      "transactionSortingOption": {
        "description": "Unused",
        "type": "string"
      },
      "contentReviewFrequencyId": {
        "format": "int32",
        "description": "Unused",
        "type": "integer"
      },
      "aliasForFormMasterId": {
        "description": "Unused",
        "type": "string"
      }
    },
    "example": {
      "id": 2415,
      "formTypeId": 0,
      "legacyReturnName": "CABOE401A2",
      "taxFormName": "CA BOE 401 A2",
      "description": "State, Local, and District Sales and Use Tax Return",
      "isEffective": true,
      "country": "US",
      "region": "CA",
      "dueDay": 20,
      "hasMultiFrequencies": false,
      "isPOARequired": false,
      "isRegistrationRequired": false,
      "hasMultiRegistrationMethods": false,
      "hasSchedules": false,
      "hasMultiFilingMethods": false,
      "hasMultiPayMethods": false,
      "isEFTRequired": false,
      "isFilePayMethodLinked": false,
      "mailingReceivedRuleId": 0,
      "proofOfMailingId": 0,
      "isNegAmountAllowed": false,
      "allowNegativeOverallTax": false,
      "isNettingRequired": false,
      "roundingMethodId": 0,
      "vendorDiscountAnnualMax": 0,
      "versionsRequireAuthorityApproval": false,
      "outletReportingMethodId": 0,
      "hasReportingCodes": false,
      "hasPrepayments": false,
      "grossIncludesInterstateSales": false,
      "hasEfileFee": false,
      "hasEpayFee": false,
      "hasDependencies": false,
      "vendorDiscountEfile": false,
      "vendorDiscountPaper": false,
      "createdUserId": 0,
      "createdDate": "0001-01-01T00:00:00",
      "modifiedUserId": 0,
      "modifiedDate": "0001-01-01T00:00:00",
      "onlineBackFiling": false,
      "onlineAmendedReturns": false,
      "fileForAllOutlets": false,
      "paperFormsDoNotHaveDiscounts": false,
      "stackAggregation": false,
      "effDate": "2005-04-01T00:00:00",
      "endDate": "9999-12-31T00:00:00",
      "visibleToCustomers": false,
      "requiresOutletSetup": false,
      "achCreditAllowed": false,
      "postOfficeValidated": false,
      "filterZeroRatedLineDetails": false,
      "allowsBulkFilingAccounts": false
    },
    "x-methods-used-in": []
  },
  "FetchResult[TaxTypeGroupModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxTypeGroupModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListTaxTypeGroups"
    ]
  },
  "TaxTypeGroupModel": {
    "description": "Represents a tax type group",
    "required": [
      "id",
      "taxTypeGroup",
      "description"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this tax type group.",
        "type": "integer",
        "readOnly": true,
        "example": 1
      },
      "taxTypeGroup": {
        "description": "The unique human readable Id of this tax type group.",
        "type": "string",
        "readOnly": true,
        "example": "SalesAndUse"
      },
      "description": {
        "description": "The description of this tax type group.",
        "type": "string",
        "readOnly": true,
        "example": "Sales and Use"
      }
    },
    "example": {
      "id": 1,
      "taxTypeGroup": "SalesAndUse",
      "description": "Sales and Use"
    },
    "x-methods-used-in": []
  },
  "FetchResult[TaxSubTypeModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxSubTypeModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListTaxSubTypes"
    ]
  },
  "TaxSubTypeModel": {
    "description": "Represents a tax subtype",
    "required": [
      "id",
      "taxSubType",
      "description",
      "taxTypeGroup"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this tax sub-type.",
        "type": "integer",
        "readOnly": true,
        "example": 1
      },
      "taxSubType": {
        "description": "The unique human readable Id of this tax sub-type.",
        "type": "string",
        "readOnly": true,
        "example": "*"
      },
      "description": {
        "description": "The description of this tax sub-type.",
        "type": "string",
        "readOnly": true,
        "example": "ALL"
      },
      "taxTypeGroup": {
        "description": "The upper level group of tax types.",
        "type": "string",
        "readOnly": true
      }
    },
    "example": {
      "id": 1,
      "taxSubType": "*",
      "description": "ALL"
    },
    "x-methods-used-in": []
  },
  "FetchResult[NexusTaxTypeGroupModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NexusTaxTypeGroupModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListNexusTaxTypeGroups"
    ]
  },
  "NexusTaxTypeGroupModel": {
    "description": "Represents a group of tax types",
    "required": [
      "id",
      "nexusTaxTypeGroupId",
      "description"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this nexus tax type group.",
        "type": "integer",
        "readOnly": true,
        "example": 1
      },
      "nexusTaxTypeGroupId": {
        "description": "The unique human readable Id of this nexus tax type group.",
        "type": "string",
        "readOnly": true,
        "example": "SalesAndUse"
      },
      "description": {
        "description": "The description of this nexus tax type group.",
        "type": "string",
        "readOnly": true,
        "example": "Sales and Use"
      }
    },
    "example": {
      "id": 1,
      "nexusTaxTypeGroupId": "SalesAndUse",
      "description": "Sales and Use"
    },
    "x-methods-used-in": []
  },
  "FetchResult[CommunicationsTSPairModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/CommunicationsTSPairModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListCommunicationsServiceTypes",
      "Definitions/ListCommunicationsTSPairs"
    ]
  },
  "CommunicationsTSPairModel": {
    "description": "Represents a transaction/service type pair for telecommunications tax",
    "required": [
      "transactionTypeId",
      "serviceTypeId"
    ],
    "type": "object",
    "properties": {
      "transactionTypeId": {
        "format": "int32",
        "description": "The numeric Id of the transaction type.",
        "type": "integer",
        "example": 13
      },
      "serviceTypeId": {
        "format": "int32",
        "description": "The numeric Id of the service type.",
        "type": "integer",
        "example": 6
      },
      "AvaTax.Communications.TransactionType": {
        "description": "The name of the transaction type.",
        "type": "string"
      },
      "AvaTax.Communications.ServiceType": {
        "description": "The name of the service type.",
        "type": "string"
      },
      "description": {
        "description": "The description of the transaction/service type pair.",
        "type": "string",
        "example": "Basic monthly flat-rate charge for cellular/wireless service."
      },
      "requiredParameters": {
        "description": "List of the parameters (among Charge, Minutes and Lines) that will be used for calculation for this T/S pair.",
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "AvaTax.Communications.Charge",
          "AvaTax.Communications.Minutes"
        ]
      }
    },
    "example": {
      "transactionTypeId": 13,
      "serviceTypeId": 6,
      "AvaTax.Communications.TransactionType": "Cellular",
      "AvaTax.Communications.ServiceType": "Access Charge",
      "description": "Basic monthly flat-rate charge for cellular/wireless service.",
      "requiredParameters": [
        "AvaTax.Communications.Charge",
        "AvaTax.Communications.Minutes"
      ]
    },
    "x-methods-used-in": []
  },
  "FetchResult[CommunicationsTransactionTypeModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/CommunicationsTransactionTypeModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListCommunicationsTransactionTypes"
    ]
  },
  "CommunicationsTransactionTypeModel": {
    "description": "Represents information about a type of telecommunications transaction",
    "required": [
      "transactionTypeId"
    ],
    "type": "object",
    "properties": {
      "transactionTypeId": {
        "format": "int32",
        "description": "The numeric Id of the transaction type.",
        "type": "integer",
        "example": 13
      },
      "AvaTax.Communications.TransactionType": {
        "description": "The name of the transaction type.",
        "type": "string"
      }
    },
    "example": {
      "transactionTypeId": 13,
      "AvaTax.Communications.TransactionType": "Cellular"
    },
    "x-methods-used-in": []
  },
  "FetchResult[ExposureZoneModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ExposureZoneModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListCertificateExposureZones"
    ]
  },
  "FetchResult[CoverLetterModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/CoverLetterModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListCoverLetters"
    ]
  },
  "FetchResult[ExemptionReasonModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ExemptionReasonModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListCertificateExemptReasons"
    ]
  },
  "FetchResult[UomModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/UomModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListUnitOfMeasurement"
    ]
  },
  "UomModel": {
    "description": "The \"Unit of Measurement\" model captures information about a type of measurement.  Types of measurement refer to \r\ndifferent scales for the same dimension.  For example, measurements of type \"Distance\" may include units of measurement\r\nsuch as meters, feet, inches, and miles.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this unit of measurement.",
        "type": "integer",
        "example": 2
      },
      "code": {
        "description": "The code that refers to this unit of measurement.",
        "type": "string",
        "example": "British thermal unit (International Table)"
      },
      "shortDesc": {
        "description": "A short description of this unit of measurement.",
        "type": "string",
        "example": "British thermal unit (International Table)"
      },
      "description": {
        "description": "A longer description of this unit of measurement.",
        "type": "string",
        "example": "British thermal unit (International Table)"
      },
      "measurementTypeId": {
        "format": "int32",
        "description": "The ID number of the measurement type, such as \"Distance\" or \"Mass\".",
        "type": "integer",
        "example": 1
      },
      "measurementTypeCode": {
        "description": "The code describing the measurement type.",
        "type": "string",
        "example": "Energy"
      },
      "siUOM": {
        "description": "For a particular measurement type, this is the ID number of the unit of measurement object corresponding to the \r\nInternational System of Units (abbreviated SI) unit of measurement standard.  This pointer allows you to select\r\nthe SI unit of measurement for a particular measurement type.",
        "type": "string",
        "example": "374"
      },
      "measurementTypeDescription": {
        "description": "A description of the measurement type system.",
        "type": "string",
        "example": "Energy"
      },
      "isSiUom": {
        "description": "True if this measurement is an International System of Units (abbreviated SI) defined standard.",
        "type": "boolean",
        "example": false
      }
    },
    "example": {
      "id": 2,
      "code": "British thermal unit (International Table)",
      "shortDesc": "British thermal unit (International Table)",
      "description": "British thermal unit (International Table)",
      "measurementTypeId": 1,
      "measurementTypeCode": "Energy",
      "siUOM": "374",
      "measurementTypeDescription": "Energy",
      "isSiUom": false
    },
    "x-methods-used-in": []
  },
  "FetchResult[HsCodeModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/HsCodeModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListCrossBorderCodes",
      "Definitions/GetCrossBorderCode",
      "Definitions/ListCrossBorderSections"
    ]
  },
  "HsCodeModel": {
    "description": "Describes an element in the harmonized tariff system.\r\n\r\nAccording to the [United States International Trade Commission](https://www.usitc.gov), the harmonized tariff schedule is defined as follows:\r\n\r\nThe HTS is a U.S. nomenclature system used to classify traded goods based on their material composition, product name, and/or intended \r\nfunction. The HTS is designed so that each article falls into only one category. It is divided into chapters, each of which has a 2-digit \r\nnumber. Each product category within the various chapters is designated by 4, 6, 8, or 10 digits. The 4-digit categories are called \r\n\"headings.\" The 6-, 8- and 10-digit classifications are called \"subheadings.\"\r\n\r\nWithin AvaTax, the `HsCodeModel` object can refer to sections, chapters, headings, subheadings, or articles.  Each object represents one\r\nclassification.  Many of these objects have child objects underneath them; these child objects are more specific than their parent objects.",
    "required": [
      "id",
      "description"
    ],
    "type": "object",
    "properties": {
      "hsCode": {
        "description": "The harmonized tariff system code for this section and chapter. \r\n\r\nA full HS code contains more than six characters.  Partial HS codes with two, four, or six characters may have child codes underneath them.\r\nA child code is one that contains greater specificity than a parent code.  It is recommended that when you identify a product you use\r\nthe most detailed code available to identify it.\r\n\r\nTop level sections do not have HS Codes.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "hsCode"
      },
      "id": {
        "format": "int64",
        "description": "A unique identifier for this harmonized tariff system code.\r\n\r\nTo search for a list of child codes underneath a specific HS code, search for codes where the child's `parentHsCodeId` value matches the parent's `id` value.",
        "type": "integer",
        "example": 12345
      },
      "parentHsCodeId": {
        "format": "int64",
        "description": "The unique ID number of the parent HS code or HS code prefix.\r\n\r\nTo search for a list of child codes underneath a specific HS code, search for codes where the child's `parentHsCodeId` value matches the parent's `id` value.",
        "type": "integer",
        "example": 0
      },
      "description": {
        "description": "A human readable description that identifies Code descriptive text for this Section, Chapter, Heading, or Subheading.",
        "type": "string",
        "readOnly": true,
        "example": "HSCode"
      },
      "system": {
        "description": "The system to which this HS code belongs.",
        "type": "string",
        "readOnly": true,
        "example": "system"
      },
      "destinationCountry": {
        "description": "The destination country identified with this HS Code.  This value applies when certain products are classified in specific ways by\r\nbilateral trade agreements.",
        "type": "string",
        "example": "US"
      },
      "effDate": {
        "format": "date-time",
        "description": "For codes that have been expired or defined on specific dates, this value indicates the earliest\r\ndate for which this code is considered valid.\r\n\r\nIf this value is null, this code can be used for any valid date earlier than its end date.",
        "type": "string",
        "x-date-type": "date-only"
      },
      "endDate": {
        "format": "date-time",
        "description": "For codes that have been expired or defined on specific dates, this value indicates the latest\r\ndate for which this code is considered valid.\r\n\r\nIf this value is null, this code can be used for any valid date later than its effective date.",
        "type": "string",
        "x-date-type": "date-only"
      }
    },
    "example": {
      "hsCode": "hsCode",
      "id": 12345,
      "parentHsCodeId": 0,
      "description": "HSCode",
      "system": "system",
      "destinationCountry": "US"
    },
    "x-methods-used-in": []
  },
  "FetchResult[PostalCodeModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/PostalCodeModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Definitions/ListPostalCodes"
    ]
  },
  "PostalCodeModel": {
    "description": "Represents a PostalCode and its associated data like: country, region, effective dates, etc.",
    "type": "object",
    "properties": {
      "country": {
        "description": "Country this PostalCode locates in",
        "type": "string",
        "readOnly": true,
        "example": "US"
      },
      "region": {
        "description": "The Region/State/Province this PostalCode locates in",
        "type": "string",
        "readOnly": true,
        "example": "NY"
      },
      "taxRegionId": {
        "format": "int32",
        "description": "An Avalara assigned TaxRegion Id associated to the PostalCode",
        "type": "integer",
        "readOnly": true,
        "example": 2089603
      },
      "effDate": {
        "format": "date-time",
        "description": "The date when the PostalCode becomes effective",
        "type": "string",
        "readOnly": true,
        "example": "2013-03-01T00:00:00"
      },
      "endDate": {
        "format": "date-time",
        "description": "The date when the PostalCode becomes expired",
        "type": "string",
        "readOnly": true,
        "example": "9999-12-31T00:00:00"
      },
      "postalCode": {
        "description": "The postalCode",
        "type": "string",
        "readOnly": true,
        "example": "00501"
      }
    },
    "example": {
      "country": "US",
      "region": "NY",
      "taxRegionId": 2089603,
      "effDate": "2013-03-01T00:00:00",
      "endDate": "9999-12-31T00:00:00",
      "postalCode": "00501"
    },
    "x-methods-used-in": []
  },
  "CompanyDistanceThresholdModel": {
    "description": "A company-distance-threshold model indicates the distance between a company\r\nand the taxing borders of various countries.  Distance thresholds are necessary\r\nto correctly calculate some value-added taxes.\r\n\r\nDistance thresholds only apply to sales of goods in certain countries.  A distance threshold\r\nis applied for each ship-from/ship-to combination of countries.  The threshold amount is defined by\r\nthe ship-to country.\r\n\r\nGenerally, if you have exceeded a distance threshold for taxes between a pair of countries, your tax calculation\r\nwill be determined to be the rate in the destination country.  If you have not exceeded the threshold,\r\nyour tax calculation will be determined to be the rate in the origin country.\r\n\r\nThe amount of a threshold is not tracked or managed in AvaTax, but the decision of your tax compliance department\r\nas to whether you have exceeded this threshold is maintained in this object.  \r\n\r\nBy default, you are considered to have exceeded tax thresholds. If you wish to change this default, you can create \r\na company-distance-threshold object to select the correct behavior for this origin/destination tax calculation process.",
    "required": [
      "originCountry",
      "destinationCountry"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "A unique ID number representing this distance threshold object.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "companyId": {
        "format": "int32",
        "description": "The ID number of the company that defined this distance threshold.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "originCountry": {
        "description": "The origin country for this threshold.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string",
        "example": "FR"
      },
      "destinationCountry": {
        "description": "The destination country for this threshold.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string",
        "example": "BR"
      },
      "effDate": {
        "format": "date-time",
        "description": "For distance threshold values that change over time, this is the earliest date for which this distance\r\nthreshold is valid.  If null, this distance threshold is valid for all dates earlier than the `endDate` field.",
        "type": "string"
      },
      "endDate": {
        "format": "date-time",
        "description": "For distance threshold values that change over time, this is the latest date for which this distance\r\nthreshold is valid.  If null, this distance threshold is valid for all dates later than the `effDate` field.",
        "type": "string"
      },
      "thresholdExceeded": {
        "description": "True if your tax professional has determined that the value-added tax distance threshold is exceeded for this pair of countries.\r\n\r\nIf you set this value to `false`, your value added taxes will be calculated using the origin country.  Otherwise, value\r\nadded taxes will be calculated on the destination country.",
        "type": "boolean",
        "example": false
      },
      "type": {
        "description": "Indicates the distance threshold type.\r\n\r\nThis value can be either `Sale` or `Purchase`.",
        "maxLength": 20,
        "minLength": 0,
        "type": "string",
        "example": "Sale"
      }
    },
    "example": {
      "id": 0,
      "companyId": 0,
      "originCountry": "FR",
      "destinationCountry": "BR",
      "thresholdExceeded": false,
      "type": "Sale"
    },
    "x-methods-used-in": [
      "DistanceThresholds/CreateDistanceThreshold",
      "DistanceThresholds/GetDistanceThreshold",
      "DistanceThresholds/UpdateDistanceThreshold"
    ]
  },
  "FetchResult[CompanyDistanceThresholdModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/CompanyDistanceThresholdModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "DistanceThresholds/ListDistanceThresholds",
      "DistanceThresholds/QueryDistanceThresholds"
    ]
  },
  "FilingCalendarModel": {
    "description": "Represents a commitment to file a tax return on a recurring basis.\r\nOnly used if you subscribe to Avalara Returns.",
    "required": [
      "id",
      "companyId",
      "returnName",
      "taxTypeId"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique ID number of this filing calendar.",
        "type": "integer",
        "readOnly": true,
        "example": 56789
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the company to which this filing calendar belongs.",
        "type": "integer",
        "readOnly": true,
        "example": 12345
      },
      "returnName": {
        "description": "DEPRECATED - The legacy return name of the tax form to file.  Please use `taxFormCode` instead.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "CABOE401A2"
      },
      "formCountry": {
        "description": "Name or ISO 3166 code identifying the country that issued the tax form for this filing calendar.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string"
      },
      "formRegion": {
        "description": "Name or ISO 3166 code identifying the region that issued the tax form for this filing calendar.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string"
      },
      "taxFormCode": {
        "description": "The Avalara standard tax form code of the tax form for this filing calendar.  The first two characters of the tax form code\r\nare the ISO 3166 country code of the country that issued this form.",
        "type": "string"
      },
      "locationCode": {
        "description": "If this calendar is for a location-specific tax return, specify the location code here.  To file for all locations, leave this value NULL.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "outletTypeId": {
        "description": "If this calendar is for a location-specific tax return, specify the location-specific behavior here.",
        "enum": [
          "None",
          "Schedule",
          "Duplicate",
          "Consolidated"
        ],
        "type": "string",
        "example": "None",
        "x-enum-type": "OutletTypeId",
        "x-enum-description": "Indicates the behavior of a tax form for a company with multiple places of business.\n            \n            Some tax authorities require that a separate form must be filed for each place of business.",
        "x-enum-value-comments": {
          "None": "File a single return per cycle for your entire business.",
          "Schedule": "You may file separate forms for each outlet; contact the tax authority for more details about location based reporting requirements.",
          "Duplicate": "You may file separate forms for each outlet; contact the tax authority for more details about location based reporting requirements.",
          "Consolidated": "File a single return, but you must have a line item for each place of business."
        }
      },
      "paymentCurrency": {
        "description": "Specify the ISO 4217 currency code for the currency to remit for this tax return.  For all tax returns in the United States, specify \"USD\".",
        "maxLength": 3,
        "minLength": 0,
        "type": "string"
      },
      "filingFrequencyId": {
        "description": "The frequency on which this tax form is filed.",
        "enum": [
          "Monthly",
          "Quarterly",
          "SemiAnnually",
          "Annually",
          "Bimonthly",
          "Occasional",
          "InverseQuarterly"
        ],
        "type": "string",
        "example": "Quarterly",
        "x-enum-type": "FilingFrequencyId",
        "x-enum-description": "Filing Frequency types",
        "x-enum-value-comments": {
          "Monthly": "File once per month",
          "Quarterly": "File once per three months",
          "SemiAnnually": "File twice per year",
          "Annually": "File once per year",
          "Bimonthly": "File every other month",
          "Occasional": "File only when there are documents to report",
          "InverseQuarterly": "File for the first two months of each quarter, then do not file on the quarterly month."
        }
      },
      "months": {
        "format": "int16",
        "description": "A 16-bit bitmap containing a 1 for each month when the return should be filed.",
        "type": "integer",
        "example": 2340
      },
      "stateRegistrationId": {
        "description": "Tax Registration ID for this Region - in the U.S., this is for your state.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "101-123456"
      },
      "localRegistrationId": {
        "description": "Tax Registration ID for the local jurisdiction, if any.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "employerIdentificationNumber": {
        "description": "The Employer Identification Number or Taxpayer Identification Number that is to be used when filing this return.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "12-3456789"
      },
      "line1": {
        "description": "DEPRECATED - The first line of the mailing address that will be used when filling out this tax return.\r\nField will be no longer be available after the 17.9 release.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "2000 Main Street"
      },
      "line2": {
        "description": "DEPRECATED - The second line of the mailing address that will be used when filling out this tax return.\r\nPlease note that some tax forms do not support multiple address lines.\r\n\r\nField will be no longer be available after the 17.9 release.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "city": {
        "description": "DEPRECATED - The city name of the mailing address that will be used when filling out this tax return.\r\n\r\nField will be no longer be available after the 17.9 release.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Irvine"
      },
      "region": {
        "description": "DEPRECATED - The state, region, or province of the mailing address that will be used when filling out this tax return.\r\n\r\nField will be no longer be available after the 17.9 release.",
        "maxLength": 3,
        "minLength": 0,
        "type": "string",
        "example": "CA"
      },
      "postalCode": {
        "description": "DEPRECATED - The postal code or zip code of the mailing address that will be used when filling out this tax return.\r\n\r\nField will be no longer be available after the 17.9 release.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "92614"
      },
      "country": {
        "description": "DEPRECATED - The two character ISO-3166 country code of the mailing address that will be used when filling out this tax return.\r\n\r\nField will be no longer be available after the 17.9 release.",
        "maxLength": 2,
        "minLength": 2,
        "type": "string",
        "example": "US"
      },
      "mailingAddressLine1": {
        "description": "The first line of the mailing address that will be used when filling out this tax return.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "mailingAddressLine2": {
        "description": "The second line of the mailing address that will be used when filling out this tax return.\r\nPlease note that some tax forms do not support multiple address lines.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "mailingAddressCity": {
        "description": "The city name of the mailing address that will be used when filling out this tax return.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "mailingAddressRegion": {
        "description": "Name or ISO 3166 code identifying the region of the mailing address that will be used when filling out this tax return.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string"
      },
      "mailingAddressPostalCode": {
        "description": "The postal code or zip code of the mailing address that will be used when filling out this tax return.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "mailingAddressCountry": {
        "description": "Name or ISO 3166 code identifying the country of the mailing address that will be used when filling out this tax return.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string"
      },
      "phone": {
        "description": "The phone number to be used when filing this return.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "714 555-1212"
      },
      "customerFilingInstructions": {
        "description": "Special filing instructions to be used when filing this return.\r\nPlease note that requesting special filing instructions may incur additional costs.",
        "maxLength": 1000,
        "minLength": 0,
        "type": "string"
      },
      "legalEntityName": {
        "description": "The legal entity name to be used when filing this return.",
        "maxLength": 75,
        "minLength": 0,
        "type": "string",
        "example": "Bob's Artisan Pottery"
      },
      "effectiveDate": {
        "format": "date-time",
        "description": "The earliest date for the tax period when this return should be filed.\r\nThis date specifies the earliest date for tax transactions that should be reported on this filing calendar.\r\nPlease note that tax is usually filed one month in arrears: for example, tax for January transactions is typically filed during the month of February.",
        "type": "string",
        "example": "2015-01-01T00:00:00",
        "x-date-type": "date-only"
      },
      "endDate": {
        "format": "date-time",
        "description": "The last date for the tax period when this return should be filed.\r\nThis date specifies the last date for tax transactions that should be reported on this filing calendar.\r\nPlease note that tax is usually filed one month in arrears: for example, tax for January transactions is typically filed during the month of February.",
        "type": "string",
        "x-date-type": "date-only"
      },
      "filingTypeId": {
        "description": "The method to be used when filing this return.",
        "enum": [
          "PaperReturn",
          "ElectronicReturn",
          "SER",
          "EFTPaper",
          "PhonePaper",
          "SignatureReady",
          "EfileCheck"
        ],
        "type": "string",
        "example": "ElectronicReturn",
        "x-enum-type": "FilingTypeId",
        "x-enum-description": "A list of possible AvaFile filing types.",
        "x-enum-value-comments": {
          "PaperReturn": "Denotes the tax return is being filed on paper.",
          "ElectronicReturn": "Denotes the tax return is being filed via electronic means; excludes SST electronic filing.",
          "SER": "Denotes the tax return is an SST filing.",
          "EFTPaper": "Denotes a return is paid via EFT and filed on paper without payment.",
          "PhonePaper": "Denotes a return is paid via phone and filed on paper without payment.",
          "SignatureReady": "Denotes a return is prepared but delivered to the customer for filing and payment.",
          "EfileCheck": "Denotes a return which is filed online but paid by check."
        }
      },
      "eFileUsername": {
        "description": "If you file electronically, this is the username you use to log in to the tax authority's website.",
        "maxLength": 254,
        "minLength": 0,
        "type": "string"
      },
      "eFilePassword": {
        "description": "If you file electronically, this is the password or pass code you use to log in to the tax authority's website.",
        "maxLength": 40,
        "minLength": 0,
        "type": "string"
      },
      "prepayPercentage": {
        "format": "byte",
        "description": "If you are required to prepay a percentage of taxes for future periods, please specify the percentage in whole numbers; \r\nfor example, the value 90 would indicate 90%.",
        "type": "integer",
        "example": 90
      },
      "taxTypeId": {
        "description": "The type of tax to report on this return.",
        "enum": [
          "Excise",
          "Lodging",
          "Bottle",
          "All",
          "BothSalesAndUseTax",
          "ConsumerUseTax",
          "ConsumersUseAndSellersUseTax",
          "ConsumerUseAndSalesTax",
          "Fee",
          "VATInputTax",
          "VATNonrecoverableInputTax",
          "VATOutputTax",
          "Rental",
          "SalesTax",
          "UseTax"
        ],
        "type": "string",
        "example": "All",
        "x-enum-type": "MatchingTaxType",
        "x-enum-description": "This data type is only used when an object must \"Match\" tax types.  By specifying options here,\n            you can indicate which tax types will match for the purposes of this object.\n            For example, if you specify BothSalesAndUseTax, this value matches with both sales and seller's use tax.",
        "x-enum-value-comments": {
          "All": "Match all tax types",
          "BothSalesAndUseTax": "Match both Sales and Use Tax only",
          "ConsumerUseTax": "Match Consumer Use Tax only",
          "SalesTax": "Match Sales Tax only",
          "UseTax": "Match Seller's Use Tax only",
          "VATOutputTax": "Match VAT Output Tax only",
          "VATInputTax": "Match VAT Input Tax only",
          "VATNonrecoverableInputTax": "Match VAT Nonrecoverable Input Tax only",
          "Fee": "Match Fee tax types only",
          "Rental": "Match Rental tax types only",
          "ConsumerUseAndSalesTax": "Match both Consumer Use and Sales Tax types",
          "ConsumersUseAndSellersUseTax": "Match both Consumer Use and Seller's Use Tax types",
          "Excise": "Match medical excise type",
          "Lodging": "Match Lodging tax type",
          "Bottle": "Match bottle tax type"
        }
      },
      "internalNotes": {
        "description": "Internal filing notes.",
        "maxLength": 1000,
        "minLength": 0,
        "type": "string"
      },
      "alSignOn": {
        "description": "Custom filing information field for Alabama.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "alAccessCode": {
        "description": "Custom filing information field for Alabama.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "meBusinessCode": {
        "description": "Custom filing information field for Maine.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "iaBen": {
        "description": "Custom filing information field for Iowa.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "ctReg": {
        "description": "Custom filing information field for Connecticut.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "other1Name": {
        "description": "Custom filing information field.  Leave blank.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "other1Value": {
        "description": "Custom filing information field.  Leave blank.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "other2Name": {
        "description": "Custom filing information field.  Leave blank.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "other2Value": {
        "description": "Custom filing information field.  Leave blank.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "other3Name": {
        "description": "Custom filing information field.  Leave blank.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "other3Value": {
        "description": "Custom filing information field.  Leave blank.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "taxAuthorityId": {
        "format": "int32",
        "description": "The unique ID of the tax authority of this return.",
        "type": "integer",
        "readOnly": true
      },
      "taxAuthorityName": {
        "description": "The name of the tax authority of this return.",
        "type": "string",
        "readOnly": true
      },
      "taxAuthorityType": {
        "description": "The type description of the tax authority of this return.",
        "type": "string",
        "readOnly": true
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      }
    },
    "example": {
      "id": 56789,
      "companyId": 12345,
      "returnName": "CABOE401A2",
      "outletTypeId": "None",
      "filingFrequencyId": "Quarterly",
      "months": 2340,
      "stateRegistrationId": "101-123456",
      "employerIdentificationNumber": "12-3456789",
      "line1": "2000 Main Street",
      "city": "Irvine",
      "region": "CA",
      "postalCode": "92614",
      "country": "US",
      "phone": "714 555-1212",
      "legalEntityName": "Bob's Artisan Pottery",
      "effectiveDate": "2015-01-01",
      "filingTypeId": "ElectronicReturn",
      "prepayPercentage": 90,
      "taxTypeId": "All"
    },
    "x-methods-used-in": [
      "FilingCalendars/CreateFilingCalendars",
      "FilingCalendars/GetFilingCalendar",
      "FilingCalendars/UpdateFilingCalendar"
    ]
  },
  "FetchResult[FilingCalendarModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilingCalendarModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "FilingCalendars/ListFilingCalendars",
      "FilingCalendars/QueryFilingCalendars"
    ]
  },
  "CycleAddOptionModel": {
    "description": "Model with options for adding a new filing calendar",
    "type": "object",
    "properties": {
      "available": {
        "description": "True if this form can be added and filed for the current cycle. \"Current cycle\" is considered one month before the month of today's date.",
        "type": "boolean",
        "example": true
      },
      "transactionalPeriodStart": {
        "format": "date-time",
        "description": "The period start date for the customer's first transaction in the jurisdiction being added",
        "type": "string",
        "example": "2018-04-01T00:00:00",
        "x-date-type": "date-only"
      },
      "transactionalPeriodEnd": {
        "format": "date-time",
        "description": "The period end date for the customer's last transaction in the jurisdiction being added",
        "type": "string",
        "example": "2018-04-30T00:00:00",
        "x-date-type": "date-only"
      },
      "filingDueDate": {
        "format": "date-time",
        "description": "The jurisdiction-assigned due date for the form",
        "type": "string",
        "example": "2018-05-20T00:00:00",
        "x-date-type": "date-only"
      },
      "cycleName": {
        "description": "A descriptive name of the cycle and due date of form.",
        "type": "string",
        "example": "Monthly filing for April 2018, due May 20 2018."
      },
      "frequencyName": {
        "description": "The filing frequency of the form",
        "type": "string",
        "example": "Monthly"
      },
      "filingFrequencyCode": {
        "description": "A code assigned to the filing frequency",
        "type": "string",
        "example": "M"
      },
      "filingFrequencyId": {
        "description": "The filing frequency of the request",
        "enum": [
          "Monthly",
          "Quarterly",
          "SemiAnnually",
          "Annually",
          "Bimonthly",
          "Occasional",
          "InverseQuarterly"
        ],
        "type": "string",
        "x-enum-type": "FilingFrequencyId",
        "x-enum-description": "Filing Frequency types",
        "x-enum-value-comments": {
          "Monthly": "File once per month",
          "Quarterly": "File once per three months",
          "SemiAnnually": "File twice per year",
          "Annually": "File once per year",
          "Bimonthly": "File every other month",
          "Occasional": "File only when there are documents to report",
          "InverseQuarterly": "File for the first two months of each quarter, then do not file on the quarterly month."
        }
      },
      "cycleUnavailableReason": {
        "description": "An explanation for why this form cannot be added for the current cycle",
        "type": "string",
        "example": ""
      },
      "availableLocationCodes": {
        "description": "A list of outlet codes that can be assigned to this form for the current cycle",
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": []
      }
    },
    "example": {
      "available": true,
      "transactionalPeriodStart": "2018-04-01",
      "transactionalPeriodEnd": "2018-04-30",
      "filingDueDate": "2018-05-20",
      "cycleName": "Monthly filing for April 2018, due May 20 2018.",
      "frequencyName": "Monthly",
      "filingFrequencyCode": "M",
      "cycleUnavailableReason": "",
      "availableLocationCodes": []
    },
    "x-methods-used-in": [
      "FilingCalendars/CycleSafeAdd"
    ]
  },
  "CycleExpireModel": {
    "description": "Cycle Safe Expiration results.",
    "type": "object",
    "properties": {
      "success": {
        "description": "Whether or not the filing calendar can be expired.\r\ne.g. if user makes end date of a calendar earlier than latest filing, this would be set to false.",
        "type": "boolean",
        "example": true
      },
      "message": {
        "description": "The message to present to the user if expiration is successful or unsuccessful.",
        "type": "string"
      },
      "cycleExpirationOptions": {
        "description": "A list of options for expiring the filing calendar.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/CycleExpireOptionModel"
        },
        "example": [
          {
            "transactionalPeriodStart": "2016-12-01",
            "transactionalPeriodEnd": "2016-12-31",
            "filingDueDate": "2017-01-20",
            "cycleName": "Monthly filing for December 2016, due January 20 2017."
          }
        ]
      }
    },
    "example": {
      "success": true,
      "cycleExpirationOptions": [
        {
          "transactionalPeriodStart": "2016-12-01",
          "transactionalPeriodEnd": "2016-12-31",
          "filingDueDate": "2017-01-20",
          "cycleName": "Monthly filing for December 2016, due January 20 2017."
        }
      ]
    },
    "x-methods-used-in": [
      "FilingCalendars/CycleSafeExpiration"
    ]
  },
  "CycleExpireOptionModel": {
    "description": "Options for expiring a filing calendar.",
    "type": "object",
    "properties": {
      "transactionalPeriodStart": {
        "format": "date-time",
        "description": "The period start date for the customer's first transaction in the jurisdiction being expired.",
        "type": "string",
        "example": "2016-12-01T00:00:00",
        "x-date-type": "date-only"
      },
      "transactionalPeriodEnd": {
        "format": "date-time",
        "description": "The period end date for the customer's last transaction in the jurisdiction being expired.",
        "type": "string",
        "example": "2016-12-31T00:00:00",
        "x-date-type": "date-only"
      },
      "filingDueDate": {
        "format": "date-time",
        "description": "The jurisdiction-assigned due date for the form.",
        "type": "string",
        "example": "2017-01-20T00:00:00",
        "x-date-type": "date-only"
      },
      "cycleName": {
        "description": "A descriptive name of the cycle and due date of the form.",
        "type": "string",
        "example": "Monthly filing for December 2016, due January 20 2017."
      }
    },
    "example": {
      "transactionalPeriodStart": "2016-12-01",
      "transactionalPeriodEnd": "2016-12-31",
      "filingDueDate": "2017-01-20",
      "cycleName": "Monthly filing for December 2016, due January 20 2017."
    },
    "x-methods-used-in": []
  },
  "FilingCalendarEditModel": {
    "description": "An edit to be made on a filing calendar.",
    "required": [
      "fieldName",
      "questionId",
      "oldValue",
      "newValue"
    ],
    "type": "object",
    "properties": {
      "fieldName": {
        "description": "The name of the field to be modified.",
        "type": "string",
        "example": "Ein"
      },
      "questionId": {
        "format": "int32",
        "description": "The unique ID of the filing calendar question. \"Filing calendar question\" is the wording displayed to users for a given field.",
        "type": "integer",
        "example": 36
      },
      "oldValue": {
        "$ref": "#/definitions/FilingCalendarEditModel > OldValue"
      },
      "newValue": {
        "$ref": "#/definitions/FilingCalendarEditModel > NewValue"
      }
    },
    "example": {
      "fieldName": "Ein",
      "questionId": 36,
      "oldValue": "002094004",
      "newValue": "002094005"
    },
    "x-methods-used-in": [
      "FilingCalendars/CycleSafeEdit"
    ]
  },
  "CycleEditOptionModel": {
    "description": "Model with options for actual filing calendar output based on user edits to filing calendar.",
    "type": "object",
    "properties": {
      "success": {
        "description": "Whether or not changes can be made to the filing calendar.",
        "type": "boolean",
        "example": true
      },
      "message": {
        "description": "The message to present to the user when calendar is successfully or unsuccessfully changed.",
        "type": "string",
        "example": "Clone unnecessary.  No approved instances of filing calendar"
      },
      "customerMustApprove": {
        "description": "Whether or not the user should be warned of a change, because some changes are risky and may be being done not in accordance with jurisdiction rules.\r\nFor example, user would be warned if user changes filing frequency to new frequency with a start date during an accrual month of the existing frequency.",
        "type": "boolean",
        "example": false
      },
      "mustCloneFilingCalendar": {
        "description": "True if the filing calendar must be cloned to allow this change; false if the existing filing calendar can be changed itself.",
        "type": "boolean",
        "example": false
      },
      "clonedCalendarEffDate": {
        "format": "date-time",
        "description": "The effective date of the filing calendar (only applies if cloning).",
        "type": "string",
        "x-date-type": "date-only"
      },
      "expiredCalendarEndDate": {
        "format": "date-time",
        "description": "The expired end date of the old filing calendar (only applies if cloning).",
        "type": "string",
        "x-date-type": "date-only"
      }
    },
    "example": {
      "success": true,
      "message": "Clone unnecessary.  No approved instances of filing calendar",
      "customerMustApprove": false,
      "mustCloneFilingCalendar": false
    },
    "x-methods-used-in": [
      "FilingCalendars/CycleSafeEdit"
    ]
  },
  "FetchResult[FilingRequestModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilingRequestModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "FilingCalendars/ListFilingRequests",
      "FilingCalendars/QueryFilingRequests"
    ]
  },
  "FilingRequestModel": {
    "description": "Represents a commitment to file a tax return on a recurring basis.\r\nOnly used if you subscribe to Avalara Returns.",
    "required": [
      "companyId",
      "data"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique ID number of this filing request.",
        "type": "integer",
        "example": 12345
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the company to which this filing request belongs.",
        "type": "integer",
        "example": 12345
      },
      "filingRequestStatusId": {
        "description": "The current status of this request",
        "enum": [
          "New",
          "Validated",
          "Pending",
          "Active",
          "PendingStop",
          "Inactive",
          "ChangeRequest",
          "RequestApproved",
          "RequestDenied"
        ],
        "type": "string",
        "readOnly": true,
        "example": "New",
        "x-enum-type": "FilingRequestStatus",
        "x-enum-description": "Filing Request Status types",
        "x-enum-value-comments": {
          "New": "Customer is building a request for a new filing calendar",
          "Validated": "Customer’s information validated before submitting to go live.  All required information as per state and form selection is entered.",
          "Pending": "Customer submitted a request for a new filing calendar",
          "Active": "Filing calender is active",
          "PendingStop": "Customer requested to deactivate filing calendar",
          "Inactive": "Filing calendar is inactive",
          "ChangeRequest": "This indicates that there is a new change request.",
          "RequestApproved": "This indicates that the change request was approved.",
          "RequestDenied": "This indicates that compliance rejected the request."
        }
      },
      "data": {
        "$ref": "#/definitions/FilingRequestDataModel",
        "description": "The data model object of the request",
        "example": {
          "companyReturnId": 1,
          "returnName": "WIST12CT",
          "filingFrequencyId": "Monthly",
          "registrationId": "1234",
          "months": 2,
          "taxTypeId": "SalesTax",
          "locationCode": "LOC-1",
          "effDate": "2017-01-01",
          "endDate": "2017-01-01",
          "isClone": false,
          "region": "WI",
          "taxAuthorityId": 121,
          "taxAuthorityName": "WISCONSIN",
          "answers": [
            {
              "filingQuestionId": 1,
              "answer": "Answer to question 1"
            },
            {
              "filingQuestionId": 2,
              "answer": "Answer to question 2"
            }
          ]
        }
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      }
    },
    "example": {
      "id": 12345,
      "companyId": 12345,
      "filingRequestStatusId": "New",
      "data": {
        "companyReturnId": 1,
        "returnName": "WIST12CT",
        "filingFrequencyId": "Monthly",
        "registrationId": "1234",
        "months": 2,
        "taxTypeId": "SalesTax",
        "locationCode": "LOC-1",
        "effDate": "2017-01-01",
        "endDate": "2017-01-01",
        "isClone": false,
        "region": "WI",
        "taxAuthorityId": 121,
        "taxAuthorityName": "WISCONSIN",
        "answers": [
          {
            "filingQuestionId": 1,
            "answer": "Answer to question 1"
          },
          {
            "filingQuestionId": 2,
            "answer": "Answer to question 2"
          }
        ]
      }
    },
    "x-methods-used-in": [
      "FilingCalendars/CancelFilingRequests",
      "FilingCalendars/RequestFilingCalendarUpdate",
      "FilingCalendars/CreateFilingRequests",
      "FilingCalendars/GetFilingRequest",
      "FilingCalendars/UpdateFilingRequest",
      "FilingCalendars/ApproveFilingRequest",
      "FilingCalendars/CancelFilingRequest"
    ]
  },
  "FilingRequestDataModel": {
    "description": "Represents a commitment to file a tax return on a recurring basis.\r\nOnly used if you subscribe to Avalara Returns.",
    "required": [
      "filingFrequencyId",
      "months",
      "effDate"
    ],
    "type": "object",
    "properties": {
      "companyReturnId": {
        "format": "int64",
        "description": "The company return ID if requesting an update.",
        "type": "integer"
      },
      "returnName": {
        "description": "DEPRECATED - The legacy return name of the requested calendar.",
        "type": "string"
      },
      "taxFormCode": {
        "description": "The Avalara standard tax form code of the tax form for this filing calendar.  The first two characters of the tax form code\r\nare the ISO 3166 country code of the country that issued this form.",
        "type": "string"
      },
      "filingFrequencyId": {
        "description": "The filing frequency of the request",
        "enum": [
          "Monthly",
          "Quarterly",
          "SemiAnnually",
          "Annually",
          "Bimonthly",
          "Occasional",
          "InverseQuarterly"
        ],
        "type": "string",
        "example": 0,
        "x-enum-type": "FilingFrequencyId",
        "x-enum-description": "Filing Frequency types",
        "x-enum-value-comments": {
          "Monthly": "File once per month",
          "Quarterly": "File once per three months",
          "SemiAnnually": "File twice per year",
          "Annually": "File once per year",
          "Bimonthly": "File every other month",
          "Occasional": "File only when there are documents to report",
          "InverseQuarterly": "File for the first two months of each quarter, then do not file on the quarterly month."
        }
      },
      "registrationId": {
        "description": "State registration ID of the company requesting the filing calendar.",
        "type": "string"
      },
      "months": {
        "format": "int16",
        "description": "The months of the request",
        "type": "integer",
        "example": 0
      },
      "taxTypeId": {
        "description": "The type of tax to report on this return.",
        "enum": [
          "Excise",
          "Lodging",
          "Bottle",
          "All",
          "BothSalesAndUseTax",
          "ConsumerUseTax",
          "ConsumersUseAndSellersUseTax",
          "ConsumerUseAndSalesTax",
          "Fee",
          "VATInputTax",
          "VATNonrecoverableInputTax",
          "VATOutputTax",
          "Rental",
          "SalesTax",
          "UseTax"
        ],
        "type": "string",
        "example": 0,
        "x-enum-type": "MatchingTaxType",
        "x-enum-description": "This data type is only used when an object must \"Match\" tax types.  By specifying options here,\n            you can indicate which tax types will match for the purposes of this object.\n            For example, if you specify BothSalesAndUseTax, this value matches with both sales and seller's use tax.",
        "x-enum-value-comments": {
          "All": "Match all tax types",
          "BothSalesAndUseTax": "Match both Sales and Use Tax only",
          "ConsumerUseTax": "Match Consumer Use Tax only",
          "SalesTax": "Match Sales Tax only",
          "UseTax": "Match Seller's Use Tax only",
          "VATOutputTax": "Match VAT Output Tax only",
          "VATInputTax": "Match VAT Input Tax only",
          "VATNonrecoverableInputTax": "Match VAT Nonrecoverable Input Tax only",
          "Fee": "Match Fee tax types only",
          "Rental": "Match Rental tax types only",
          "ConsumerUseAndSalesTax": "Match both Consumer Use and Sales Tax types",
          "ConsumersUseAndSellersUseTax": "Match both Consumer Use and Seller's Use Tax types",
          "Excise": "Match medical excise type",
          "Lodging": "Match Lodging tax type",
          "Bottle": "Match bottle tax type"
        }
      },
      "locationCode": {
        "description": "Location code of the request",
        "type": "string"
      },
      "effDate": {
        "format": "date-time",
        "description": "Filing cycle effective date of the request",
        "type": "string",
        "x-date-type": "date-only"
      },
      "endDate": {
        "format": "date-time",
        "description": "Filing cycle end date of the request",
        "type": "string",
        "x-date-type": "date-only"
      },
      "isClone": {
        "description": "Flag if the request is a clone of a current filing calendar",
        "type": "boolean"
      },
      "country": {
        "description": "The two character ISO 3166 country code of the country that issued the tax form for this filing calendar.",
        "type": "string",
        "readOnly": true
      },
      "region": {
        "description": "The two or three character ISO 3166 code of the region / state / province that issued the tax form for this filing calendar.",
        "type": "string",
        "readOnly": true
      },
      "taxAuthorityId": {
        "format": "int32",
        "description": "The tax authority id of the return",
        "type": "integer",
        "readOnly": true
      },
      "taxAuthorityName": {
        "description": "The tax authority name on the return",
        "type": "string",
        "readOnly": true
      },
      "answers": {
        "description": "Filing question answers",
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilingAnswerModel"
        }
      }
    },
    "example": {
      "filingFrequencyId": 0,
      "months": 0,
      "taxTypeId": 0
    },
    "x-methods-used-in": []
  },
  "FilingAnswerModel": {
    "description": "",
    "required": [
      "filingQuestionId",
      "answer"
    ],
    "type": "object",
    "properties": {
      "filingQuestionId": {
        "format": "int64",
        "description": "The ID number for a filing question",
        "type": "integer",
        "example": 1
      },
      "answer": {
        "$ref": "#/definitions/FilingAnswerModel > Answer"
      }
    },
    "example": {
      "filingQuestionId": 1,
      "answer": "Answer to question 1"
    },
    "x-methods-used-in": []
  },
  "LoginVerificationOutputModel": {
    "description": "This is the output model coming from skyscraper services",
    "required": [
      "jobId"
    ],
    "type": "object",
    "properties": {
      "jobId": {
        "format": "int32",
        "description": "The job Id returned from skyscraper",
        "type": "integer",
        "example": 8366
      },
      "operationStatus": {
        "description": "The operation status of the job",
        "type": "string",
        "example": "Pending"
      },
      "message": {
        "description": "The message returned from the job",
        "type": "string",
        "example": ""
      },
      "loginSuccess": {
        "description": "Indicates if the login was successful",
        "type": "boolean",
        "example": true
      }
    },
    "example": {
      "jobId": 8366,
      "operationStatus": "Pending",
      "message": "",
      "loginSuccess": true
    },
    "x-methods-used-in": [
      "FilingCalendars/LoginVerificationStatus",
      "FilingCalendars/LoginVerificationRequest"
    ]
  },
  "LoginVerificationInputModel": {
    "description": "Represents a verification request using Skyscraper for a company",
    "required": [
      "companyId",
      "accountId",
      "region",
      "username",
      "password"
    ],
    "type": "object",
    "properties": {
      "companyId": {
        "format": "int32",
        "description": "CompanyId that we are verifying the login information for",
        "type": "integer",
        "example": 12345
      },
      "accountId": {
        "format": "int32",
        "description": "AccountId of the login verification",
        "type": "integer",
        "example": 1987654323
      },
      "region": {
        "description": "Region of the verification request",
        "type": "string",
        "example": "AR"
      },
      "username": {
        "description": "Username that we are using for verification",
        "type": "string",
        "example": "Test"
      },
      "password": {
        "description": "Password we are using for verification",
        "type": "string",
        "example": "Test"
      },
      "additionalOptions": {
        "description": "Additional options of the verification",
        "type": "string",
        "example": "4133|AR-2131232-13"
      },
      "bulkRequestId": {
        "format": "int32",
        "description": "Bulk Request Id of the verification",
        "type": "integer",
        "example": 1
      },
      "priority": {
        "format": "int32",
        "description": "Priority of the verification request",
        "type": "integer",
        "example": 2
      }
    },
    "example": {
      "companyId": 12345,
      "accountId": 1987654323,
      "region": "AR",
      "username": "Test",
      "password": "Test",
      "additionalOptions": "4133|AR-2131232-13",
      "bulkRequestId": 1,
      "priority": 2
    },
    "x-methods-used-in": [
      "FilingCalendars/LoginVerificationRequest"
    ]
  },
  "FetchResult[FilingReturnModelBasic]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilingReturnModelBasic"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Filings/GetFilingsReturns"
    ]
  },
  "FilingReturnModelBasic": {
    "description": "Filing Returns Model",
    "type": "object",
    "properties": {
      "companyId": {
        "format": "int64",
        "description": "The unique ID number of the company filing return.",
        "type": "integer",
        "example": 0
      },
      "id": {
        "format": "int64",
        "description": "The unique ID number of this filing return.",
        "type": "integer",
        "example": 5233103
      },
      "filingId": {
        "format": "int64",
        "description": "The filing id that this return belongs too",
        "type": "integer",
        "example": 0
      },
      "resourceFileId": {
        "format": "int64",
        "description": "The resourceFileId of the return",
        "type": "integer",
        "example": 0
      },
      "filingRegionId": {
        "format": "int64",
        "description": "The region id that this return belongs too",
        "type": "integer",
        "example": 0
      },
      "filingCalendarId": {
        "format": "int64",
        "description": "The unique ID number of the filing calendar associated with this return.",
        "type": "integer",
        "example": 513256
      },
      "country": {
        "description": "The country of the form.",
        "type": "string"
      },
      "region": {
        "description": "The region of the form.",
        "type": "string"
      },
      "endPeriodMonth": {
        "format": "byte",
        "description": "The month of the filing period for this tax filing.  \r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.  \r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
        "type": "integer",
        "example": 1
      },
      "endPeriodYear": {
        "format": "int16",
        "description": "The year of the filing period for this tax filing.\r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.  \r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
        "type": "integer",
        "example": 2017
      },
      "status": {
        "description": "The current status of the filing return.",
        "enum": [
          "PendingApproval",
          "Dirty",
          "ApprovedToFile",
          "PendingFiling",
          "PendingFilingOnBehalf",
          "Filed",
          "FiledOnBehalf",
          "ReturnAccepted",
          "ReturnAcceptedOnBehalf",
          "PaymentRemitted",
          "Voided",
          "PendingReturn",
          "PendingReturnOnBehalf",
          "DoNotFile",
          "ReturnRejected",
          "ReturnRejectedOnBehalf",
          "ApprovedToFileOnBehalf"
        ],
        "type": "string",
        "example": "PendingApproval",
        "x-enum-type": "FilingStatusId",
        "x-enum-description": "Filing Status",
        "x-enum-value-comments": {}
      },
      "filingFrequency": {
        "description": "The filing frequency of the return.",
        "enum": [
          "Monthly",
          "Quarterly",
          "SemiAnnually",
          "Annually",
          "Bimonthly",
          "Occasional",
          "InverseQuarterly"
        ],
        "type": "string",
        "example": "Monthly",
        "x-enum-type": "FilingFrequencyId",
        "x-enum-description": "Filing Frequency types",
        "x-enum-value-comments": {
          "Monthly": "File once per month",
          "Quarterly": "File once per three months",
          "SemiAnnually": "File twice per year",
          "Annually": "File once per year",
          "Bimonthly": "File every other month",
          "Occasional": "File only when there are documents to report",
          "InverseQuarterly": "File for the first two months of each quarter, then do not file on the quarterly month."
        }
      },
      "filedDate": {
        "format": "date-time",
        "description": "The date the return was filed by Avalara.",
        "type": "string"
      },
      "salesAmount": {
        "format": "double",
        "description": "The sales amount.",
        "type": "number",
        "example": 0
      },
      "filingType": {
        "description": "The filing type of the return.",
        "enum": [
          "PaperReturn",
          "ElectronicReturn",
          "SER",
          "EFTPaper",
          "PhonePaper",
          "SignatureReady",
          "EfileCheck"
        ],
        "type": "string",
        "example": "ElectronicReturn",
        "x-enum-type": "FilingTypeId",
        "x-enum-description": "A list of possible AvaFile filing types.",
        "x-enum-value-comments": {
          "PaperReturn": "Denotes the tax return is being filed on paper.",
          "ElectronicReturn": "Denotes the tax return is being filed via electronic means; excludes SST electronic filing.",
          "SER": "Denotes the tax return is an SST filing.",
          "EFTPaper": "Denotes a return is paid via EFT and filed on paper without payment.",
          "PhonePaper": "Denotes a return is paid via phone and filed on paper without payment.",
          "SignatureReady": "Denotes a return is prepared but delivered to the customer for filing and payment.",
          "EfileCheck": "Denotes a return which is filed online but paid by check."
        }
      },
      "formName": {
        "description": "The name of the form.",
        "type": "string",
        "example": "AL 2100"
      },
      "remitAmount": {
        "format": "double",
        "description": "The remittance amount of the return.",
        "type": "number",
        "example": 0
      },
      "formCode": {
        "description": "The unique code of the form.",
        "type": "string",
        "example": "AL2100"
      },
      "description": {
        "description": "A description for the return.",
        "type": "string",
        "example": "Sales Tax Return"
      },
      "taxableAmount": {
        "format": "double",
        "description": "The taxable amount.",
        "type": "number",
        "example": 0
      },
      "taxAmount": {
        "format": "double",
        "description": "The tax amount.",
        "type": "number",
        "example": 0
      },
      "collectAmount": {
        "format": "double",
        "description": "The amount collected by avalara for this return",
        "type": "number",
        "example": 1
      },
      "taxDueAmount": {
        "format": "double",
        "description": "The tax due amount.",
        "type": "number",
        "example": 0
      },
      "nonTaxableAmount": {
        "format": "double",
        "description": "The non-taxable amount.",
        "type": "number",
        "example": 0
      },
      "nonTaxableDueAmount": {
        "format": "double",
        "description": "The non-taxable due amount.",
        "type": "number",
        "example": 0
      },
      "consumerUseTaxAmount": {
        "format": "double",
        "description": "Consumer use tax liability.",
        "type": "number",
        "example": 0
      },
      "consumerUseNonTaxableAmount": {
        "format": "double",
        "description": "Consumer use non-taxable amount.",
        "type": "number",
        "example": 0
      },
      "consumerUseTaxableAmount": {
        "format": "double",
        "description": "Consumer use taxable amount.",
        "type": "number",
        "example": 0
      },
      "excludedSalesAmount": {
        "format": "double",
        "description": "The amount of sales excluded from the liability calculation",
        "type": "number",
        "example": 0
      },
      "excludedNonTaxableAmount": {
        "format": "double",
        "description": "The amount of non-taxable sales excluded from the liability calculation",
        "type": "number",
        "example": 0
      },
      "excludedTaxAmount": {
        "format": "double",
        "description": "The amount of tax excluded from the liability calculation",
        "type": "number",
        "example": 0
      },
      "accrualType": {
        "description": "Accrual type of the return",
        "enum": [
          "Filing",
          "Accrual"
        ],
        "type": "string",
        "example": 0,
        "x-enum-type": "AccrualType",
        "x-enum-description": "Accrual types",
        "x-enum-value-comments": {
          "Filing": "Filing indicates that this tax return should be filed with its tax authority by its due date. For example, if you file annually, you will have eleven months of Accrual returns and one Filing return.",
          "Accrual": "An Accrual filing indicates taxes that are accrued, intended to be filed on a future tax return. For example, if you file annually, you will have eleven months of Accrual returns and one Filing return."
        }
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      }
    },
    "example": {
      "companyId": 0,
      "id": 5233103,
      "filingId": 0,
      "resourceFileId": 0,
      "filingRegionId": 0,
      "filingCalendarId": 513256,
      "endPeriodMonth": 1,
      "endPeriodYear": 2017,
      "status": "PendingApproval",
      "filingFrequency": "Monthly",
      "salesAmount": 0,
      "filingType": "ElectronicReturn",
      "formName": "AL 2100",
      "remitAmount": 0,
      "formCode": "AL2100",
      "description": "Sales Tax Return",
      "taxableAmount": 0,
      "taxAmount": 0,
      "collectAmount": 1,
      "taxDueAmount": 0,
      "nonTaxableAmount": 0,
      "nonTaxableDueAmount": 0,
      "consumerUseTaxAmount": 0,
      "consumerUseNonTaxableAmount": 0,
      "consumerUseTaxableAmount": 0,
      "excludedSalesAmount": 0,
      "excludedNonTaxableAmount": 0,
      "excludedTaxAmount": 0,
      "accrualType": 0
    },
    "x-methods-used-in": []
  },
  "FetchResult[FilingModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilingModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Filings/GetFilings",
      "Filings/GetFilingsByCountry",
      "Filings/GetFilingsByCountryRegion",
      "Filings/GetFilingsByReturnName",
      "Filings/RebuildFilingsByCountryRegion",
      "Filings/RebuildFilingsByCountry",
      "Filings/RebuildFilings"
    ]
  },
  "FilingModel": {
    "description": "Represents a listing of all tax calculation data for filings and for accruing to future filings.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique ID number of this filing.",
        "type": "integer",
        "example": 326529
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the company for this filing.",
        "type": "integer",
        "example": 62593
      },
      "month": {
        "format": "byte",
        "description": "The month of the filing period for this tax filing.  \r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.  \r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
        "type": "integer",
        "example": 10
      },
      "year": {
        "format": "int16",
        "description": "The year of the filing period for this tax filing.\r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.  \r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
        "type": "integer",
        "example": 2016
      },
      "type": {
        "description": "Indicates whether this is an original or an amended filing.",
        "enum": [
          "Original",
          "Amended",
          "Test"
        ],
        "type": "string",
        "example": "Original",
        "x-enum-type": "WorksheetTypeId",
        "x-enum-description": "Filing worksheet Type",
        "x-enum-value-comments": {
          "Original": "The original filing for a period",
          "Amended": "Represents an amended filing for a period",
          "Test": "Represents a test filing"
        }
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      },
      "filingRegions": {
        "description": "A listing of regional tax filings within this time period.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilingRegionModel"
        },
        "example": [
          {
            "id": 2892824,
            "filingId": 0,
            "country": "US",
            "region": "AZ",
            "salesAmount": 80.48,
            "taxableAmount": 24.49,
            "taxAmount": 2.2,
            "taxDueAmount": 0,
            "collectAmount": 1.1,
            "totalRemittanceAmount": 0,
            "nonTaxableAmount": 55.99,
            "consumerUseTaxAmount": 0,
            "consumerUseNonTaxableAmount": 0,
            "consumerUseTaxableAmount": 0,
            "startDate": "2016-10-01T00:00:00",
            "endDate": "2016-10-31T00:00:00",
            "hasNexus": true,
            "status": "PendingApproval",
            "returns": [
              {
                "id": 5233103,
                "filingRegionId": 0,
                "filingCalendarId": 513256,
                "status": "PendingApproval",
                "filingFrequency": "Monthly",
                "salesAmount": 0,
                "filingType": "ElectronicReturn",
                "formName": "AL 2100",
                "remitAmount": 0,
                "formCode": "AL2100",
                "description": "Sales Tax Return",
                "taxableAmount": 0,
                "taxAmount": 0,
                "collectAmount": 1,
                "taxDueAmount": 0,
                "nonTaxableAmount": 0,
                "nonTaxableDueAmount": 0,
                "consumerUseTaxAmount": 0,
                "consumerUseTaxDueAmount": 0,
                "consumerUseNonTaxableAmount": 0,
                "consumerUseTaxableAmount": 0,
                "totalAdjustments": 0,
                "excludedSalesAmount": 0,
                "excludedNonTaxableAmount": 0,
                "excludedTaxAmount": 0,
                "adjustments": [
                  {
                    "id": 15634,
                    "amount": 100,
                    "period": "CurrentPeriod",
                    "type": "Discount",
                    "isCalculated": false,
                    "accountType": "AccountsReceivableAccountsPayable"
                  }
                ],
                "totalAugmentations": 0,
                "augmentations": [
                  {
                    "id": 103230,
                    "fieldAmount": 10,
                    "fieldName": "Credit from the State"
                  }
                ],
                "totalPayments": 0,
                "accrualType": 0
              }
            ]
          }
        ]
      }
    },
    "example": {
      "id": 326529,
      "companyId": 62593,
      "month": 10,
      "year": 2016,
      "type": "Original",
      "filingRegions": [
        {
          "id": 2892824,
          "filingId": 0,
          "country": "US",
          "region": "AZ",
          "salesAmount": 80.48,
          "taxableAmount": 24.49,
          "taxAmount": 2.2,
          "taxDueAmount": 0,
          "collectAmount": 1.1,
          "totalRemittanceAmount": 0,
          "nonTaxableAmount": 55.99,
          "consumerUseTaxAmount": 0,
          "consumerUseNonTaxableAmount": 0,
          "consumerUseTaxableAmount": 0,
          "startDate": "2016-10-01T00:00:00",
          "endDate": "2016-10-31T00:00:00",
          "hasNexus": true,
          "status": "PendingApproval",
          "returns": [
            {
              "id": 5233103,
              "filingRegionId": 0,
              "filingCalendarId": 513256,
              "status": "PendingApproval",
              "filingFrequency": "Monthly",
              "salesAmount": 0,
              "filingType": "ElectronicReturn",
              "formName": "AL 2100",
              "remitAmount": 0,
              "formCode": "AL2100",
              "description": "Sales Tax Return",
              "taxableAmount": 0,
              "taxAmount": 0,
              "collectAmount": 1,
              "taxDueAmount": 0,
              "nonTaxableAmount": 0,
              "nonTaxableDueAmount": 0,
              "consumerUseTaxAmount": 0,
              "consumerUseTaxDueAmount": 0,
              "consumerUseNonTaxableAmount": 0,
              "consumerUseTaxableAmount": 0,
              "totalAdjustments": 0,
              "excludedSalesAmount": 0,
              "excludedNonTaxableAmount": 0,
              "excludedTaxAmount": 0,
              "adjustments": [
                {
                  "id": 15634,
                  "amount": 100,
                  "period": "CurrentPeriod",
                  "type": "Discount",
                  "isCalculated": false,
                  "accountType": "AccountsReceivableAccountsPayable"
                }
              ],
              "totalAugmentations": 0,
              "augmentations": [
                {
                  "id": 103230,
                  "fieldAmount": 10,
                  "fieldName": "Credit from the State"
                }
              ],
              "totalPayments": 0,
              "accrualType": 0
            }
          ]
        }
      ]
    },
    "x-methods-used-in": [
      "Filings/ApproveFilingsCountryRegion",
      "Filings/ApproveFilingsCountry",
      "Filings/ApproveFilings",
      "Filings/UpdateReturnAugmentation"
    ]
  },
  "FilingRegionModel": {
    "description": "Regions",
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique ID number of this filing region.",
        "type": "integer",
        "example": 2892824
      },
      "filingId": {
        "format": "int64",
        "description": "The filing id that this region belongs too",
        "type": "integer",
        "example": 0
      },
      "country": {
        "description": "The two-character ISO-3166 code for the country.",
        "type": "string",
        "example": "US"
      },
      "region": {
        "description": "The two or three character region code for the region.",
        "type": "string",
        "example": "AZ"
      },
      "salesAmount": {
        "format": "double",
        "description": "The sales amount.",
        "type": "number",
        "example": 80.48
      },
      "taxableAmount": {
        "format": "double",
        "description": "The taxable amount.",
        "type": "number",
        "example": 24.49
      },
      "taxAmount": {
        "format": "double",
        "description": "The tax amount.",
        "type": "number",
        "example": 2.2
      },
      "taxDueAmount": {
        "format": "double",
        "description": "The tax amount due.",
        "type": "number",
        "example": 0
      },
      "collectAmount": {
        "format": "double",
        "description": "The amount collected by Avalara for this region",
        "type": "number",
        "example": 1.1
      },
      "totalRemittanceAmount": {
        "format": "double",
        "description": "Total remittance amount of all returns in region",
        "type": "number",
        "example": 0
      },
      "nonTaxableAmount": {
        "format": "double",
        "description": "The non-taxable amount.",
        "type": "number",
        "example": 55.99
      },
      "consumerUseTaxAmount": {
        "format": "double",
        "description": "Consumer use tax liability.",
        "type": "number",
        "example": 0
      },
      "consumerUseNonTaxableAmount": {
        "format": "double",
        "description": "Consumer use non-taxable amount.",
        "type": "number",
        "example": 0
      },
      "consumerUseTaxableAmount": {
        "format": "double",
        "description": "Consumer use taxable amount.",
        "type": "number",
        "example": 0
      },
      "approveDate": {
        "format": "date-time",
        "description": "The date the filing region was approved.",
        "type": "string"
      },
      "startDate": {
        "format": "date-time",
        "description": "The start date for the filing cycle.",
        "type": "string",
        "example": "2016-10-01T00:00:00"
      },
      "endDate": {
        "format": "date-time",
        "description": "The end date for the filing cycle.",
        "type": "string",
        "example": "2016-10-31T00:00:00"
      },
      "hasNexus": {
        "description": "Whether or not you have nexus in this region.",
        "type": "boolean",
        "example": true
      },
      "status": {
        "description": "The current status of the filing region.",
        "enum": [
          "PendingApproval",
          "Dirty",
          "ApprovedToFile",
          "PendingFiling",
          "PendingFilingOnBehalf",
          "Filed",
          "FiledOnBehalf",
          "ReturnAccepted",
          "ReturnAcceptedOnBehalf",
          "PaymentRemitted",
          "Voided",
          "PendingReturn",
          "PendingReturnOnBehalf",
          "DoNotFile",
          "ReturnRejected",
          "ReturnRejectedOnBehalf",
          "ApprovedToFileOnBehalf"
        ],
        "type": "string",
        "example": "PendingApproval",
        "x-enum-type": "FilingStatusId",
        "x-enum-description": "Filing Status",
        "x-enum-value-comments": {}
      },
      "returns": {
        "description": "A list of tax returns in this region.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilingReturnModel"
        },
        "example": [
          {
            "id": 5233103,
            "filingRegionId": 0,
            "filingCalendarId": 513256,
            "status": "PendingApproval",
            "filingFrequency": "Monthly",
            "salesAmount": 0,
            "filingType": "ElectronicReturn",
            "formName": "AL 2100",
            "remitAmount": 0,
            "formCode": "AL2100",
            "description": "Sales Tax Return",
            "taxableAmount": 0,
            "taxAmount": 0,
            "collectAmount": 1,
            "taxDueAmount": 0,
            "nonTaxableAmount": 0,
            "nonTaxableDueAmount": 0,
            "consumerUseTaxAmount": 0,
            "consumerUseTaxDueAmount": 0,
            "consumerUseNonTaxableAmount": 0,
            "consumerUseTaxableAmount": 0,
            "totalAdjustments": 0,
            "excludedSalesAmount": 0,
            "excludedNonTaxableAmount": 0,
            "excludedTaxAmount": 0,
            "adjustments": [
              {
                "id": 15634,
                "amount": 100,
                "period": "CurrentPeriod",
                "type": "Discount",
                "isCalculated": false,
                "accountType": "AccountsReceivableAccountsPayable"
              }
            ],
            "totalAugmentations": 0,
            "augmentations": [
              {
                "id": 103230,
                "fieldAmount": 10,
                "fieldName": "Credit from the State"
              }
            ],
            "totalPayments": 0,
            "accrualType": 0
          }
        ]
      },
      "suggestReturns": {
        "description": "A list of tax returns in this region.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilingsCheckupSuggestedFormModel"
        }
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      }
    },
    "example": {
      "id": 2892824,
      "filingId": 0,
      "country": "US",
      "region": "AZ",
      "salesAmount": 80.48,
      "taxableAmount": 24.49,
      "taxAmount": 2.2,
      "taxDueAmount": 0,
      "collectAmount": 1.1,
      "totalRemittanceAmount": 0,
      "nonTaxableAmount": 55.99,
      "consumerUseTaxAmount": 0,
      "consumerUseNonTaxableAmount": 0,
      "consumerUseTaxableAmount": 0,
      "startDate": "2016-10-01T00:00:00",
      "endDate": "2016-10-31T00:00:00",
      "hasNexus": true,
      "status": "PendingApproval",
      "returns": [
        {
          "id": 5233103,
          "filingRegionId": 0,
          "filingCalendarId": 513256,
          "status": "PendingApproval",
          "filingFrequency": "Monthly",
          "salesAmount": 0,
          "filingType": "ElectronicReturn",
          "formName": "AL 2100",
          "remitAmount": 0,
          "formCode": "AL2100",
          "description": "Sales Tax Return",
          "taxableAmount": 0,
          "taxAmount": 0,
          "collectAmount": 1,
          "taxDueAmount": 0,
          "nonTaxableAmount": 0,
          "nonTaxableDueAmount": 0,
          "consumerUseTaxAmount": 0,
          "consumerUseTaxDueAmount": 0,
          "consumerUseNonTaxableAmount": 0,
          "consumerUseTaxableAmount": 0,
          "totalAdjustments": 0,
          "excludedSalesAmount": 0,
          "excludedNonTaxableAmount": 0,
          "excludedTaxAmount": 0,
          "adjustments": [
            {
              "id": 15634,
              "amount": 100,
              "period": "CurrentPeriod",
              "type": "Discount",
              "isCalculated": false,
              "accountType": "AccountsReceivableAccountsPayable"
            }
          ],
          "totalAugmentations": 0,
          "augmentations": [
            {
              "id": 103230,
              "fieldAmount": 10,
              "fieldName": "Credit from the State"
            }
          ],
          "totalPayments": 0,
          "accrualType": 0
        }
      ]
    },
    "x-methods-used-in": []
  },
  "FilingReturnModel": {
    "description": "Filing Returns Model",
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique ID number of this filing return.",
        "type": "integer",
        "example": 5233103
      },
      "filingRegionId": {
        "format": "int64",
        "description": "The region id that this return belongs too",
        "type": "integer",
        "example": 0
      },
      "filingCalendarId": {
        "format": "int64",
        "description": "The unique ID number of the filing calendar associated with this return.",
        "type": "integer",
        "example": 513256
      },
      "resourceFileId": {
        "format": "int64",
        "description": "The resourceFileId of the return.  Will be null if not available.",
        "type": "integer"
      },
      "taxAuthorityId": {
        "format": "int32",
        "description": "Tax Authority ID of this return",
        "type": "integer"
      },
      "status": {
        "description": "The current status of the filing return.",
        "enum": [
          "PendingApproval",
          "Dirty",
          "ApprovedToFile",
          "PendingFiling",
          "PendingFilingOnBehalf",
          "Filed",
          "FiledOnBehalf",
          "ReturnAccepted",
          "ReturnAcceptedOnBehalf",
          "PaymentRemitted",
          "Voided",
          "PendingReturn",
          "PendingReturnOnBehalf",
          "DoNotFile",
          "ReturnRejected",
          "ReturnRejectedOnBehalf",
          "ApprovedToFileOnBehalf"
        ],
        "type": "string",
        "example": "PendingApproval",
        "x-enum-type": "FilingStatusId",
        "x-enum-description": "Filing Status",
        "x-enum-value-comments": {}
      },
      "filingFrequency": {
        "description": "The filing frequency of the return.",
        "enum": [
          "Monthly",
          "Quarterly",
          "SemiAnnually",
          "Annually",
          "Bimonthly",
          "Occasional",
          "InverseQuarterly"
        ],
        "type": "string",
        "example": "Monthly",
        "x-enum-type": "FilingFrequencyId",
        "x-enum-description": "Filing Frequency types",
        "x-enum-value-comments": {
          "Monthly": "File once per month",
          "Quarterly": "File once per three months",
          "SemiAnnually": "File twice per year",
          "Annually": "File once per year",
          "Bimonthly": "File every other month",
          "Occasional": "File only when there are documents to report",
          "InverseQuarterly": "File for the first two months of each quarter, then do not file on the quarterly month."
        }
      },
      "filedDate": {
        "format": "date-time",
        "description": "The date the return was filed by Avalara.",
        "type": "string"
      },
      "startPeriod": {
        "format": "date-time",
        "description": "The start date of this return",
        "type": "string"
      },
      "endPeriod": {
        "format": "date-time",
        "description": "The end date of this return",
        "type": "string"
      },
      "salesAmount": {
        "format": "double",
        "description": "The sales amount.",
        "type": "number",
        "example": 0
      },
      "filingType": {
        "description": "The filing type of the return.",
        "enum": [
          "PaperReturn",
          "ElectronicReturn",
          "SER",
          "EFTPaper",
          "PhonePaper",
          "SignatureReady",
          "EfileCheck"
        ],
        "type": "string",
        "example": "ElectronicReturn",
        "x-enum-type": "FilingTypeId",
        "x-enum-description": "A list of possible AvaFile filing types.",
        "x-enum-value-comments": {
          "PaperReturn": "Denotes the tax return is being filed on paper.",
          "ElectronicReturn": "Denotes the tax return is being filed via electronic means; excludes SST electronic filing.",
          "SER": "Denotes the tax return is an SST filing.",
          "EFTPaper": "Denotes a return is paid via EFT and filed on paper without payment.",
          "PhonePaper": "Denotes a return is paid via phone and filed on paper without payment.",
          "SignatureReady": "Denotes a return is prepared but delivered to the customer for filing and payment.",
          "EfileCheck": "Denotes a return which is filed online but paid by check."
        }
      },
      "formName": {
        "description": "The name of the form.",
        "type": "string",
        "example": "AL 2100"
      },
      "remitAmount": {
        "format": "double",
        "description": "The remittance amount of the return.",
        "type": "number",
        "example": 0
      },
      "formCode": {
        "description": "The unique code of the form.",
        "type": "string",
        "example": "AL2100"
      },
      "description": {
        "description": "A description for the return.",
        "type": "string",
        "example": "Sales Tax Return"
      },
      "taxableAmount": {
        "format": "double",
        "description": "The taxable amount.",
        "type": "number",
        "example": 0
      },
      "taxAmount": {
        "format": "double",
        "description": "The tax amount.",
        "type": "number",
        "example": 0
      },
      "collectAmount": {
        "format": "double",
        "description": "The amount collected by avalara for this return",
        "type": "number",
        "example": 1
      },
      "taxDueAmount": {
        "format": "double",
        "description": "The tax due amount.",
        "type": "number",
        "example": 0
      },
      "nonTaxableAmount": {
        "format": "double",
        "description": "The non-taxable amount.",
        "type": "number",
        "example": 0
      },
      "nonTaxableDueAmount": {
        "format": "double",
        "description": "The non-taxable due amount.",
        "type": "number",
        "example": 0
      },
      "consumerUseTaxAmount": {
        "format": "double",
        "description": "Consumer use tax liability during the period.",
        "type": "number",
        "example": 0
      },
      "consumerUseTaxDueAmount": {
        "format": "double",
        "description": "Consumer use tax liability accrued during the period.",
        "type": "number",
        "example": 0
      },
      "consumerUseNonTaxableAmount": {
        "format": "double",
        "description": "Consumer use non-taxable amount.",
        "type": "number",
        "example": 0
      },
      "consumerUseTaxableAmount": {
        "format": "double",
        "description": "Consumer use taxable amount.",
        "type": "number",
        "example": 0
      },
      "totalAdjustments": {
        "format": "double",
        "description": "Total amount of adjustments on this return",
        "type": "number",
        "example": 0
      },
      "excludedSalesAmount": {
        "format": "double",
        "description": "The amount of sales excluded from the liability calculation",
        "type": "number",
        "example": 0
      },
      "excludedNonTaxableAmount": {
        "format": "double",
        "description": "The amount of non-taxable sales excluded from the liability calculation",
        "type": "number",
        "example": 0
      },
      "excludedTaxAmount": {
        "format": "double",
        "description": "The amount of tax excluded from the liability calculation",
        "type": "number",
        "example": 0
      },
      "adjustments": {
        "description": "The Adjustments for this return.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilingAdjustmentModel"
        },
        "example": [
          {
            "id": 15634,
            "amount": 100,
            "period": "CurrentPeriod",
            "type": "Discount",
            "isCalculated": false,
            "accountType": "AccountsReceivableAccountsPayable"
          }
        ]
      },
      "totalAugmentations": {
        "format": "double",
        "description": "Total amount of augmentations on this return",
        "type": "number",
        "example": 0
      },
      "augmentations": {
        "description": "The Augmentations for this return.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilingAugmentationModel"
        },
        "example": [
          {
            "id": 103230,
            "fieldAmount": 10,
            "fieldName": "Credit from the State"
          }
        ]
      },
      "totalPayments": {
        "format": "double",
        "description": "Total amount of payments on this return",
        "type": "number",
        "example": 0
      },
      "payments": {
        "description": "The payments for this return.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilingPaymentModel"
        }
      },
      "accrualType": {
        "description": "Accrual type of the return",
        "enum": [
          "Filing",
          "Accrual"
        ],
        "type": "string",
        "example": 0,
        "x-enum-type": "AccrualType",
        "x-enum-description": "Accrual types",
        "x-enum-value-comments": {
          "Filing": "Filing indicates that this tax return should be filed with its tax authority by its due date. For example, if you file annually, you will have eleven months of Accrual returns and one Filing return.",
          "Accrual": "An Accrual filing indicates taxes that are accrued, intended to be filed on a future tax return. For example, if you file annually, you will have eleven months of Accrual returns and one Filing return."
        }
      },
      "month": {
        "format": "byte",
        "description": "The month of the filing period for this tax filing.  \r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.  \r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
        "type": "integer"
      },
      "year": {
        "format": "int32",
        "description": "The year of the filing period for this tax filing.\r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.  \r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
        "type": "integer"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      }
    },
    "example": {
      "id": 5233103,
      "filingRegionId": 0,
      "filingCalendarId": 513256,
      "status": "PendingApproval",
      "filingFrequency": "Monthly",
      "salesAmount": 0,
      "filingType": "ElectronicReturn",
      "formName": "AL 2100",
      "remitAmount": 0,
      "formCode": "AL2100",
      "description": "Sales Tax Return",
      "taxableAmount": 0,
      "taxAmount": 0,
      "collectAmount": 1,
      "taxDueAmount": 0,
      "nonTaxableAmount": 0,
      "nonTaxableDueAmount": 0,
      "consumerUseTaxAmount": 0,
      "consumerUseTaxDueAmount": 0,
      "consumerUseNonTaxableAmount": 0,
      "consumerUseTaxableAmount": 0,
      "totalAdjustments": 0,
      "excludedSalesAmount": 0,
      "excludedNonTaxableAmount": 0,
      "excludedTaxAmount": 0,
      "adjustments": [
        {
          "id": 15634,
          "amount": 100,
          "period": "CurrentPeriod",
          "type": "Discount",
          "isCalculated": false,
          "accountType": "AccountsReceivableAccountsPayable"
        }
      ],
      "totalAugmentations": 0,
      "augmentations": [
        {
          "id": 103230,
          "fieldAmount": 10,
          "fieldName": "Credit from the State"
        }
      ],
      "totalPayments": 0,
      "accrualType": 0
    },
    "x-methods-used-in": []
  },
  "FilingsCheckupSuggestedFormModel": {
    "description": "Worksheet Checkup Report Suggested Form Model",
    "type": "object",
    "properties": {
      "taxAuthorityId": {
        "format": "int32",
        "description": "Tax Authority ID of the suggested form returned",
        "type": "integer",
        "example": 71
      },
      "country": {
        "description": "Country of the suggested form returned",
        "type": "string",
        "example": "US"
      },
      "region": {
        "description": "Region of the suggested form returned",
        "type": "string",
        "example": "NY"
      },
      "returnName": {
        "type": "string"
      },
      "taxFormCode": {
        "description": "Name of the suggested form returned",
        "type": "string",
        "example": "NYAU11"
      }
    },
    "example": {
      "taxAuthorityId": 71,
      "country": "US",
      "region": "NY",
      "taxFormCode": "NYAU11"
    },
    "x-methods-used-in": []
  },
  "FilingAdjustmentModel": {
    "description": "A model for return adjustments.",
    "required": [
      "amount",
      "period",
      "type",
      "accountType"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique ID number for the adjustment.",
        "type": "integer",
        "readOnly": true,
        "example": 15634
      },
      "filingId": {
        "format": "int64",
        "description": "The filing return id that this applies too",
        "type": "integer",
        "readOnly": true
      },
      "amount": {
        "format": "double",
        "description": "The adjustment amount.",
        "type": "number",
        "example": 100
      },
      "period": {
        "description": "The filing period the adjustment is applied to.",
        "enum": [
          "None",
          "CurrentPeriod",
          "NextPeriod"
        ],
        "type": "string",
        "example": "CurrentPeriod",
        "x-enum-type": "AdjustmentPeriodTypeId",
        "x-enum-description": "",
        "x-enum-value-comments": {}
      },
      "type": {
        "description": "The type of the adjustment.",
        "enum": [
          "Other",
          "CurrentPeriodRounding",
          "PriorPeriodRounding",
          "CurrentPeriodDiscount",
          "PriorPeriodDiscount",
          "CurrentPeriodCollection",
          "PriorPeriodCollection",
          "Penalty",
          "Interest",
          "Discount",
          "Rounding",
          "CspFee"
        ],
        "type": "string",
        "example": "Discount",
        "x-enum-type": "AdjustmentTypeId",
        "x-enum-description": "",
        "x-enum-value-comments": {}
      },
      "isCalculated": {
        "description": "Whether or not the adjustment has been calculated.",
        "type": "boolean",
        "example": false
      },
      "accountType": {
        "description": "The account type of the adjustment.",
        "enum": [
          "None",
          "AccountsReceivableAccountsPayable",
          "AccountsReceivable",
          "AccountsPayable"
        ],
        "type": "string",
        "example": "AccountsReceivableAccountsPayable",
        "x-enum-type": "PaymentAccountTypeId",
        "x-enum-description": "",
        "x-enum-value-comments": {}
      },
      "reason": {
        "description": "A descriptive reason for creating this adjustment.",
        "type": "string"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      }
    },
    "example": {
      "id": 15634,
      "amount": 100,
      "period": "CurrentPeriod",
      "type": "Discount",
      "isCalculated": false,
      "accountType": "AccountsReceivableAccountsPayable"
    },
    "x-methods-used-in": [
      "Filings/CreateReturnAdjustment",
      "Filings/UpdateReturnAdjustment"
    ]
  },
  "FilingAugmentationModel": {
    "description": "A model for return augmentations.",
    "required": [
      "fieldAmount",
      "fieldName"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique ID number for the augmentation.",
        "type": "integer",
        "readOnly": true,
        "example": 103230
      },
      "filingId": {
        "format": "int64",
        "description": "The filing return id that this applies too",
        "type": "integer",
        "readOnly": true
      },
      "fieldAmount": {
        "format": "double",
        "description": "The field amount.",
        "type": "number",
        "example": 10
      },
      "fieldName": {
        "description": "The field name.",
        "type": "string",
        "example": "Credit from the State"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      }
    },
    "example": {
      "id": 103230,
      "fieldAmount": 10,
      "fieldName": "Credit from the State"
    },
    "x-methods-used-in": [
      "Filings/CreateReturnAugmentation",
      "Filings/UpdateReturnAugmentation"
    ]
  },
  "FilingPaymentModel": {
    "description": "A model for return payments.",
    "required": [
      "paymentAmount",
      "type"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique ID number for the payment.",
        "type": "integer",
        "readOnly": true,
        "example": 15634
      },
      "filingId": {
        "format": "int64",
        "description": "The filing return id that this applies too",
        "type": "integer",
        "readOnly": true,
        "example": 1234
      },
      "paymentAmount": {
        "format": "double",
        "description": "The payment amount.",
        "type": "number",
        "example": 100
      },
      "type": {
        "description": "The type of the payment.",
        "enum": [
          "CurrentPeriod",
          "Prepayment",
          "PriorPayment",
          "PriorCspFee"
        ],
        "type": "string",
        "example": "CurrentPeriod",
        "x-enum-type": "PaymentType",
        "x-enum-description": "Indicates the type of payments",
        "x-enum-value-comments": {
          "CurrentPeriod": "The payment is for the current payment",
          "Prepayment": "The payment is a prepayment",
          "PriorPayment": "The payment is a prior payment",
          "PriorCspFee": "The payment is a prior CSP fee"
        }
      },
      "isCalculated": {
        "description": "Whether or not the payment has been calculated.",
        "type": "boolean",
        "example": false
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      }
    },
    "example": {
      "id": 15634,
      "filingId": 1234,
      "paymentAmount": 100,
      "type": "CurrentPeriod",
      "isCalculated": false
    },
    "x-methods-used-in": [
      "Filings/CreateReturnPayment",
      "Filings/UpdateReturnPayment"
    ]
  },
  "FetchResult[FilingReturnModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilingReturnModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Filings/GetFilingReturn"
    ]
  },
  "RebuildFilingsModel": {
    "description": "Rebuild a set of filings.",
    "required": [
      "rebuild"
    ],
    "type": "object",
    "properties": {
      "rebuild": {
        "description": "Set this value to true in order to rebuild the filings.",
        "type": "boolean",
        "example": true
      }
    },
    "example": {
      "rebuild": true
    },
    "x-methods-used-in": [
      "Filings/RebuildFilingsByCountryRegion",
      "Filings/RebuildFilingsByCountry",
      "Filings/RebuildFilings"
    ]
  },
  "ApproveFilingsModel": {
    "description": "Approve a set of filings.",
    "required": [
      "approve"
    ],
    "type": "object",
    "properties": {
      "approve": {
        "description": "Set this value to true in order to approve the filings.",
        "type": "boolean",
        "example": true
      }
    },
    "example": {
      "approve": true
    },
    "x-methods-used-in": [
      "Filings/ApproveFilingsCountryRegion",
      "Filings/ApproveFilingsCountry",
      "Filings/ApproveFilings"
    ]
  },
  "FilingsCheckupModel": {
    "description": "Results of the Worksheet Checkup report",
    "type": "object",
    "properties": {
      "authorities": {
        "description": "A collection of authorities in the report",
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilingsCheckupAuthorityModel"
        }
      }
    },
    "example": {
      "authorities": [
        {
          "taxAuthorityId": 71,
          "taxAuthorityName": "NEW YORK",
          "taxAuthorityTypeId": 45,
          "jurisdictionId": 42,
          "tax": 0,
          "taxTypeId": "U",
          "suggestedForms": [
            {
              "taxAuthorityId": 71,
              "country": "US",
              "region": "NY",
              "taxFormCode": "NYAU11"
            }
          ]
        }
      ]
    },
    "x-methods-used-in": [
      "Filings/FilingsCheckupReport",
      "Filings/FilingsCheckupReports"
    ]
  },
  "FilingsCheckupAuthorityModel": {
    "description": "Cycle Safe Expiration results.",
    "type": "object",
    "properties": {
      "taxAuthorityId": {
        "format": "int32",
        "description": "Unique ID of the tax authority",
        "type": "integer"
      },
      "locationCode": {
        "description": "Location Code of the tax authority",
        "type": "string"
      },
      "taxAuthorityName": {
        "description": "Name of the tax authority",
        "type": "string"
      },
      "taxAuthorityTypeId": {
        "format": "int32",
        "description": "Type Id of the tax authority",
        "type": "integer"
      },
      "jurisdictionId": {
        "format": "int32",
        "description": "Jurisdiction Id of the tax authority",
        "type": "integer"
      },
      "tax": {
        "format": "double",
        "description": "Amount of tax collected in this tax authority",
        "type": "number"
      },
      "taxTypeId": {
        "description": "Tax Type collected in the tax authority",
        "type": "string"
      },
      "suggestedForms": {
        "description": "Suggested forms to file due to tax collected",
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilingsCheckupSuggestedFormModel"
        }
      }
    },
    "example": {
      "taxAuthorityId": 71,
      "taxAuthorityName": "NEW YORK",
      "taxAuthorityTypeId": 45,
      "jurisdictionId": 42,
      "tax": 0,
      "taxTypeId": "U",
      "suggestedForms": [
        {
          "taxAuthorityId": 71,
          "country": "US",
          "region": "NY",
          "taxFormCode": "NYAU11"
        }
      ]
    },
    "x-methods-used-in": []
  },
  "FetchResult[ItemModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ItemModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Items/ListItemsByCompany",
      "Items/QueryItems"
    ]
  },
  "FetchResult[LocationModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/LocationModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Locations/ListLocationsByCompany",
      "Locations/QueryLocations"
    ]
  },
  "LocationValidationModel": {
    "description": "Tells you whether this location object has been correctly set up to the local jurisdiction's standards",
    "type": "object",
    "properties": {
      "settingsValidated": {
        "description": "True if the location has a value for each jurisdiction-required setting.\r\nThe user is required to ensure that the values are correct according to the jurisdiction; this flag\r\ndoes not indicate whether the taxing jurisdiction has accepted the data you have provided.",
        "type": "boolean",
        "example": true
      },
      "requiredSettings": {
        "description": "A list of settings that must be defined for this location",
        "type": "array",
        "items": {
          "$ref": "#/definitions/LocationQuestionModel"
        },
        "example": [
          {
            "id": 1,
            "question": "State Assigned Code",
            "description": "",
            "jurisdictionType": "Country"
          }
        ]
      }
    },
    "example": {
      "settingsValidated": true,
      "requiredSettings": [
        {
          "id": 1,
          "question": "State Assigned Code",
          "description": "",
          "jurisdictionType": "Country"
        }
      ]
    },
    "x-methods-used-in": [
      "Locations/ValidateLocation"
    ]
  },
  "CommitMultiDocumentModel": {
    "description": "Commit this MultiDocument object so that all transactions within it can be reported on a tax filing.",
    "required": [
      "commit"
    ],
    "type": "object",
    "properties": {
      "code": {
        "description": "Represents the unique code of this MultiDocument transaction.\r\n\r\nA MultiDocument transaction is uniquely identified by its `accountId`, `code`, and `type`.        ///",
        "type": "string",
        "example": "f8191cac-4a89-4b51-b928-6b8ff7ad6c17"
      },
      "type": {
        "description": "Represents the document type of this MultiDocument transaction.  For more information about\r\ndocument types, see [DocumentType](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/DocumentType/).\r\n\r\nA MultiDocument transaction is uniquely identified by its `accountId`, `code`, and `type`.",
        "enum": [
          "SalesOrder",
          "SalesInvoice",
          "PurchaseOrder",
          "PurchaseInvoice",
          "ReturnOrder",
          "ReturnInvoice",
          "InventoryTransferOrder",
          "InventoryTransferInvoice",
          "ReverseChargeOrder",
          "ReverseChargeInvoice",
          "Any"
        ],
        "type": "string",
        "example": "SalesInvoice",
        "x-enum-type": "DocumentType",
        "x-enum-description": "Represents the different types of transactions that AvaTax can process.",
        "x-enum-value-comments": {
          "SalesOrder": "Represents an estimate, or a sales order, or a quote.  \n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a sales order, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a temporary document type and is not saved in tax history.",
          "SalesInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a sales invoice, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "PurchaseOrder": "Represents an estimate, or a purchase order, or a quote.\n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a purchase order, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a temporary document type and is not saved in tax history.",
          "PurchaseInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a purchase invoice, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReturnOrder": "Represents an estimate of tax to be refunded if a refund or return is processed.\n            \n            This document type is used before a customer chooses to request a refund for a previous sale, and it\n            estimates the final amount of tax to be refunded when the refund is completed.\n            \n            For a return order, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReturnInvoice": "Represents an refund that has been finalized.\n            \n            This document type is used when a customer chooses to request a refund for a previous sale, and it\n            records the final amount of tax that has been refunded when the refund is completed.\n            \n            For a return invoice, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a permanent document and is recorded in AvaTax.\n            \n            Please note that many jurisdictions around the United States have special rules about how to report refunds\n            on a sales tax filing, and some refund transactions may be unable to file immediately due to credit netting\n            rules.",
          "InventoryTransferOrder": "Represents a proposed movement of inventory from one jurisdiction to another.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a temporary document type and is not saved in tax history.",
          "InventoryTransferInvoice": "Represents a movement of inventory from one jurisdiction to another that has been finalized.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReverseChargeOrder": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReverseChargeInvoice": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "Any": "Not a real document type.\n            \n            This value is used when querying for documents.  You can specify the type `Any` in some cases to permit the\n            system to find any document matching other criteria."
        }
      },
      "commit": {
        "description": "Set this value to be `true` to commit this transaction.\r\n\r\nCommitting a transaction allows it to be reported on a tax filing.  Uncommitted transactions will not be reported.",
        "type": "boolean",
        "example": true
      }
    },
    "example": {
      "code": "f8191cac-4a89-4b51-b928-6b8ff7ad6c17",
      "type": "SalesInvoice",
      "commit": true
    },
    "x-methods-used-in": [
      "MultiDocument/CommitMultiDocumentTransaction"
    ]
  },
  "MultiDocumentModel": {
    "description": "A MultiDocument transaction represents a sale or purchase that occurred between more than two companies.\r\n\r\nA traditional transaction requires exactly two parties: a seller and a buyer.  MultiDocument transactions can\r\ninvolve a marketplace of vendors, each of which contributes some portion of the final transaction.  Within\r\na MultiDocument transaction, each individual buyer and seller pair are matched up and converted to a separate\r\ndocument.  This separation of documents allows each seller to file their taxes separately.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique ID number of this MultiDocument object.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "accountId": {
        "format": "int32",
        "description": "The unique ID number of the AvaTax customer account that created this MultiDocument object.",
        "type": "integer",
        "example": 0
      },
      "code": {
        "description": "The transaction code of the MultiDocument transaction.\r\n\r\nAll individual transactions within this MultiDocument object will have this code as a prefix.",
        "type": "string"
      },
      "type": {
        "description": "Indicates the type of MultiDocument transaction.  Common values are:\r\n\r\n* SalesOrder - An estimate that is not permanently recorded\r\n* SalesInvoice - An invoice that can be reported on a tax return\r\n\r\nFor more information about document types, see [DocumentType](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/DocumentType/)",
        "enum": [
          "SalesOrder",
          "SalesInvoice",
          "PurchaseOrder",
          "PurchaseInvoice",
          "ReturnOrder",
          "ReturnInvoice",
          "InventoryTransferOrder",
          "InventoryTransferInvoice",
          "ReverseChargeOrder",
          "ReverseChargeInvoice",
          "Any"
        ],
        "type": "string",
        "example": "SalesOrder",
        "x-enum-type": "DocumentType",
        "x-enum-description": "Represents the different types of transactions that AvaTax can process.",
        "x-enum-value-comments": {
          "SalesOrder": "Represents an estimate, or a sales order, or a quote.  \n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a sales order, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a temporary document type and is not saved in tax history.",
          "SalesInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a sales invoice, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "PurchaseOrder": "Represents an estimate, or a purchase order, or a quote.\n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a purchase order, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a temporary document type and is not saved in tax history.",
          "PurchaseInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a purchase invoice, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReturnOrder": "Represents an estimate of tax to be refunded if a refund or return is processed.\n            \n            This document type is used before a customer chooses to request a refund for a previous sale, and it\n            estimates the final amount of tax to be refunded when the refund is completed.\n            \n            For a return order, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReturnInvoice": "Represents an refund that has been finalized.\n            \n            This document type is used when a customer chooses to request a refund for a previous sale, and it\n            records the final amount of tax that has been refunded when the refund is completed.\n            \n            For a return invoice, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a permanent document and is recorded in AvaTax.\n            \n            Please note that many jurisdictions around the United States have special rules about how to report refunds\n            on a sales tax filing, and some refund transactions may be unable to file immediately due to credit netting\n            rules.",
          "InventoryTransferOrder": "Represents a proposed movement of inventory from one jurisdiction to another.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a temporary document type and is not saved in tax history.",
          "InventoryTransferInvoice": "Represents a movement of inventory from one jurisdiction to another that has been finalized.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReverseChargeOrder": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReverseChargeInvoice": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "Any": "Not a real document type.\n            \n            This value is used when querying for documents.  You can specify the type `Any` in some cases to permit the\n            system to find any document matching other criteria."
        }
      },
      "createdUserId": {
        "format": "int32",
        "description": "The user ID of the user who created this record.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date/time when this record was created.",
        "type": "string",
        "readOnly": true,
        "example": "0001-01-01T00:00:00"
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true,
        "example": "0001-01-01T00:00:00"
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "documents": {
        "description": "A separate document will exist for each unique combination of buyer and seller in this MultiDocument transaction.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TransactionModel"
        },
        "readOnly": true
      }
    },
    "example": {
      "id": 0,
      "accountId": 0,
      "type": "SalesOrder",
      "createdUserId": 0,
      "createdDate": "0001-01-01T00:00:00",
      "modifiedDate": "0001-01-01T00:00:00",
      "modifiedUserId": 0
    },
    "x-methods-used-in": [
      "MultiDocument/CreateMultiDocumentTransaction",
      "MultiDocument/GetMultiDocumentTransactionByCodeAndType",
      "MultiDocument/AdjustMultiDocumentTransaction",
      "MultiDocument/RefundMultiDocumentTransaction",
      "MultiDocument/VoidMultiDocumentTransaction",
      "MultiDocument/GetMultiDocumentTransactionById",
      "MultiDocument/CommitMultiDocumentTransaction",
      "MultiDocument/VerifyMultiDocumentTransaction"
    ]
  },
  "TransactionModel": {
    "description": "This object represents a single transaction; for example, a sales invoice or purchase order.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique ID number of this transaction.",
        "type": "integer",
        "readOnly": true,
        "example": 123456789
      },
      "code": {
        "description": "A unique customer-provided code identifying this transaction.",
        "type": "string",
        "readOnly": true,
        "example": "34ad44ab-d921-41cc-90b2-39392da58d67"
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the company that recorded this transaction.",
        "type": "integer",
        "example": 12345
      },
      "date": {
        "format": "date-time",
        "description": "The date on which this transaction occurred.",
        "type": "string",
        "example": "2018-01-24T00:00:00-08:00",
        "x-date-type": "date-only"
      },
      "paymentDate": {
        "format": "date-time",
        "description": "The date when payment was made on this transaction.  By default, this should be the same as the date of the transaction.",
        "type": "string",
        "example": "2018-01-24T00:00:00-08:00",
        "x-date-type": "date-only"
      },
      "status": {
        "description": "The status of the transaction.",
        "enum": [
          "Temporary",
          "Saved",
          "Posted",
          "Committed",
          "Cancelled",
          "Adjusted",
          "Queued",
          "PendingApproval",
          "Any"
        ],
        "type": "string",
        "example": "Committed",
        "x-enum-type": "DocumentStatus",
        "x-enum-description": "Document Status",
        "x-enum-value-comments": {
          "Temporary": "Temporary document not saved (SalesOrder, PurchaseOrder)",
          "Saved": "Saved document (SalesInvoice or PurchaseInvoice) ready to be posted",
          "Posted": "A posted document (not committed)",
          "Committed": "A posted document that has been committed",
          "Cancelled": "A Committed document that has been cancelled",
          "Adjusted": "A document that has been adjusted",
          "Queued": "A document which is in Queue status and processed later",
          "PendingApproval": "A document which is Pending for Approval",
          "Any": "Any status (for searching)"
        }
      },
      "type": {
        "description": "The type of the transaction.  For Returns customers, a transaction type of \"Invoice\" will be reported to the tax authorities.\r\nA sales transaction represents a sale from the company to a customer.  A purchase transaction represents a purchase made by the company.\r\nA return transaction represents a customer who decided to request a refund after purchasing a product from the company.  An inventory \r\ntransfer transaction represents goods that were moved from one location of the company to another location without changing ownership.",
        "enum": [
          "SalesOrder",
          "SalesInvoice",
          "PurchaseOrder",
          "PurchaseInvoice",
          "ReturnOrder",
          "ReturnInvoice",
          "InventoryTransferOrder",
          "InventoryTransferInvoice",
          "ReverseChargeOrder",
          "ReverseChargeInvoice",
          "Any"
        ],
        "type": "string",
        "example": "SalesInvoice",
        "x-enum-type": "DocumentType",
        "x-enum-description": "Represents the different types of transactions that AvaTax can process.",
        "x-enum-value-comments": {
          "SalesOrder": "Represents an estimate, or a sales order, or a quote.  \n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a sales order, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a temporary document type and is not saved in tax history.",
          "SalesInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a sales invoice, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "PurchaseOrder": "Represents an estimate, or a purchase order, or a quote.\n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a purchase order, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a temporary document type and is not saved in tax history.",
          "PurchaseInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a purchase invoice, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReturnOrder": "Represents an estimate of tax to be refunded if a refund or return is processed.\n            \n            This document type is used before a customer chooses to request a refund for a previous sale, and it\n            estimates the final amount of tax to be refunded when the refund is completed.\n            \n            For a return order, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReturnInvoice": "Represents an refund that has been finalized.\n            \n            This document type is used when a customer chooses to request a refund for a previous sale, and it\n            records the final amount of tax that has been refunded when the refund is completed.\n            \n            For a return invoice, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a permanent document and is recorded in AvaTax.\n            \n            Please note that many jurisdictions around the United States have special rules about how to report refunds\n            on a sales tax filing, and some refund transactions may be unable to file immediately due to credit netting\n            rules.",
          "InventoryTransferOrder": "Represents a proposed movement of inventory from one jurisdiction to another.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a temporary document type and is not saved in tax history.",
          "InventoryTransferInvoice": "Represents a movement of inventory from one jurisdiction to another that has been finalized.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReverseChargeOrder": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReverseChargeInvoice": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "Any": "Not a real document type.\n            \n            This value is used when querying for documents.  You can specify the type `Any` in some cases to permit the\n            system to find any document matching other criteria."
        }
      },
      "batchCode": {
        "description": "If this transaction was created as part of a batch, this code indicates which batch.",
        "type": "string"
      },
      "currencyCode": {
        "description": "The three-character ISO 4217 currency code that was used for payment for this transaction.",
        "type": "string",
        "example": "USD"
      },
      "customerUsageType": {
        "description": "DEPRECATED - The customer usage type for this transaction.  Customer usage types often affect exemption or taxability rules.\r\nPlease use entityUseCode instead.",
        "type": "string"
      },
      "entityUseCode": {
        "description": "The entity use code for this transaction.  Entity use codes often affect exemption or taxability rules.",
        "type": "string",
        "example": ""
      },
      "customerVendorCode": {
        "description": "CustomerVendorCode",
        "type": "string",
        "example": "ABC"
      },
      "exemptNo": {
        "description": "If this transaction was exempt, this field will contain the word \"Exempt\".",
        "type": "string",
        "example": ""
      },
      "reconciled": {
        "description": "If this transaction has been reconciled against the company's ledger, this value is set to true.",
        "type": "boolean",
        "example": true
      },
      "locationCode": {
        "description": "(DEPRECATED) This field has been replaced by the reportingLocationCode field\r\nIn order to ensure consistency of field names, Please use reportingLocationCode instead.",
        "type": "string",
        "example": "DEFAULT"
      },
      "reportingLocationCode": {
        "description": "If this transaction was made from a specific reporting location, this is the code string of the location.\r\nFor customers using Returns, this indicates how tax will be reported according to different locations on the tax forms.\r\nIn another words, this code does not affect the address of a transaction, it instead affects which tax return it will be reported on.\r\nBoth locationCode and reportingLocationCode refer to LocationCode in Document table, if both are set, reportingLocationCode wins",
        "type": "string"
      },
      "purchaseOrderNo": {
        "description": "The customer-supplied purchase order number of this transaction.",
        "type": "string"
      },
      "referenceCode": {
        "description": "A user-defined reference code for this transaction.",
        "type": "string"
      },
      "salespersonCode": {
        "description": "The salesperson who provided this transaction.  Not required.",
        "type": "string",
        "example": "DEF"
      },
      "taxOverrideType": {
        "description": "If a tax override was applied to this transaction, indicates what type of tax override was applied.",
        "enum": [
          "None",
          "TaxAmount",
          "Exemption",
          "TaxDate",
          "AccruedTaxAmount",
          "DeriveTaxable"
        ],
        "type": "string",
        "example": "None",
        "x-enum-type": "TaxOverrideTypeId",
        "x-enum-description": "TaxOverrideTypeId",
        "x-enum-value-comments": {
          "None": "No override",
          "TaxAmount": "Tax was overriden by the client",
          "Exemption": "Entity exemption was ignored (e.g. item was consumed)",
          "TaxDate": "Only the tax date was overriden",
          "AccruedTaxAmount": "To support Consumer Use Tax",
          "DeriveTaxable": "Derive the taxable amount from the tax amount"
        }
      },
      "taxOverrideAmount": {
        "format": "double",
        "description": "If a tax override was applied to this transaction, indicates the amount of tax that was requested by the customer.",
        "type": "number",
        "example": 0
      },
      "taxOverrideReason": {
        "description": "If a tax override was applied to this transaction, indicates the reason for the tax override.",
        "type": "string",
        "example": ""
      },
      "totalAmount": {
        "format": "double",
        "description": "The total amount of this transaction.",
        "type": "number",
        "example": 1000
      },
      "totalExempt": {
        "format": "double",
        "description": "The amount of this transaction that was exempt.",
        "type": "number",
        "example": 0
      },
      "totalDiscount": {
        "format": "double",
        "description": "The total amount of discounts applied to all lines within this transaction.",
        "type": "number",
        "example": 0
      },
      "totalTax": {
        "format": "double",
        "description": "The total tax calculated for all lines in this transaction.",
        "type": "number",
        "example": 62.5
      },
      "totalTaxable": {
        "format": "double",
        "description": "The portion of the total amount of this transaction that was taxable.",
        "type": "number",
        "example": 1000
      },
      "totalTaxCalculated": {
        "format": "double",
        "description": "If a tax override was applied to this transaction, indicates the amount of tax Avalara calculated for the transaction.",
        "type": "number",
        "example": 62.5
      },
      "adjustmentReason": {
        "description": "If this transaction was adjusted, indicates the unique ID number of the reason why the transaction was adjusted.",
        "enum": [
          "NotAdjusted",
          "SourcingIssue",
          "ReconciledWithGeneralLedger",
          "ExemptCertApplied",
          "PriceAdjusted",
          "ProductReturned",
          "ProductExchanged",
          "BadDebt",
          "Other",
          "Offline"
        ],
        "type": "string",
        "example": "NotAdjusted",
        "x-enum-type": "AdjustmentReason",
        "x-enum-description": "Indicates the type of adjustment that was performed on a transaction",
        "x-enum-value-comments": {
          "NotAdjusted": "The transaction has not been adjusted",
          "SourcingIssue": "A sourcing issue existed which caused the transaction to be adjusted",
          "ReconciledWithGeneralLedger": "Transaction was adjusted to reconcile it with a general ledger",
          "ExemptCertApplied": "Transaction was adjusted after an exemption certificate was applied",
          "PriceAdjusted": "Transaction was adjusted when the price of an item changed",
          "ProductReturned": "Transaction was adjusted due to a product return",
          "ProductExchanged": "Transaction was adjusted due to a product exchange",
          "BadDebt": "Transaction was adjusted due to bad or uncollectable debt",
          "Other": "Transaction was adjusted for another reason not specified",
          "Offline": "Offline"
        }
      },
      "adjustmentDescription": {
        "description": "If this transaction was adjusted, indicates a description of the reason why the transaction was adjusted.",
        "type": "string",
        "example": ""
      },
      "locked": {
        "description": "If this transaction has been reported to a tax authority, this transaction is considered locked and may not be adjusted after reporting.",
        "type": "boolean",
        "example": false
      },
      "region": {
        "description": "The two-or-three character ISO region code of the region for this transaction.",
        "type": "string",
        "example": "CA"
      },
      "country": {
        "description": "The two-character ISO 3166 code of the country for this transaction.",
        "maxLength": 2,
        "minLength": 2,
        "type": "string",
        "example": "US"
      },
      "version": {
        "format": "int32",
        "description": "If this transaction was adjusted, this indicates the version number of this transaction.  Incremented each time the transaction\r\nis adjusted.",
        "type": "integer",
        "example": 0
      },
      "softwareVersion": {
        "description": "The software version used to calculate this transaction.",
        "type": "string"
      },
      "originAddressId": {
        "format": "int64",
        "description": "The unique ID number of the origin address for this transaction.",
        "type": "integer",
        "example": 123456789
      },
      "destinationAddressId": {
        "format": "int64",
        "description": "The unique ID number of the destination address for this transaction.",
        "type": "integer",
        "example": 123456789
      },
      "exchangeRateEffectiveDate": {
        "format": "date-time",
        "description": "If this transaction included foreign currency exchange, this is the date as of which the exchange rate was calculated.",
        "type": "string",
        "x-date-type": "date-only"
      },
      "exchangeRate": {
        "format": "double",
        "description": "If this transaction included foreign currency exchange, this is the exchange rate that was used.",
        "type": "number"
      },
      "isSellerImporterOfRecord": {
        "description": "By default, the value is null, when the value is null, the value can be set at nexus level and used.\r\nIf the value is not null, it will override the value at nexus level.\r\n\r\nIf true, this seller was considered the importer of record of a product shipped internationally.\r\n\r\nIf this transaction is not an international transaction, this field may be left blank.\r\n\r\nThe \"importer of record\" is liable to pay customs and import duties for products shipped internationally.  If \r\nyou specify that the seller is the importer of record, then estimates of customs and import duties will be added\r\nas tax details to the transaction.  Otherwise, the buyer is considered the importer of record, and customs\r\nand import duties will not be added to the tax details for this transaction.",
        "type": "boolean",
        "example": false
      },
      "description": {
        "description": "Description of this transaction.  Field permits unicode values.",
        "type": "string",
        "example": "Yarn"
      },
      "email": {
        "description": "Email address associated with this transaction.",
        "type": "string"
      },
      "businessIdentificationNo": {
        "description": "VAT business identification number used for this transaction.",
        "type": "string"
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      },
      "taxDate": {
        "format": "date-time",
        "description": "Tax date for this transaction",
        "type": "string",
        "readOnly": true,
        "example": "2018-01-24T00:00:00-08:00"
      },
      "lines": {
        "description": "Optional: A list of line items in this transaction.  To fetch this list, add the query string \"?$include=Lines\" or \"?$include=Details\" to your URL.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TransactionLineModel"
        },
        "example": [
          {
            "id": 123456789,
            "transactionId": 123456789,
            "lineNumber": "1",
            "boundaryOverrideId": 0,
            "entityUseCode": "",
            "description": "Yarn",
            "destinationAddressId": 12345,
            "originAddressId": 123456789,
            "discountAmount": 100,
            "discountTypeId": 0,
            "exemptAmount": 0,
            "exemptCertId": 0,
            "exemptNo": "",
            "isItemTaxable": true,
            "isSSTP": false,
            "itemCode": "116292",
            "lineAmount": 1000,
            "quantity": 1,
            "ref1": "Note: Deliver to Bob",
            "reportingDate": "2018-01-24",
            "revAccount": "",
            "sourcing": "Destination",
            "tax": 62.5,
            "taxableAmount": 1000,
            "taxCalculated": 62.5,
            "taxCode": "PS081282",
            "taxDate": "2018-01-24",
            "taxEngine": "",
            "taxOverrideType": "None",
            "taxOverrideAmount": 0,
            "taxOverrideReason": "",
            "taxIncluded": false,
            "details": [
              {
                "id": 123456789,
                "transactionLineId": 123456789,
                "transactionId": 123456789,
                "addressId": 12345,
                "country": "US",
                "region": "CA",
                "stateFIPS": "06",
                "exemptAmount": 0,
                "exemptReasonId": 4,
                "inState": false,
                "jurisCode": "06",
                "jurisName": "CALIFORNIA",
                "jurisdictionId": 5000531,
                "signatureCode": "AGAM",
                "stateAssignedNo": "",
                "jurisType": "STA",
                "nonTaxableAmount": 0,
                "nonTaxableRuleId": 0,
                "nonTaxableType": "BaseRule",
                "rate": 0.0625,
                "rateRuleId": 1321915,
                "rateSourceId": 3,
                "serCode": "",
                "sourcing": "Destination",
                "tax": 62.5,
                "taxableAmount": 1000,
                "taxType": "Sales",
                "taxName": "CA STATE TAX",
                "taxAuthorityTypeId": 45,
                "taxRegionId": 2127184,
                "taxCalculated": 62.5,
                "taxOverride": 0,
                "rateType": "General"
              }
            ]
          }
        ]
      },
      "addresses": {
        "description": "Optional: A list of line items in this transaction.  To fetch this list, add the query string \"?$include=Addresses\" to your URL.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TransactionAddressModel"
        },
        "example": [
          {
            "id": 0,
            "transactionId": 0,
            "boundaryLevel": "Address",
            "line1": "100 Ravine Lane Northeast #220",
            "city": "Bainbridge Island",
            "region": "WA",
            "postalCode": "98110",
            "country": "US",
            "taxRegionId": 0
          }
        ]
      },
      "locationTypes": {
        "description": "Optional: A list of location types in this transaction.  To fetch this list, add the query string \"?$include=Addresses\" to your URL.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TransactionLocationTypeModel"
        }
      },
      "summary": {
        "description": "Contains a summary of tax on this transaction.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TransactionSummary"
        }
      },
      "parameters": {
        "$ref": "#/definitions/TransactionModel > Parameters"
      },
      "messages": {
        "description": "List of informational and warning messages regarding this API call.  These messages are only relevant to the current API call.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/AvaTaxMessage"
        }
      }
    },
    "example": {
      "id": 123456789,
      "code": "34ad44ab-d921-41cc-90b2-39392da58d67",
      "companyId": 12345,
      "date": "2018-01-24",
      "paymentDate": "2018-01-24",
      "status": "Committed",
      "type": "SalesInvoice",
      "currencyCode": "USD",
      "entityUseCode": "",
      "customerVendorCode": "ABC",
      "exemptNo": "",
      "reconciled": true,
      "locationCode": "DEFAULT",
      "salespersonCode": "DEF",
      "taxOverrideType": "None",
      "taxOverrideAmount": 0,
      "taxOverrideReason": "",
      "totalAmount": 1000,
      "totalExempt": 0,
      "totalDiscount": 0,
      "totalTax": 62.5,
      "totalTaxable": 1000,
      "totalTaxCalculated": 62.5,
      "adjustmentReason": "NotAdjusted",
      "adjustmentDescription": "",
      "locked": false,
      "region": "CA",
      "country": "US",
      "version": 0,
      "originAddressId": 123456789,
      "destinationAddressId": 123456789,
      "isSellerImporterOfRecord": false,
      "description": "Yarn",
      "taxDate": "2018-01-24T00:00:00-08:00",
      "lines": [
        {
          "id": 123456789,
          "transactionId": 123456789,
          "lineNumber": "1",
          "boundaryOverrideId": 0,
          "entityUseCode": "",
          "description": "Yarn",
          "destinationAddressId": 12345,
          "originAddressId": 123456789,
          "discountAmount": 100,
          "discountTypeId": 0,
          "exemptAmount": 0,
          "exemptCertId": 0,
          "exemptNo": "",
          "isItemTaxable": true,
          "isSSTP": false,
          "itemCode": "116292",
          "lineAmount": 1000,
          "quantity": 1,
          "ref1": "Note: Deliver to Bob",
          "reportingDate": "2018-01-24",
          "revAccount": "",
          "sourcing": "Destination",
          "tax": 62.5,
          "taxableAmount": 1000,
          "taxCalculated": 62.5,
          "taxCode": "PS081282",
          "taxDate": "2018-01-24",
          "taxEngine": "",
          "taxOverrideType": "None",
          "taxOverrideAmount": 0,
          "taxOverrideReason": "",
          "taxIncluded": false,
          "details": [
            {
              "id": 123456789,
              "transactionLineId": 123456789,
              "transactionId": 123456789,
              "addressId": 12345,
              "country": "US",
              "region": "CA",
              "stateFIPS": "06",
              "exemptAmount": 0,
              "exemptReasonId": 4,
              "inState": false,
              "jurisCode": "06",
              "jurisName": "CALIFORNIA",
              "jurisdictionId": 5000531,
              "signatureCode": "AGAM",
              "stateAssignedNo": "",
              "jurisType": "STA",
              "nonTaxableAmount": 0,
              "nonTaxableRuleId": 0,
              "nonTaxableType": "BaseRule",
              "rate": 0.0625,
              "rateRuleId": 1321915,
              "rateSourceId": 3,
              "serCode": "",
              "sourcing": "Destination",
              "tax": 62.5,
              "taxableAmount": 1000,
              "taxType": "Sales",
              "taxName": "CA STATE TAX",
              "taxAuthorityTypeId": 45,
              "taxRegionId": 2127184,
              "taxCalculated": 62.5,
              "taxOverride": 0,
              "rateType": "General"
            }
          ]
        }
      ],
      "addresses": [
        {
          "id": 0,
          "transactionId": 0,
          "boundaryLevel": "Address",
          "line1": "100 Ravine Lane Northeast #220",
          "city": "Bainbridge Island",
          "region": "WA",
          "postalCode": "98110",
          "country": "US",
          "taxRegionId": 0
        }
      ]
    },
    "x-methods-used-in": [
      "Transactions/GetTransactionByCode",
      "Transactions/AdjustTransaction",
      "Transactions/ChangeTransactionCode",
      "Transactions/CommitTransaction",
      "Transactions/LockTransaction",
      "Transactions/RefundTransaction",
      "Transactions/SettleTransaction",
      "Transactions/GetTransactionByCodeAndType",
      "Transactions/VerifyTransaction",
      "Transactions/VoidTransaction",
      "Transactions/AddLines",
      "Transactions/DeleteLines",
      "Transactions/GetTransactionById",
      "Transactions/CreateTransaction",
      "Transactions/CreateOrAdjustTransaction"
    ]
  },
  "TransactionLineModel": {
    "description": "One line item on this transaction.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique ID number of this transaction line item.",
        "type": "integer",
        "example": 123456789
      },
      "transactionId": {
        "format": "int64",
        "description": "The unique ID number of the transaction to which this line item belongs.",
        "type": "integer",
        "example": 123456789
      },
      "lineNumber": {
        "description": "The line number or code indicating the line on this invoice or receipt or document.",
        "type": "string",
        "example": "1"
      },
      "boundaryOverrideId": {
        "format": "int32",
        "description": "The unique ID number of the boundary override applied to this line item.",
        "type": "integer",
        "example": 0
      },
      "customerUsageType": {
        "description": "DEPRECATED - The customer usage type for this line item.  Usage type often affects taxability rules.\r\nPlease use entityUseCode instead.",
        "type": "string"
      },
      "entityUseCode": {
        "description": "The entity use code for this line item.  Usage type often affects taxability rules.",
        "type": "string",
        "example": ""
      },
      "description": {
        "description": "A description of the item or service represented by this line.",
        "type": "string",
        "example": "Yarn"
      },
      "destinationAddressId": {
        "format": "int64",
        "description": "The unique ID number of the destination address where this line was delivered or sold.\r\nIn the case of a point-of-sale transaction, the destination address and origin address will be the same.\r\nIn the case of a shipped transaction, they will be different.",
        "type": "integer",
        "example": 12345
      },
      "originAddressId": {
        "format": "int64",
        "description": "The unique ID number of the origin address where this line was delivered or sold.\r\nIn the case of a point-of-sale transaction, the origin address and destination address will be the same.\r\nIn the case of a shipped transaction, they will be different.",
        "type": "integer",
        "example": 123456789
      },
      "discountAmount": {
        "format": "double",
        "description": "The amount of discount that was applied to this line item.  This represents the difference between list price and sale price of the item.\r\nIn general, a discount represents money that did not change hands; tax is calculated on only the amount of money that changed hands.",
        "type": "number",
        "example": 100
      },
      "discountTypeId": {
        "format": "int32",
        "description": "The type of discount, if any, that was applied to this line item.",
        "type": "integer",
        "example": 0
      },
      "exemptAmount": {
        "format": "double",
        "description": "The amount of this line item that was exempt.",
        "type": "number",
        "example": 0
      },
      "exemptCertId": {
        "format": "int32",
        "description": "The unique ID number of the exemption certificate that applied to this line item.",
        "type": "integer",
        "example": 0
      },
      "certificateId": {
        "description": "The CertCapture Certificate ID",
        "type": "string",
        "readOnly": true
      },
      "exemptNo": {
        "description": "If this line item was exempt, this string contains the word `Exempt`.",
        "type": "string",
        "example": ""
      },
      "isItemTaxable": {
        "description": "True if this item is taxable.",
        "type": "boolean",
        "example": true
      },
      "isSSTP": {
        "description": "True if this item is a Streamlined Sales Tax line item.",
        "type": "boolean",
        "example": false
      },
      "itemCode": {
        "description": "The code string of the item represented by this line item.",
        "type": "string",
        "example": "116292"
      },
      "lineAmount": {
        "format": "double",
        "description": "The total amount of the transaction, including both taxable and exempt.  This is the total price for all items.\r\nTo determine the individual item price, divide this by quantity.",
        "type": "number",
        "example": 1000
      },
      "quantity": {
        "format": "double",
        "description": "The quantity of products sold on this line item.",
        "type": "number",
        "example": 1
      },
      "ref1": {
        "description": "A user-defined reference identifier for this transaction line item.",
        "type": "string",
        "example": "Note: Deliver to Bob"
      },
      "ref2": {
        "description": "A user-defined reference identifier for this transaction line item.",
        "type": "string"
      },
      "reportingDate": {
        "format": "date-time",
        "description": "The date when this transaction should be reported.  By default, all transactions are reported on the date when the actual transaction took place.\r\nIn some cases, line items may be reported later due to delayed shipments or other business reasons.",
        "type": "string",
        "example": "2018-01-24T00:00:00-08:00",
        "x-date-type": "date-only"
      },
      "revAccount": {
        "description": "The revenue account number for this line item.",
        "type": "string",
        "example": ""
      },
      "sourcing": {
        "description": "Indicates whether this line item was taxed according to the origin or destination.",
        "enum": [
          "Mixed",
          "Destination",
          "Origin"
        ],
        "type": "string",
        "example": "Destination",
        "x-enum-type": "Sourcing",
        "x-enum-description": "Sourcing",
        "x-enum-value-comments": {
          "Origin": "Origin",
          "Destination": "Destination",
          "Mixed": "Mixed sourcing, for states that do both origin and destination calculation"
        }
      },
      "tax": {
        "format": "double",
        "description": "The amount of tax generated for this line item.",
        "type": "number",
        "example": 62.5
      },
      "taxableAmount": {
        "format": "double",
        "description": "The taxable amount of this line item.",
        "type": "number",
        "example": 1000
      },
      "taxCalculated": {
        "format": "double",
        "description": "The tax calculated for this line by Avalara.  If the transaction was calculated with a tax override, this amount will be different from the \"tax\" value.",
        "type": "number",
        "example": 62.5
      },
      "taxCode": {
        "description": "The code string for the tax code that was used to calculate this line item.",
        "type": "string",
        "example": "PS081282"
      },
      "taxCodeId": {
        "format": "int32",
        "description": "The unique ID number for the tax code that was used to calculate this line item.",
        "type": "integer"
      },
      "taxDate": {
        "format": "date-time",
        "description": "The date that was used for calculating tax amounts for this line item.  By default, this date should be the same as the document date.\r\nIn some cases, for example when a consumer returns a product purchased previously, line items may be calculated using a tax date in the past\r\nso that the consumer can receive a refund for the correct tax amount that was charged when the item was originally purchased.",
        "type": "string",
        "example": "2018-01-24T00:00:00-08:00",
        "x-date-type": "date-only"
      },
      "taxEngine": {
        "description": "The tax engine identifier that was used to calculate this line item.",
        "type": "string",
        "example": ""
      },
      "taxOverrideType": {
        "description": "If a tax override was specified, this indicates the type of tax override.",
        "enum": [
          "None",
          "TaxAmount",
          "Exemption",
          "TaxDate",
          "AccruedTaxAmount",
          "DeriveTaxable"
        ],
        "type": "string",
        "example": "None",
        "x-enum-type": "TaxOverrideTypeId",
        "x-enum-description": "TaxOverrideTypeId",
        "x-enum-value-comments": {
          "None": "No override",
          "TaxAmount": "Tax was overriden by the client",
          "Exemption": "Entity exemption was ignored (e.g. item was consumed)",
          "TaxDate": "Only the tax date was overriden",
          "AccruedTaxAmount": "To support Consumer Use Tax",
          "DeriveTaxable": "Derive the taxable amount from the tax amount"
        }
      },
      "businessIdentificationNo": {
        "description": "VAT business identification number used for this transaction.",
        "type": "string"
      },
      "taxOverrideAmount": {
        "format": "double",
        "description": "If a tax override was specified, this indicates the amount of tax that was requested.",
        "type": "number",
        "example": 0
      },
      "taxOverrideReason": {
        "description": "If a tax override was specified, represents the reason for the tax override.",
        "type": "string",
        "example": ""
      },
      "taxIncluded": {
        "description": "Indicates whether the `amount` for this line already includes tax.\r\n\r\nIf this value is `true`, the final price of this line including tax will equal the value in `amount`. \r\n\r\nIf this value is `null` or `false`, the final price will equal `amount` plus whatever taxes apply to this line.",
        "type": "boolean",
        "example": false
      },
      "details": {
        "description": "Optional: A list of tax details for this line item.  \r\n\r\nTax details represent taxes being charged by various tax authorities. Taxes that appear in the `details` collection are intended to be \r\ndisplayed to the customer and charged as a 'tax' on the invoice.\r\n\r\nTo fetch this list, add the query string `?$include=Details` to your URL.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TransactionLineDetailModel"
        },
        "example": [
          {
            "id": 123456789,
            "transactionLineId": 123456789,
            "transactionId": 123456789,
            "addressId": 12345,
            "country": "US",
            "region": "CA",
            "stateFIPS": "06",
            "exemptAmount": 0,
            "exemptReasonId": 4,
            "inState": false,
            "jurisCode": "06",
            "jurisName": "CALIFORNIA",
            "jurisdictionId": 5000531,
            "signatureCode": "AGAM",
            "stateAssignedNo": "",
            "jurisType": "STA",
            "nonTaxableAmount": 0,
            "nonTaxableRuleId": 0,
            "nonTaxableType": "BaseRule",
            "rate": 0.0625,
            "rateRuleId": 1321915,
            "rateSourceId": 3,
            "serCode": "",
            "sourcing": "Destination",
            "tax": 62.5,
            "taxableAmount": 1000,
            "taxType": "Sales",
            "taxName": "CA STATE TAX",
            "taxAuthorityTypeId": 45,
            "taxRegionId": 2127184,
            "taxCalculated": 62.5,
            "taxOverride": 0,
            "rateType": "General"
          }
        ]
      },
      "nonPassthroughDetails": {
        "description": "Optional: A list of non-passthrough tax details for this line item.\r\n\r\nTax details represent taxes being charged by various tax authorities. Taxes that appear in the `nonPassthroughDetails` collection are \r\ntaxes that must be paid directly by the company and not shown to the customer.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TransactionLineDetailModel"
        }
      },
      "lineLocationTypes": {
        "description": "Optional: A list of location types for this line item.  To fetch this list, add the query string \"?$include=LineLocationTypes\" to your URL.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TransactionLineLocationTypeModel"
        }
      },
      "parameters": {
        "$ref": "#/definitions/TransactionLineModel > Parameters"
      },
      "hsCode": {
        "description": "The cross-border harmonized system code (HSCode) used to calculate tariffs and duties for this line item.  \r\nFor a full list of HS codes, see `ListCrossBorderCodes()`.",
        "type": "string"
      },
      "costInsuranceFreight": {
        "format": "double",
        "description": "Indicates the cost of insurance and freight for this line.",
        "type": "number"
      }
    },
    "example": {
      "id": 123456789,
      "transactionId": 123456789,
      "lineNumber": "1",
      "boundaryOverrideId": 0,
      "entityUseCode": "",
      "description": "Yarn",
      "destinationAddressId": 12345,
      "originAddressId": 123456789,
      "discountAmount": 100,
      "discountTypeId": 0,
      "exemptAmount": 0,
      "exemptCertId": 0,
      "exemptNo": "",
      "isItemTaxable": true,
      "isSSTP": false,
      "itemCode": "116292",
      "lineAmount": 1000,
      "quantity": 1,
      "ref1": "Note: Deliver to Bob",
      "reportingDate": "2018-01-24",
      "revAccount": "",
      "sourcing": "Destination",
      "tax": 62.5,
      "taxableAmount": 1000,
      "taxCalculated": 62.5,
      "taxCode": "PS081282",
      "taxDate": "2018-01-24",
      "taxEngine": "",
      "taxOverrideType": "None",
      "taxOverrideAmount": 0,
      "taxOverrideReason": "",
      "taxIncluded": false,
      "details": [
        {
          "id": 123456789,
          "transactionLineId": 123456789,
          "transactionId": 123456789,
          "addressId": 12345,
          "country": "US",
          "region": "CA",
          "stateFIPS": "06",
          "exemptAmount": 0,
          "exemptReasonId": 4,
          "inState": false,
          "jurisCode": "06",
          "jurisName": "CALIFORNIA",
          "jurisdictionId": 5000531,
          "signatureCode": "AGAM",
          "stateAssignedNo": "",
          "jurisType": "STA",
          "nonTaxableAmount": 0,
          "nonTaxableRuleId": 0,
          "nonTaxableType": "BaseRule",
          "rate": 0.0625,
          "rateRuleId": 1321915,
          "rateSourceId": 3,
          "serCode": "",
          "sourcing": "Destination",
          "tax": 62.5,
          "taxableAmount": 1000,
          "taxType": "Sales",
          "taxName": "CA STATE TAX",
          "taxAuthorityTypeId": 45,
          "taxRegionId": 2127184,
          "taxCalculated": 62.5,
          "taxOverride": 0,
          "rateType": "General"
        }
      ]
    },
    "x-methods-used-in": []
  },
  "TransactionAddressModel": {
    "description": "An address used within this transaction.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique ID number of this address.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "transactionId": {
        "format": "int64",
        "description": "The unique ID number of the document to which this address belongs.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "boundaryLevel": {
        "description": "The boundary level at which this address was validated.",
        "enum": [
          "Address",
          "Zip9",
          "Zip5"
        ],
        "type": "string",
        "readOnly": true,
        "example": "Address",
        "x-enum-type": "BoundaryLevel",
        "x-enum-description": "Jurisdiction boundary precision level found for address.  This depends on the accuracy of the address\n                as well as the precision level of the state provided jurisdiction boundaries.",
        "x-enum-value-comments": {
          "Address": "Street address precision",
          "Zip9": "9-digit zip precision",
          "Zip5": "5-digit zip precision"
        }
      },
      "line1": {
        "description": "The first line of the address.",
        "type": "string",
        "example": "100 Ravine Lane Northeast #220"
      },
      "line2": {
        "description": "The second line of the address.",
        "type": "string"
      },
      "line3": {
        "description": "The third line of the address.",
        "type": "string"
      },
      "city": {
        "description": "The city for the address.",
        "type": "string",
        "example": "Bainbridge Island"
      },
      "region": {
        "description": "The ISO 3166 region code. E.g., the second part of ISO 3166-2.",
        "type": "string",
        "example": "WA"
      },
      "postalCode": {
        "description": "The postal code or zip code for the address.",
        "type": "string",
        "example": "98110"
      },
      "country": {
        "description": "The ISO 3166 country code",
        "type": "string",
        "example": "US"
      },
      "taxRegionId": {
        "format": "int32",
        "description": "The unique ID number of the tax region for this address.",
        "type": "integer",
        "example": 0
      },
      "latitude": {
        "description": "Latitude for this address",
        "type": "string"
      },
      "longitude": {
        "description": "Longitude for this address",
        "type": "string"
      }
    },
    "example": {
      "id": 0,
      "transactionId": 0,
      "boundaryLevel": "Address",
      "line1": "100 Ravine Lane Northeast #220",
      "city": "Bainbridge Island",
      "region": "WA",
      "postalCode": "98110",
      "country": "US",
      "taxRegionId": 0
    },
    "x-methods-used-in": []
  },
  "TransactionLocationTypeModel": {
    "description": "Information about a location type",
    "type": "object",
    "properties": {
      "documentLocationTypeId": {
        "format": "int64",
        "description": "Location type ID for this location type in transaction",
        "type": "integer",
        "readOnly": true,
        "example": 123
      },
      "documentId": {
        "format": "int64",
        "description": "Transaction ID",
        "type": "integer",
        "readOnly": true,
        "example": 456
      },
      "documentAddressId": {
        "format": "int64",
        "description": "Address ID for the transaction",
        "type": "integer",
        "readOnly": true,
        "example": 789
      },
      "locationTypeCode": {
        "description": "Location type code",
        "type": "string",
        "readOnly": true,
        "example": "SingleLocation"
      }
    },
    "example": {
      "documentLocationTypeId": 123,
      "documentId": 456,
      "documentAddressId": 789,
      "locationTypeCode": "SingleLocation"
    },
    "x-methods-used-in": []
  },
  "TransactionSummary": {
    "description": "Summary information about an overall transaction.",
    "type": "object",
    "properties": {
      "country": {
        "description": "Two character ISO-3166 country code.",
        "type": "string",
        "example": "US"
      },
      "region": {
        "description": "Two or three character ISO region, state or province code, if applicable.",
        "type": "string",
        "example": "CA"
      },
      "jurisType": {
        "description": "The type of jurisdiction that collects this tax.",
        "enum": [
          "Country",
          "Composite",
          "State",
          "County",
          "City",
          "Special"
        ],
        "type": "string",
        "example": "State",
        "x-enum-type": "JurisdictionType",
        "x-enum-description": "Jurisdiction Type",
        "x-enum-value-comments": {
          "Country": "Country",
          "Composite": "Deprecated",
          "State": "State",
          "County": "County",
          "City": "City",
          "Special": "Special Tax Jurisdiction"
        }
      },
      "jurisCode": {
        "description": "Jurisdiction Code for the taxing jurisdiction",
        "type": "string",
        "example": "06"
      },
      "jurisName": {
        "description": "The name of the jurisdiction that collects this tax.",
        "type": "string",
        "example": "CALIFORNIA"
      },
      "taxAuthorityType": {
        "format": "int32",
        "description": "The unique ID of the Tax Authority Type that collects this tax.",
        "type": "integer",
        "example": 45
      },
      "stateAssignedNo": {
        "description": "The state assigned number of the jurisdiction that collects this tax.",
        "type": "string",
        "example": ""
      },
      "taxType": {
        "description": "The tax type of this tax.",
        "enum": [
          "Lodging",
          "Bottle",
          "EWaste",
          "LandedCost",
          "ConsumerUse",
          "Excise",
          "Fee",
          "Input",
          "Nonrecoverable",
          "Output",
          "Rental",
          "Sales",
          "Use"
        ],
        "type": "string",
        "example": "Sales",
        "x-enum-type": "TaxType",
        "x-enum-description": "Tax type",
        "x-enum-value-comments": {
          "Sales": "Sales tax",
          "Use": "Use tax",
          "ConsumerUse": "Consumer Use Tax",
          "Output": "VAT/GST Output tax",
          "Input": "VAT/GST Input tax",
          "Nonrecoverable": "VAT/GST Nonrecoverable Input tax",
          "Fee": "Fee - PIFs (Public Improvement Fees) and RSFs (Retail Sales Fees)",
          "Rental": "Rental Tax",
          "Excise": "Medical Excise Tax",
          "Lodging": "Match Lodging tax type",
          "Bottle": "Match bottle tax type",
          "EWaste": "EWaste tax type",
          "LandedCost": "LandedCost tax type"
        }
      },
      "taxName": {
        "description": "The name of the tax.",
        "type": "string",
        "example": "CA STATE TAX"
      },
      "taxGroup": {
        "description": "Group code when special grouping is enabled.",
        "type": "string",
        "example": ""
      },
      "rateType": {
        "description": "(DEPRECATED) Indicates the tax rate type.  Please use rateTypeCode instead.",
        "enum": [
          "ReducedA",
          "ReducedB",
          "Food",
          "General",
          "IncreasedStandard",
          "LinenRental",
          "Medical",
          "Parking",
          "SuperReduced",
          "ReducedR",
          "Standard",
          "Zero"
        ],
        "type": "string",
        "example": "General",
        "x-enum-type": "RateType",
        "x-enum-description": "",
        "x-enum-value-comments": {}
      },
      "rateTypeCode": {
        "description": "Indicates the code of the rate type.  Use `/api/v2/definitions/ratetypes` for a full list of rate type codes.",
        "type": "string",
        "example": "G"
      },
      "taxable": {
        "format": "double",
        "description": "Tax Base - The adjusted taxable amount.",
        "type": "number",
        "example": 1000
      },
      "rate": {
        "format": "double",
        "description": "Tax Rate - The rate of taxation, as a fraction of the amount.",
        "type": "number",
        "example": 0.0625
      },
      "tax": {
        "format": "double",
        "description": "Tax amount - The calculated tax (Base * Rate).",
        "type": "number",
        "example": 62.5
      },
      "taxCalculated": {
        "format": "double",
        "description": "Tax Calculated by Avalara AvaTax.  This may be overriden by a TaxOverride.TaxAmount.",
        "type": "number",
        "example": 62.5
      },
      "nonTaxable": {
        "format": "double",
        "description": "The amount of the transaction that was non-taxable.",
        "type": "number",
        "example": 0
      },
      "exemption": {
        "format": "double",
        "description": "The amount of the transaction that was exempt.",
        "type": "number",
        "example": 0
      }
    },
    "example": {
      "country": "US",
      "region": "CA",
      "jurisType": "State",
      "jurisCode": "06",
      "jurisName": "CALIFORNIA",
      "taxAuthorityType": 45,
      "stateAssignedNo": "",
      "taxType": "Sales",
      "taxName": "CA STATE TAX",
      "taxGroup": "",
      "rateType": "General",
      "rateTypeCode": "G",
      "taxable": 1000,
      "rate": 0.0625,
      "tax": 62.5,
      "taxCalculated": 62.5,
      "nonTaxable": 0,
      "exemption": 0
    },
    "x-methods-used-in": []
  },
  "TransactionLineDetailModel": {
    "description": "An individual tax detail element.  Represents the amount of tax calculated for a particular jurisdiction, for a particular line in an invoice.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique ID number of this tax detail.",
        "type": "integer",
        "readOnly": true,
        "example": 123456789
      },
      "transactionLineId": {
        "format": "int64",
        "description": "The unique ID number of the line within this transaction.",
        "type": "integer",
        "readOnly": true,
        "example": 123456789
      },
      "transactionId": {
        "format": "int64",
        "description": "The unique ID number of this transaction.",
        "type": "integer",
        "readOnly": true,
        "example": 123456789
      },
      "addressId": {
        "format": "int64",
        "description": "The unique ID number of the address used for this tax detail.",
        "type": "integer",
        "example": 12345
      },
      "country": {
        "description": "The two character ISO 3166 country code of the country where this tax detail is assigned.",
        "maxLength": 2,
        "minLength": 2,
        "type": "string",
        "example": "US"
      },
      "region": {
        "description": "The two-or-three character ISO region code for the region where this tax detail is assigned.",
        "type": "string",
        "example": "CA"
      },
      "countyFIPS": {
        "description": "For U.S. transactions, the Federal Information Processing Standard (FIPS) code for the county where this tax detail is assigned.",
        "type": "string"
      },
      "stateFIPS": {
        "description": "For U.S. transactions, the Federal Information Processing Standard (FIPS) code for the state where this tax detail is assigned.",
        "type": "string",
        "example": "06"
      },
      "exemptAmount": {
        "format": "double",
        "description": "The amount of this line that was considered exempt in this tax detail.",
        "type": "number",
        "example": 0
      },
      "exemptReasonId": {
        "format": "int32",
        "description": "The unique ID number of the exemption reason for this tax detail.",
        "type": "integer",
        "example": 4
      },
      "inState": {
        "description": "True if this detail element represented an in-state transaction.",
        "type": "boolean",
        "example": false
      },
      "jurisCode": {
        "description": "The code of the jurisdiction to which this tax detail applies.",
        "type": "string",
        "example": "06"
      },
      "jurisName": {
        "description": "The name of the jurisdiction to which this tax detail applies.",
        "type": "string",
        "example": "CALIFORNIA"
      },
      "jurisdictionId": {
        "format": "int32",
        "description": "The unique ID number of the jurisdiction to which this tax detail applies.",
        "type": "integer",
        "example": 5000531
      },
      "signatureCode": {
        "description": "The Avalara-specified signature code of the jurisdiction to which this tax detail applies.",
        "type": "string",
        "example": "AGAM"
      },
      "stateAssignedNo": {
        "description": "The state assigned number of the jurisdiction to which this tax detail applies.",
        "type": "string",
        "example": ""
      },
      "jurisType": {
        "description": "The type of the jurisdiction to which this tax detail applies.",
        "enum": [
          "STA",
          "CTY",
          "CIT",
          "STJ",
          "CNT"
        ],
        "type": "string",
        "example": "STA",
        "x-enum-type": "JurisTypeId",
        "x-enum-description": "Types of jurisdiction referenced in a transaction",
        "x-enum-value-comments": {
          "STA": "State",
          "CTY": "County",
          "CIT": "City",
          "STJ": "Special",
          "CNT": "Country"
        }
      },
      "nonTaxableAmount": {
        "format": "double",
        "description": "The amount of this line item that was considered nontaxable in this tax detail.",
        "type": "number",
        "example": 0
      },
      "nonTaxableRuleId": {
        "format": "int32",
        "description": "The rule according to which portion of this detail was considered nontaxable.",
        "type": "integer",
        "example": 0
      },
      "nonTaxableType": {
        "description": "The type of nontaxability that was applied to this tax detail.",
        "enum": [
          "RateRule",
          "RateOverrideRule",
          "BaseRule",
          "ExemptEntityRule",
          "ProductTaxabilityRule",
          "NexusRule"
        ],
        "type": "string",
        "example": "BaseRule",
        "x-enum-type": "TaxRuleTypeId",
        "x-enum-description": "TaxRuleTypeId",
        "x-enum-value-comments": {
          "RateRule": "RateRule",
          "RateOverrideRule": "RateOverrideRule",
          "BaseRule": "BaseRule",
          "ExemptEntityRule": "ExemptEntityRule",
          "ProductTaxabilityRule": "ProductTaxabilityRule",
          "NexusRule": "NexusRule"
        }
      },
      "rate": {
        "format": "double",
        "description": "The rate at which this tax detail was calculated.",
        "type": "number",
        "example": 0.0625
      },
      "rateRuleId": {
        "format": "int32",
        "description": "The unique ID number of the rule according to which this tax detail was calculated.",
        "type": "integer",
        "example": 1321915
      },
      "rateSourceId": {
        "format": "int32",
        "description": "The unique ID number of the source of the rate according to which this tax detail was calculated.",
        "type": "integer",
        "example": 3
      },
      "serCode": {
        "description": "For Streamlined Sales Tax customers, the SST Electronic Return code under which this tax detail should be applied.",
        "type": "string",
        "example": ""
      },
      "sourcing": {
        "description": "Indicates whether this tax detail applies to the origin or destination of the transaction.",
        "enum": [
          "Mixed",
          "Destination",
          "Origin"
        ],
        "type": "string",
        "example": "Destination",
        "x-enum-type": "Sourcing",
        "x-enum-description": "Sourcing",
        "x-enum-value-comments": {
          "Origin": "Origin",
          "Destination": "Destination",
          "Mixed": "Mixed sourcing, for states that do both origin and destination calculation"
        }
      },
      "tax": {
        "format": "double",
        "description": "The amount of tax for this tax detail.",
        "type": "number",
        "example": 62.5
      },
      "taxableAmount": {
        "format": "double",
        "description": "The taxable amount of this tax detail.",
        "type": "number",
        "example": 1000
      },
      "taxType": {
        "description": "The type of tax that was calculated.  Depends on the company's nexus settings as well as the jurisdiction's tax laws.",
        "enum": [
          "Lodging",
          "Bottle",
          "EWaste",
          "LandedCost",
          "ConsumerUse",
          "Excise",
          "Fee",
          "Input",
          "Nonrecoverable",
          "Output",
          "Rental",
          "Sales",
          "Use"
        ],
        "type": "string",
        "example": "Sales",
        "x-enum-type": "TaxType",
        "x-enum-description": "Tax type",
        "x-enum-value-comments": {
          "Sales": "Sales tax",
          "Use": "Use tax",
          "ConsumerUse": "Consumer Use Tax",
          "Output": "VAT/GST Output tax",
          "Input": "VAT/GST Input tax",
          "Nonrecoverable": "VAT/GST Nonrecoverable Input tax",
          "Fee": "Fee - PIFs (Public Improvement Fees) and RSFs (Retail Sales Fees)",
          "Rental": "Rental Tax",
          "Excise": "Medical Excise Tax",
          "Lodging": "Match Lodging tax type",
          "Bottle": "Match bottle tax type",
          "EWaste": "EWaste tax type",
          "LandedCost": "LandedCost tax type"
        }
      },
      "taxName": {
        "description": "The name of the tax against which this tax amount was calculated.",
        "type": "string",
        "example": "CA STATE TAX"
      },
      "taxAuthorityTypeId": {
        "format": "int32",
        "description": "The type of the tax authority to which this tax will be remitted.",
        "type": "integer",
        "example": 45
      },
      "taxRegionId": {
        "format": "int32",
        "description": "The unique ID number of the tax region.",
        "type": "integer",
        "example": 2127184
      },
      "taxCalculated": {
        "format": "double",
        "description": "The amount of tax that was calculated.  This amount may be different if a tax override was used.\r\nIf the customer specified a tax override, this calculated tax value represents the amount of tax that would\r\nhave been charged if Avalara had calculated the tax for the rule.",
        "type": "number",
        "example": 62.5
      },
      "taxOverride": {
        "format": "double",
        "description": "The amount of tax override that was specified for this tax line.",
        "type": "number",
        "example": 0
      },
      "rateType": {
        "description": "(DEPRECATED) The rate type for this tax detail.  Please use rateTypeCode instead.",
        "enum": [
          "ReducedA",
          "ReducedB",
          "Food",
          "General",
          "IncreasedStandard",
          "LinenRental",
          "Medical",
          "Parking",
          "SuperReduced",
          "ReducedR",
          "Standard",
          "Zero"
        ],
        "type": "string",
        "example": "General",
        "x-enum-type": "RateType",
        "x-enum-description": "",
        "x-enum-value-comments": {}
      },
      "rateTypeCode": {
        "description": "Indicates the code of the rate type that was used to calculate this tax detail.  Use `/api/v2/definitions/ratetypes` for a full list of rate type codes.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "taxableUnits": {
        "format": "double",
        "description": "Number of units in this line item that were calculated to be taxable according to this rate detail.",
        "type": "number"
      },
      "nonTaxableUnits": {
        "format": "double",
        "description": "Number of units in this line item that were calculated to be nontaxable according to this rate detail.",
        "type": "number"
      },
      "exemptUnits": {
        "format": "double",
        "description": "Number of units in this line item that were calculated to be exempt according to this rate detail.",
        "type": "number"
      },
      "unitOfBasis": {
        "description": "When calculating units, what basis of measurement did we use for calculating the units?",
        "type": "string"
      },
      "isNonPassThru": {
        "description": "True if this value is a non-passthrough tax.\r\n\r\nA non-passthrough tax is a tax that may not be charged to a customer; it must be paid directly by the company.",
        "type": "boolean"
      }
    },
    "example": {
      "id": 123456789,
      "transactionLineId": 123456789,
      "transactionId": 123456789,
      "addressId": 12345,
      "country": "US",
      "region": "CA",
      "stateFIPS": "06",
      "exemptAmount": 0,
      "exemptReasonId": 4,
      "inState": false,
      "jurisCode": "06",
      "jurisName": "CALIFORNIA",
      "jurisdictionId": 5000531,
      "signatureCode": "AGAM",
      "stateAssignedNo": "",
      "jurisType": "STA",
      "nonTaxableAmount": 0,
      "nonTaxableRuleId": 0,
      "nonTaxableType": "BaseRule",
      "rate": 0.0625,
      "rateRuleId": 1321915,
      "rateSourceId": 3,
      "serCode": "",
      "sourcing": "Destination",
      "tax": 62.5,
      "taxableAmount": 1000,
      "taxType": "Sales",
      "taxName": "CA STATE TAX",
      "taxAuthorityTypeId": 45,
      "taxRegionId": 2127184,
      "taxCalculated": 62.5,
      "taxOverride": 0,
      "rateType": "General"
    },
    "x-methods-used-in": []
  },
  "TransactionLineLocationTypeModel": {
    "description": "Represents information about location types stored in a line",
    "type": "object",
    "properties": {
      "documentLineLocationTypeId": {
        "format": "int64",
        "description": "The unique ID number of this line location address model",
        "type": "integer",
        "readOnly": true,
        "example": 123
      },
      "documentLineId": {
        "format": "int64",
        "description": "The unique ID number of the document line associated with this line location address model",
        "type": "integer",
        "readOnly": true,
        "example": 456
      },
      "documentAddressId": {
        "format": "int64",
        "description": "The address ID corresponding to this model",
        "type": "integer",
        "readOnly": true,
        "example": 789
      },
      "locationTypeCode": {
        "description": "The location type code corresponding to this model",
        "type": "string",
        "readOnly": true,
        "example": "SingleLocation"
      }
    },
    "example": {
      "documentLineLocationTypeId": 123,
      "documentLineId": 456,
      "documentAddressId": 789,
      "locationTypeCode": "SingleLocation"
    },
    "x-methods-used-in": []
  },
  "RefundTransactionModel": {
    "description": "Refund a committed transaction",
    "required": [
      "refundDate"
    ],
    "type": "object",
    "properties": {
      "refundTransactionCode": {
        "description": "The transaction code for the refund.  This code will be saved to the `ReturnInvoice` transaction, and does not need to match the code of the original sale.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "882f6786-5e0b-43fa-b7c6-809949726cf0"
      },
      "refundDate": {
        "format": "date-time",
        "description": "The date of the refund.  For customers using Avalara's Managed Returns Service, this date controls the month in which the refund\r\ntransaction will be reported on a tax filing.",
        "type": "string",
        "example": "2018-01-24T00:00:00-08:00",
        "x-date-type": "date-only"
      },
      "refundType": {
        "description": "Type of this refund.  \r\n\r\nTo submit a full refund, specify `Full`.  \r\n\r\nTo refund only specific lines from the transaction, specify `Partial` and indicate the lines you wish to apply in the `refundLines` field.\r\n\r\nTo refund the tax that was paid in the previous transaction, specify `TaxOnly`.\r\n\r\nTo issue a percentage-based discount, specify `Percentage`.",
        "enum": [
          "Full",
          "Partial",
          "TaxOnly",
          "Percentage"
        ],
        "type": "string",
        "example": "Full",
        "x-enum-type": "RefundType",
        "x-enum-description": "Refund types",
        "x-enum-value-comments": {
          "Full": "Refund the whole transaction.",
          "Partial": "Refund only specific lines from the original a transaction.",
          "TaxOnly": "Only refund the tax part of the transaction.",
          "Percentage": "Refund a percentage of the value of this transaction."
        }
      },
      "refundPercentage": {
        "format": "double",
        "description": "The percentage for refund.\r\n\r\nThis value only applies if you choose `refundType = Percentage` or `refundType = Partial`.",
        "type": "number"
      },
      "refundLines": {
        "description": "If you chose a refund of type `Partial`, this indicates which lines from the original transaction are being refunded.",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "referenceCode": {
        "description": "A user-defined reference field containing information about this refund.",
        "type": "string",
        "example": "Refund for a committed transaction"
      }
    },
    "example": {
      "refundTransactionCode": "882f6786-5e0b-43fa-b7c6-809949726cf0",
      "refundDate": "2018-01-24",
      "refundType": "Full",
      "referenceCode": "Refund for a committed transaction"
    },
    "x-methods-used-in": [
      "MultiDocument/RefundMultiDocumentTransaction",
      "Transactions/RefundTransaction"
    ]
  },
  "CreateMultiDocumentModel": {
    "description": "A MultiDocument transaction represents a sale or purchase that occurred between more than two companies.\r\n\r\nA traditional transaction requires exactly two parties: a seller and a buyer.  MultiDocument transactions can\r\ninvolve a marketplace of vendors, each of which contributes some portion of the final transaction.  Within\r\na MultiDocument transaction, each individual buyer and seller pair are matched up and converted to a separate\r\ndocument.  This separation of documents allows each seller to file their taxes separately.",
    "required": [
      "lines",
      "date",
      "customerCode"
    ],
    "type": "object",
    "properties": {
      "code": {
        "description": "The transaction code of the MultiDocument transaction.\r\n\r\nAll individual transactions within this MultiDocument object will have this code as a prefix.\r\n\r\nIf you leave the `code` field blank, a GUID will be assigned.",
        "maxLength": 45,
        "minLength": 0,
        "type": "string"
      },
      "lines": {
        "description": "Lines that will appear on the invoice.\r\n\r\nFor a MultiDocument transaction, each line may represent a different company or reporting location code.  AvaTax\r\nwill separate this MultiDocument transaction object into many different transactions, one for each pair of legal\r\nentities, so that each legal entity can file their transactional taxes correctly.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/MultiDocumentLineItemModel"
        },
        "example": [
          {
            "companyCode": "DEFAULT",
            "reportingLocationCode": "ReportLocation111",
            "number": "1",
            "quantity": 1,
            "amount": 100,
            "taxCode": "PS081282",
            "itemCode": "Y0001",
            "description": "Yarn"
          }
        ]
      },
      "allowAdjust": {
        "description": "Set this value to true to allow this API call to adjust the MultiDocument model if one already exists.\r\n\r\nIf you omit this field, or if the value is `null`, you will receive an error if you try to create two MultiDocument\r\nobjects with the same `code`.",
        "type": "boolean"
      },
      "type": {
        "description": "Specifies the type of document to create.  A document type ending with `Invoice` is a permanent transaction\r\nthat will be recorded in AvaTax.  A document type ending with `Order` is a temporary estimate that will not\r\nbe preserved.\r\n\r\nIf you omit this value, the API will assume you want to create a `SalesOrder`.",
        "enum": [
          "SalesOrder",
          "SalesInvoice",
          "PurchaseOrder",
          "PurchaseInvoice",
          "ReturnOrder",
          "ReturnInvoice",
          "InventoryTransferOrder",
          "InventoryTransferInvoice",
          "ReverseChargeOrder",
          "ReverseChargeInvoice",
          "Any"
        ],
        "type": "string",
        "example": "SalesInvoice",
        "x-enum-type": "DocumentType",
        "x-enum-description": "Represents the different types of transactions that AvaTax can process.",
        "x-enum-value-comments": {
          "SalesOrder": "Represents an estimate, or a sales order, or a quote.  \n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a sales order, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a temporary document type and is not saved in tax history.",
          "SalesInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a sales invoice, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "PurchaseOrder": "Represents an estimate, or a purchase order, or a quote.\n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a purchase order, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a temporary document type and is not saved in tax history.",
          "PurchaseInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a purchase invoice, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReturnOrder": "Represents an estimate of tax to be refunded if a refund or return is processed.\n            \n            This document type is used before a customer chooses to request a refund for a previous sale, and it\n            estimates the final amount of tax to be refunded when the refund is completed.\n            \n            For a return order, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReturnInvoice": "Represents an refund that has been finalized.\n            \n            This document type is used when a customer chooses to request a refund for a previous sale, and it\n            records the final amount of tax that has been refunded when the refund is completed.\n            \n            For a return invoice, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a permanent document and is recorded in AvaTax.\n            \n            Please note that many jurisdictions around the United States have special rules about how to report refunds\n            on a sales tax filing, and some refund transactions may be unable to file immediately due to credit netting\n            rules.",
          "InventoryTransferOrder": "Represents a proposed movement of inventory from one jurisdiction to another.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a temporary document type and is not saved in tax history.",
          "InventoryTransferInvoice": "Represents a movement of inventory from one jurisdiction to another that has been finalized.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReverseChargeOrder": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReverseChargeInvoice": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "Any": "Not a real document type.\n            \n            This value is used when querying for documents.  You can specify the type `Any` in some cases to permit the\n            system to find any document matching other criteria."
        }
      },
      "companyCode": {
        "description": "Company Code - Specify the code of the company creating this transaction here.  If you leave this value null,\r\nyour account's default company will be used instead.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "DEFAULT"
      },
      "date": {
        "format": "date-time",
        "description": "Transaction Date - The date on the invoice, purchase order, etc.\r\n\r\nBy default, this date will be used to calculate the tax rates for the transaction.  If you wish to use a\r\ndifferent date to calculate tax rates, please specify a `taxOverride` of type `taxDate`.",
        "type": "string",
        "example": "2018-01-24T00:00:00-08:00",
        "x-date-type": "date-only"
      },
      "salespersonCode": {
        "description": "Salesperson Code - The client application salesperson reference code.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "customerCode": {
        "description": "Customer Code - The client application customer reference code.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "ABC"
      },
      "customerUsageType": {
        "description": "DEPRECATED - Customer Usage Type - The client application customer or usage type.  For a list of \r\navailable usage types, see `/api/v2/definitions/entityusecodes`.\r\nPlease use entityUseCode instead.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "entityUseCode": {
        "description": "Entity Use Code - The client application customer or usage type.  For a list of \r\navailable usage types, see `/api/v2/definitions/entityusecodes`.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "discount": {
        "format": "double",
        "description": "Discount - The discount amount to apply to the document.  This value will be applied only to lines\r\nthat have the `discounted` flag set to true.  If no lines have `discounted` set to true, this discount\r\ncannot be applied.",
        "type": "number"
      },
      "purchaseOrderNo": {
        "description": "Purchase Order Number for this document.\r\n\r\nThis is required for single use exemption certificates to match the order and invoice with the certificate.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "2018-01-24-001"
      },
      "exemptionNo": {
        "description": "Exemption Number for this document.\r\n\r\nIf you specify an exemption number for this document, this document will be considered exempt, and you\r\nmay be asked to provide proof of this exemption certificate in the event that you are asked by an auditor\r\nto verify your exemptions.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "addresses": {
        "$ref": "#/definitions/AddressesModel",
        "description": "Default addresses for all lines in this document.  \r\n\r\nThese addresses are the default values that will be used for any lines that do not have their own\r\naddress information.  If you specify addresses for a line, then no default addresses will be loaded\r\nfor that line.",
        "example": {
          "singleLocation": {
            "line1": "2000 Main Street",
            "city": "Irvine",
            "region": "CA",
            "country": "US",
            "postalCode": "92614"
          }
        }
      },
      "parameters": {
        "$ref": "#/definitions/CreateMultiDocumentModel > Parameters"
      },
      "referenceCode": {
        "description": "Customer-provided Reference Code with information about this transaction.\r\n\r\nThis field could be used to reference the original document for a return invoice, or for any other\r\nreference purpose.",
        "maxLength": 1024,
        "minLength": 0,
        "type": "string"
      },
      "reportingLocationCode": {
        "description": "Sets the sale location code (Outlet ID) for reporting this document to the tax authority.\r\n\r\nThis value is used by Avalara Managed Returns to group documents together by reporting locations\r\nfor tax authorities that require location-based reporting.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "commit": {
        "description": "Causes the document to be committed if true.  This option is only applicable for invoice document \r\ntypes, not orders.",
        "type": "boolean",
        "example": true
      },
      "batchCode": {
        "description": "BatchCode for batch operations.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "taxOverride": {
        "$ref": "#/definitions/TaxOverrideModel",
        "description": "Specifies a tax override for the entire document"
      },
      "currencyCode": {
        "description": "The three-character ISO 4217 currency code for this transaction.",
        "maxLength": 3,
        "minLength": 0,
        "type": "string",
        "example": "USD"
      },
      "serviceMode": {
        "description": "Specifies whether the tax calculation is handled Local, Remote, or Automatic (default).  This only \r\napplies when using an AvaLocal server.",
        "enum": [
          "Automatic",
          "Local",
          "Remote"
        ],
        "type": "string",
        "x-enum-type": "ServiceMode",
        "x-enum-description": "Service modes for tax calculation when using an AvaLocal server.",
        "x-enum-value-comments": {
          "Automatic": "Automatically use local or remote (default)",
          "Local": "Local server only",
          "Remote": "Remote server only"
        }
      },
      "exchangeRate": {
        "format": "double",
        "description": "Currency exchange rate from this transaction to the company base currency.\r\n    \r\nThis only needs to be set if the transaction currency is different than the company base currency.\r\nIt defaults to 1.0.",
        "type": "number"
      },
      "exchangeRateEffectiveDate": {
        "format": "date-time",
        "description": "Effective date of the exchange rate.",
        "type": "string",
        "x-date-type": "date-only"
      },
      "posLaneCode": {
        "description": "Sets the Point of Sale Lane Code sent by the User for this document.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "businessIdentificationNo": {
        "description": "VAT business identification number for the customer for this transaction.  This number will be used for all lines \r\nin the transaction, except for those lines where you have defined a different business identification number.\r\n\r\nIf you specify a VAT business identification number for the customer in this transaction and you have also set up\r\na business identification number for your company during company setup, this transaction will be treated as a \r\nbusiness-to-business transaction for VAT purposes and it will be calculated according to VAT tax rules.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "isSellerImporterOfRecord": {
        "description": "Specifies if the transaction should have value-added and cross-border taxes calculated with the seller as the importer of record.\r\n\r\nSome taxes only apply if the seller is the importer of record for a product.  In cases where companies are working together to\r\nship products, there may be mutual agreement as to which company is the entity designated as importer of record.  The importer\r\nof record will then be the company designated to pay taxes marked as being obligated to the importer of record.\r\n\r\nSet this value to `true` to consider your company as the importer of record and collect these taxes.\r\n\r\nThis value may also be set at the Nexus level.  See `NexusModel` for more information.",
        "type": "boolean"
      },
      "description": {
        "description": "User-supplied description for this transaction.",
        "maxLength": 2048,
        "minLength": 0,
        "type": "string",
        "example": "Yarn"
      },
      "email": {
        "description": "User-supplied email address relevant for this transaction.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "debugLevel": {
        "description": "If the user wishes to request additional debug information from this transaction, specify a level higher than `normal`.",
        "enum": [
          "Normal",
          "Diagnostic"
        ],
        "type": "string",
        "x-enum-type": "TaxDebugLevel",
        "x-enum-description": "Indicates the level of detail requested from a tax API call",
        "x-enum-value-comments": {
          "Normal": "User requests the normal level of debug information when creating a tax transaction",
          "Diagnostic": "User requests additional diagnostic information when creating a tax transaction"
        }
      }
    },
    "example": {
      "lines": [
        {
          "companyCode": "DEFAULT",
          "reportingLocationCode": "ReportLocation111",
          "number": "1",
          "quantity": 1,
          "amount": 100,
          "taxCode": "PS081282",
          "itemCode": "Y0001",
          "description": "Yarn"
        }
      ],
      "type": "SalesInvoice",
      "companyCode": "DEFAULT",
      "date": "2018-01-24",
      "customerCode": "ABC",
      "purchaseOrderNo": "2018-01-24-001",
      "addresses": {
        "singleLocation": {
          "line1": "2000 Main Street",
          "city": "Irvine",
          "region": "CA",
          "country": "US",
          "postalCode": "92614"
        }
      },
      "commit": true,
      "currencyCode": "USD",
      "description": "Yarn"
    },
    "x-methods-used-in": [
      "MultiDocument/CreateMultiDocumentTransaction"
    ]
  },
  "MultiDocumentLineItemModel": {
    "description": "Represents one line item in a MultiDocument transaction",
    "required": [
      "amount"
    ],
    "type": "object",
    "properties": {
      "companyCode": {
        "description": "Specify the code of the company for this line of transaction.  \r\n\r\nIf you leave this value null, the `companyCode` at the root level will be used instead.",
        "type": "string",
        "example": "DEFAULT"
      },
      "reportingLocationCode": {
        "description": "Sets the sale location code (Outlet ID) for reporting this document to the tax authority.  \r\n\r\nIf you leave this value `null`, the `reportingLocationCode` at the root level will be used instead.",
        "type": "string",
        "example": "ReportLocation111"
      },
      "number": {
        "description": "The line number of this line within the document.  This can be any text that is useful to you, such as numeric line numbers, alphabetic line numbers, or other text.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "1"
      },
      "quantity": {
        "format": "double",
        "description": "Quantity of items in this line.  This quantity value should always be a positive value representing the quantity of product that changed hands, even when handling returns or refunds.\r\n\r\nIf not provided, or if set to zero, the quantity value is assumed to be one (1).",
        "type": "number",
        "example": 1
      },
      "amount": {
        "format": "double",
        "description": "Total amount for this line.  The amount represents the net currency value that changed hands from the customer (represented by the `customerCode` field) to the company (represented by the `companyCode`) field.\r\n\r\nFor sale transactions, this value must be positive.  It indicates the amount of money paid by the customer to the company.\r\n\r\nFor refund or return transactions, this value must be negative.",
        "type": "number",
        "example": 100
      },
      "addresses": {
        "$ref": "#/definitions/AddressesModel",
        "description": "The addresses to use for this transaction line.\r\n\r\nIf you set this value to `null`, or if you omit this element from your API call, then instead the transaction\r\nwill use the `addresses` from the document level.\r\n\r\nIf you specify any other value besides `null`, only addresses specified for this line will be used for this line."
      },
      "taxCode": {
        "description": "Tax Code - System or Custom Tax Code.\r\n    \r\nYou can use your own tax code mapping or standard Avalara tax codes.  For a full list of tax codes, see `ListTaxCodes`.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "PS081282"
      },
      "customerUsageType": {
        "description": "DEPRECATED - Please use `entityUseCode` instead.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "entityUseCode": {
        "description": "Entity Use Code - The client application customer or usage type.  This field allows you to designate a type of usage that \r\nmay make this transaction considered exempt by reason of exempt usage.\r\n\r\nFor a list of entity use codes, see the Definitions API `ListEntityUseCodes`.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "itemCode": {
        "description": "Item Code (SKU).  If you provide an `itemCode` field, the AvaTax API will look up the item you created with the `CreateItems` API call\r\nand use all the information available about that item for this transaction.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Y0001"
      },
      "exemptionCode": {
        "description": "Exemption certificate number for this line.",
        "type": "string"
      },
      "discounted": {
        "description": "True if the document discount should be applied to this line.  If this value is false, or not provided, discounts will not be \r\napplied to this line even if they are specified on the root `discount` element.",
        "type": "boolean"
      },
      "taxIncluded": {
        "description": "Indicates whether the `amount` for this line already includes tax.\r\n\r\nIf this value is `true`, the final price of this line including tax will equal the value in `amount`. \r\n\r\nIf this value is `null` or `false`, the final price will equal `amount` plus whatever taxes apply to this line.",
        "type": "boolean"
      },
      "revenueAccount": {
        "description": "Revenue Account (Customer Defined Field).\r\n\r\nThis field is available for you to use to provide whatever information your implementation requires.  It does not affect tax calculation.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "ref1": {
        "description": "Ref1 (Customer Defined Field)\r\n\r\nThis field is available for you to use to provide whatever information your implementation requires.  It does not affect tax calculation.",
        "maxLength": 250,
        "minLength": 0,
        "type": "string"
      },
      "ref2": {
        "description": "Ref2 (Customer Defined Field)\r\n\r\nThis field is available for you to use to provide whatever information your implementation requires.  It does not affect tax calculation.",
        "maxLength": 250,
        "minLength": 0,
        "type": "string"
      },
      "description": {
        "description": "Item description.\r\n\r\nFor Streamlined Sales Tax (SST) customers, this field is required if an unmapped `itemCode` is used.",
        "maxLength": 2096,
        "minLength": 0,
        "type": "string",
        "example": "Yarn"
      },
      "businessIdentificationNo": {
        "description": "VAT business identification number for the customer for this line item.  If you leave this field empty,\r\nthis line item will use whatever business identification number you provided at the transaction level.\r\n\r\nIf you specify a VAT business identification number for the customer in this transaction and you have also set up\r\na business identification number for your company during company setup, this transaction will be treated as a \r\nbusiness-to-business transaction for VAT purposes and it will be calculated according to VAT tax rules.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "taxOverride": {
        "$ref": "#/definitions/TaxOverrideModel",
        "description": "Specifies a tax override for this line."
      },
      "parameters": {
        "$ref": "#/definitions/MultiDocumentLineItemModel > Parameters"
      },
      "hsCode": {
        "description": "The Item code for Custom Duty / Global Import tax determination\r\nHarmonized Tariff System code for this transaction.\r\n\r\nFor a list of harmonized tariff codes, see the Definitions API for harmonized tariff codes.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      }
    },
    "example": {
      "companyCode": "DEFAULT",
      "reportingLocationCode": "ReportLocation111",
      "number": "1",
      "quantity": 1,
      "amount": 100,
      "taxCode": "PS081282",
      "itemCode": "Y0001",
      "description": "Yarn"
    },
    "x-methods-used-in": []
  },
  "AddressesModel": {
    "description": "Information about all the addresses involved in this transaction.\r\n\r\nFor a physical in-person transaction at a retail point-of-sale location, please specify only one address using\r\nthe `singleLocation` field.\r\n\r\nFor a transaction that was shipped, delivered, or provided from an origin location such as a warehouse to\r\na destination location such as a customer, please specify the `shipFrom` and `shipTo` addresses.\r\n\r\nIn the United States, some jurisdictions recognize the address types `pointOfOrderOrigin` and `pointOfOrderAcceptance`.\r\nThese address types affect the sourcing models of some transactions.\r\n\r\nIf latitude and longitude information is provided for any of these addresses along with line, city, region, country and postal code information, \r\nwe will be using only latitude and longitude and will discard line, city, region, country and postal code information for the transaction. \r\nPlease ensure that you have the correct latitude/longitude information for the addresses prior to using the API. \r\nIf you provide either latitude or longitude information but not both, we will be using the line, city, region, country and postal code information for the addresses.",
    "type": "object",
    "properties": {
      "singleLocation": {
        "$ref": "#/definitions/AddressLocationInfo",
        "description": "If this transaction occurred at a retail point-of-sale location, provide that single address here and leave\r\nall other address types null."
      },
      "shipFrom": {
        "$ref": "#/definitions/AddressLocationInfo",
        "description": "The origination address where the products were shipped from, or from where the services originated."
      },
      "shipTo": {
        "$ref": "#/definitions/AddressLocationInfo",
        "description": "The destination address where the products were shipped to, or where the services were delivered."
      },
      "pointOfOrderOrigin": {
        "$ref": "#/definitions/AddressLocationInfo",
        "description": "The place of business where you receive the customer's order.  This address type is valid in the United States only\r\nand only applies to tangible personal property."
      },
      "pointOfOrderAcceptance": {
        "$ref": "#/definitions/AddressLocationInfo",
        "description": "The place of business where you accept/approve the customer’s order,\r\nthereby becoming contractually obligated to make the sale.  This address type is valid in the United States only\r\nand only applies to tangible personal property."
      }
    },
    "example": {
      "shipFrom": {
        "line1": "2000 Main Street",
        "city": "Irvine",
        "region": "CA",
        "country": "US",
        "postalCode": "92614"
      },
      "shipTo": {
        "line1": "1100 2nd Ave",
        "city": "Seattle",
        "region": "WA",
        "country": "US",
        "postalCode": "98101"
      }
    },
    "x-methods-used-in": []
  },
  "TaxOverrideModel": {
    "description": "Represents a tax override for a transaction",
    "type": "object",
    "properties": {
      "type": {
        "description": "Identifies the type of tax override",
        "enum": [
          "None",
          "TaxAmount",
          "Exemption",
          "TaxDate",
          "AccruedTaxAmount",
          "DeriveTaxable"
        ],
        "type": "string",
        "example": "TaxAmount",
        "x-enum-type": "TaxOverrideType",
        "x-enum-description": "TaxOverride reasons",
        "x-enum-value-comments": {
          "None": "No override",
          "TaxAmount": "Tax was overriden by the client",
          "Exemption": "Entity exemption was ignored (e.g. item was consumed)",
          "TaxDate": "Only the tax date was overriden",
          "AccruedTaxAmount": "To support Consumer Use Tax",
          "DeriveTaxable": "Derive the taxable amount from the tax amount"
        }
      },
      "taxAmount": {
        "format": "double",
        "description": "Indicates a total override of the calculated tax on the document.  AvaTax will distribute\r\nthe override across all the lines.\r\n            \r\nTax will be distributed on a best effort basis.  It may not always be possible to override all taxes.  Please consult\r\nyour account manager for information about overrides.",
        "type": "number",
        "example": 6.25
      },
      "taxDate": {
        "format": "date-time",
        "description": "The override tax date to use\r\n            \r\nThis is used when the tax has been previously calculated\r\nas in the case of a layaway, return or other reason indicated by the Reason element.\r\nIf the date is not overridden, then it should be set to the same as the DocDate.",
        "type": "string",
        "example": "2018-01-24T00:00:00-08:00",
        "x-date-type": "date-only"
      },
      "reason": {
        "description": "This provides the reason for a tax override for audit purposes.  It is required for types 2-4.\r\n            \r\nTypical reasons include:\r\n\"Return\"\r\n\"Layaway\"",
        "type": "string",
        "example": "Precalculated Tax"
      }
    },
    "example": {
      "type": "TaxAmount",
      "taxAmount": 6.25,
      "taxDate": "2018-01-24",
      "reason": "Precalculated Tax"
    },
    "x-methods-used-in": []
  },
  "AddressLocationInfo": {
    "description": "Represents an address to resolve.",
    "type": "object",
    "properties": {
      "locationCode": {
        "description": "If you wish to use the address of an existing location for this company, specify the address here.\r\nOtherwise, leave this value empty.",
        "type": "string"
      },
      "line1": {
        "description": "First line of the street address",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "2000 Main Street"
      },
      "line2": {
        "description": "Second line of the street address",
        "maxLength": 100,
        "minLength": 0,
        "type": "string"
      },
      "line3": {
        "description": "Third line of the street address",
        "maxLength": 100,
        "minLength": 0,
        "type": "string"
      },
      "city": {
        "description": "City component of the address",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Irvine"
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region within the country.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string",
        "example": "CA"
      },
      "country": {
        "description": "Name or ISO 3166 code identifying the country.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string",
        "example": "US"
      },
      "postalCode": {
        "description": "Postal Code / Zip Code component of the address.",
        "maxLength": 11,
        "minLength": 0,
        "type": "string",
        "example": "92614"
      },
      "latitude": {
        "format": "double",
        "description": "Geospatial latitude measurement, in Decimal Degrees floating point format.",
        "type": "number"
      },
      "longitude": {
        "format": "double",
        "description": "Geospatial longitude measurement, in Decimal Degrees floating point format.",
        "type": "number"
      }
    },
    "example": {
      "line1": "2000 Main Street",
      "city": "Irvine",
      "region": "CA",
      "country": "US",
      "postalCode": "92614"
    },
    "x-methods-used-in": []
  },
  "FetchResult[MultiDocumentModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/MultiDocumentModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "MultiDocument/ListMultiDocumentTransactions"
    ]
  },
  "AdjustMultiDocumentModel": {
    "description": "Replace an existing MultiDocument transaction recorded in AvaTax with a new one.",
    "required": [
      "adjustmentReason",
      "newTransaction"
    ],
    "type": "object",
    "properties": {
      "adjustmentReason": {
        "description": "A reason code indicating why this adjustment was made",
        "enum": [
          "NotAdjusted",
          "SourcingIssue",
          "ReconciledWithGeneralLedger",
          "ExemptCertApplied",
          "PriceAdjusted",
          "ProductReturned",
          "ProductExchanged",
          "BadDebt",
          "Other",
          "Offline"
        ],
        "type": "string",
        "example": "PriceAdjusted",
        "x-enum-type": "AdjustmentReason",
        "x-enum-description": "Indicates the type of adjustment that was performed on a transaction",
        "x-enum-value-comments": {
          "NotAdjusted": "The transaction has not been adjusted",
          "SourcingIssue": "A sourcing issue existed which caused the transaction to be adjusted",
          "ReconciledWithGeneralLedger": "Transaction was adjusted to reconcile it with a general ledger",
          "ExemptCertApplied": "Transaction was adjusted after an exemption certificate was applied",
          "PriceAdjusted": "Transaction was adjusted when the price of an item changed",
          "ProductReturned": "Transaction was adjusted due to a product return",
          "ProductExchanged": "Transaction was adjusted due to a product exchange",
          "BadDebt": "Transaction was adjusted due to bad or uncollectable debt",
          "Other": "Transaction was adjusted for another reason not specified",
          "Offline": "Offline"
        }
      },
      "adjustDescription": {
        "description": "If the AdjustmentReason is \"Other\", specify the reason here.\r\n\r\nThis is required when the AdjustmentReason is 8 (Other).",
        "type": "string",
        "example": "Price was dropped."
      },
      "newTransaction": {
        "$ref": "#/definitions/CreateMultiDocumentModel",
        "description": "Replace the current MultiDocument transaction with tax data calculated for this new MultiDocument transaction",
        "example": {
          "lines": [
            {
              "companyCode": "DEFAULT",
              "reportingLocationCode": "ReportLocation111",
              "number": "1",
              "quantity": 1,
              "amount": 100,
              "taxCode": "PS081282",
              "itemCode": "Y0001",
              "description": "Yarn"
            }
          ],
          "type": "SalesInvoice",
          "companyCode": "DEFAULT",
          "date": "2018-01-24",
          "customerCode": "ABC",
          "purchaseOrderNo": "2018-01-24-001",
          "addresses": {
            "singleLocation": {
              "line1": "2000 Main Street",
              "city": "Irvine",
              "region": "CA",
              "country": "US",
              "postalCode": "92614"
            }
          },
          "commit": true,
          "currencyCode": "USD",
          "description": "Yarn"
        }
      }
    },
    "example": {
      "adjustmentReason": "PriceAdjusted",
      "adjustDescription": "Price was dropped.",
      "newTransaction": {
        "lines": [
          {
            "companyCode": "DEFAULT",
            "reportingLocationCode": "ReportLocation111",
            "number": "1",
            "quantity": 1,
            "amount": 100,
            "taxCode": "PS081282",
            "itemCode": "Y0001",
            "description": "Yarn"
          }
        ],
        "type": "SalesInvoice",
        "companyCode": "DEFAULT",
        "date": "2018-01-24",
        "customerCode": "ABC",
        "purchaseOrderNo": "2018-01-24-001",
        "addresses": {
          "singleLocation": {
            "line1": "2000 Main Street",
            "city": "Irvine",
            "region": "CA",
            "country": "US",
            "postalCode": "92614"
          }
        },
        "commit": true,
        "currencyCode": "USD",
        "description": "Yarn"
      }
    },
    "x-methods-used-in": [
      "MultiDocument/AdjustMultiDocumentTransaction"
    ]
  },
  "VoidTransactionModel": {
    "description": "A request to void a previously created transaction",
    "required": [
      "code"
    ],
    "type": "object",
    "properties": {
      "code": {
        "description": "Please specify the reason for voiding or cancelling this transaction",
        "enum": [
          "Unspecified",
          "PostFailed",
          "DocDeleted",
          "DocVoided",
          "AdjustmentCancelled"
        ],
        "type": "string",
        "example": "DocVoided",
        "x-enum-type": "VoidReasonCode",
        "x-enum-description": "Reason code for voiding or cancelling a transaction",
        "x-enum-value-comments": {
          "Unspecified": "Unspecified reason",
          "PostFailed": "Post operation failed - Document status will be changed to unposted",
          "DocDeleted": "Document deleted - If committed, document status will be changed to Cancelled.  If not committed, document will be\n                deleted.",
          "DocVoided": "Document has been voided and DocStatus will be set to Cancelled",
          "AdjustmentCancelled": "AdjustTax operation has been cancelled.  Adjustment will be reversed."
        }
      }
    },
    "example": {
      "code": "DocVoided"
    },
    "x-methods-used-in": [
      "MultiDocument/VoidMultiDocumentTransaction",
      "Transactions/VoidTransaction"
    ]
  },
  "AuditMultiDocumentModel": {
    "description": "Information about a previously created MultiDocument transaction",
    "type": "object",
    "properties": {
      "reconstructed": {
        "$ref": "#/definitions/ReconstructedMultiDocumentModel",
        "description": "Reconstructed API request/response pair that can be used to adjust or re-create this MultiDocument transaction.",
        "example": {
          "request": {
            "lines": [
              {
                "companyCode": "DEFAULT",
                "reportingLocationCode": "ReportLocation111",
                "number": "1",
                "quantity": 1,
                "amount": 100,
                "taxCode": "PS081282",
                "itemCode": "Y0001",
                "description": "Yarn"
              }
            ],
            "type": "SalesInvoice",
            "companyCode": "DEFAULT",
            "date": "2018-01-24",
            "customerCode": "ABC",
            "purchaseOrderNo": "2018-01-24-001",
            "addresses": {
              "singleLocation": {
                "line1": "2000 Main Street",
                "city": "Irvine",
                "region": "CA",
                "country": "US",
                "postalCode": "92614"
              }
            },
            "commit": true,
            "currencyCode": "USD",
            "description": "Yarn"
          }
        }
      },
      "code": {
        "description": "Represents the unique code of this MultiDocument transaction.\r\n\r\nA MultiDocument transaction is uniquely identified by its `accountId`, `code`, and `type`.",
        "type": "string"
      },
      "type": {
        "description": "Represents the document type of this MultiDocument transaction.  For more information about\r\ndocument types, see [DocumentType](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/DocumentType/).\r\n\r\nA MultiDocument transaction is uniquely identified by its `accountId`, `code`, and `type`.",
        "enum": [
          "SalesOrder",
          "SalesInvoice",
          "PurchaseOrder",
          "PurchaseInvoice",
          "ReturnOrder",
          "ReturnInvoice",
          "InventoryTransferOrder",
          "InventoryTransferInvoice",
          "ReverseChargeOrder",
          "ReverseChargeInvoice",
          "Any"
        ],
        "type": "string",
        "example": "SalesOrder",
        "x-enum-type": "DocumentType",
        "x-enum-description": "Represents the different types of transactions that AvaTax can process.",
        "x-enum-value-comments": {
          "SalesOrder": "Represents an estimate, or a sales order, or a quote.  \n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a sales order, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a temporary document type and is not saved in tax history.",
          "SalesInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a sales invoice, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "PurchaseOrder": "Represents an estimate, or a purchase order, or a quote.\n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a purchase order, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a temporary document type and is not saved in tax history.",
          "PurchaseInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a purchase invoice, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReturnOrder": "Represents an estimate of tax to be refunded if a refund or return is processed.\n            \n            This document type is used before a customer chooses to request a refund for a previous sale, and it\n            estimates the final amount of tax to be refunded when the refund is completed.\n            \n            For a return order, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReturnInvoice": "Represents an refund that has been finalized.\n            \n            This document type is used when a customer chooses to request a refund for a previous sale, and it\n            records the final amount of tax that has been refunded when the refund is completed.\n            \n            For a return invoice, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a permanent document and is recorded in AvaTax.\n            \n            Please note that many jurisdictions around the United States have special rules about how to report refunds\n            on a sales tax filing, and some refund transactions may be unable to file immediately due to credit netting\n            rules.",
          "InventoryTransferOrder": "Represents a proposed movement of inventory from one jurisdiction to another.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a temporary document type and is not saved in tax history.",
          "InventoryTransferInvoice": "Represents a movement of inventory from one jurisdiction to another that has been finalized.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReverseChargeOrder": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReverseChargeInvoice": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "Any": "Not a real document type.\n            \n            This value is used when querying for documents.  You can specify the type `Any` in some cases to permit the\n            system to find any document matching other criteria."
        }
      },
      "serverTimestamp": {
        "format": "date-time",
        "description": "Server timestamp, in UTC, of the date/time when the original transaction was created",
        "type": "string",
        "example": "2018-01-24T12:04:53.5961579-08:00"
      },
      "serverDuration": {
        "format": "date-time",
        "description": "Length of time the original API call took",
        "type": "string"
      },
      "apiCallStatus": {
        "description": "api call status",
        "enum": [
          "OriginalApiCallAvailable",
          "ReconstructedApiCallAvailable",
          "Any"
        ],
        "type": "string",
        "example": "ReconstructedApiCallAvailable",
        "x-enum-type": "ApiCallStatus",
        "x-enum-description": "Indicates what level of auditing information is available for a transaction",
        "x-enum-value-comments": {
          "OriginalApiCallAvailable": "If the original api call is availabe on S3",
          "ReconstructedApiCallAvailable": "if the original api call is not available, reconstructed api call should always be available",
          "Any": "Any other api call status"
        }
      },
      "original": {
        "$ref": "#/definitions/OriginalApiRequestResponseModel",
        "description": "Original API request/response"
      }
    },
    "example": {
      "reconstructed": {
        "request": {
          "lines": [
            {
              "companyCode": "DEFAULT",
              "reportingLocationCode": "ReportLocation111",
              "number": "1",
              "quantity": 1,
              "amount": 100,
              "taxCode": "PS081282",
              "itemCode": "Y0001",
              "description": "Yarn"
            }
          ],
          "type": "SalesInvoice",
          "companyCode": "DEFAULT",
          "date": "2018-01-24",
          "customerCode": "ABC",
          "purchaseOrderNo": "2018-01-24-001",
          "addresses": {
            "singleLocation": {
              "line1": "2000 Main Street",
              "city": "Irvine",
              "region": "CA",
              "country": "US",
              "postalCode": "92614"
            }
          },
          "commit": true,
          "currencyCode": "USD",
          "description": "Yarn"
        }
      },
      "type": "SalesOrder",
      "serverTimestamp": "2018-01-24T12:04:53.5961579-08:00",
      "apiCallStatus": "ReconstructedApiCallAvailable"
    },
    "x-methods-used-in": [
      "MultiDocument/AuditMultiDocumentTransaction"
    ]
  },
  "ReconstructedMultiDocumentModel": {
    "description": "Contains information about the original API request and response that created\r\na MultiDocument object.",
    "type": "object",
    "properties": {
      "request": {
        "$ref": "#/definitions/CreateMultiDocumentModel",
        "description": "The original request that was used to create a MultiDocument object.",
        "example": {
          "lines": [
            {
              "companyCode": "DEFAULT",
              "reportingLocationCode": "ReportLocation111",
              "number": "1",
              "quantity": 1,
              "amount": 100,
              "taxCode": "PS081282",
              "itemCode": "Y0001",
              "description": "Yarn"
            }
          ],
          "type": "SalesInvoice",
          "companyCode": "DEFAULT",
          "date": "2018-01-24",
          "customerCode": "ABC",
          "purchaseOrderNo": "2018-01-24-001",
          "addresses": {
            "singleLocation": {
              "line1": "2000 Main Street",
              "city": "Irvine",
              "region": "CA",
              "country": "US",
              "postalCode": "92614"
            }
          },
          "commit": true,
          "currencyCode": "USD",
          "description": "Yarn"
        }
      }
    },
    "example": {
      "request": {
        "lines": [
          {
            "companyCode": "DEFAULT",
            "reportingLocationCode": "ReportLocation111",
            "number": "1",
            "quantity": 1,
            "amount": 100,
            "taxCode": "PS081282",
            "itemCode": "Y0001",
            "description": "Yarn"
          }
        ],
        "type": "SalesInvoice",
        "companyCode": "DEFAULT",
        "date": "2018-01-24",
        "customerCode": "ABC",
        "purchaseOrderNo": "2018-01-24-001",
        "addresses": {
          "singleLocation": {
            "line1": "2000 Main Street",
            "city": "Irvine",
            "region": "CA",
            "country": "US",
            "postalCode": "92614"
          }
        },
        "commit": true,
        "currencyCode": "USD",
        "description": "Yarn"
      }
    },
    "x-methods-used-in": []
  },
  "OriginalApiRequestResponseModel": {
    "description": "Represents the exact API request and response from the original transaction API call, if available",
    "type": "object",
    "properties": {
      "request": {
        "description": "API request",
        "type": "string",
        "example": ""
      },
      "response": {
        "description": "API response",
        "type": "string",
        "example": ""
      }
    },
    "example": {
      "request": "",
      "response": ""
    },
    "x-methods-used-in": []
  },
  "VerifyMultiDocumentModel": {
    "description": "Verify that a MultiDocument object matches the information in your accounting system.\r\n\r\nIf all attributes of the MultiDocument object match the values in your request, the\r\nMultiDocument object will be moved to the document status `Posted`.\r\n\r\nFor more information on document status, see [DocumentStatus](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/DocumentStatus/).",
    "required": [
      "code",
      "type"
    ],
    "type": "object",
    "properties": {
      "code": {
        "description": "Represents the unique code of this MultiDocument transaction.\r\n\r\nA MultiDocument transaction is uniquely identified by its `accountId`, `code`, and `type`.",
        "maxLength": 45,
        "minLength": 0,
        "type": "string",
        "example": "ABC"
      },
      "type": {
        "description": "Represents the document type of this MultiDocument transaction.  For more information about\r\ndocument types, see [DocumentType](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/DocumentType/).\r\n\r\nA MultiDocument transaction is uniquely identified by its `accountId`, `code`, and `type`.",
        "enum": [
          "SalesOrder",
          "SalesInvoice",
          "PurchaseOrder",
          "PurchaseInvoice",
          "ReturnOrder",
          "ReturnInvoice",
          "InventoryTransferOrder",
          "InventoryTransferInvoice",
          "ReverseChargeOrder",
          "ReverseChargeInvoice",
          "Any"
        ],
        "type": "string",
        "example": "SalesInvoice",
        "x-enum-type": "DocumentType",
        "x-enum-description": "Represents the different types of transactions that AvaTax can process.",
        "x-enum-value-comments": {
          "SalesOrder": "Represents an estimate, or a sales order, or a quote.  \n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a sales order, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a temporary document type and is not saved in tax history.",
          "SalesInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a sales invoice, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "PurchaseOrder": "Represents an estimate, or a purchase order, or a quote.\n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a purchase order, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a temporary document type and is not saved in tax history.",
          "PurchaseInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a purchase invoice, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReturnOrder": "Represents an estimate of tax to be refunded if a refund or return is processed.\n            \n            This document type is used before a customer chooses to request a refund for a previous sale, and it\n            estimates the final amount of tax to be refunded when the refund is completed.\n            \n            For a return order, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReturnInvoice": "Represents an refund that has been finalized.\n            \n            This document type is used when a customer chooses to request a refund for a previous sale, and it\n            records the final amount of tax that has been refunded when the refund is completed.\n            \n            For a return invoice, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a permanent document and is recorded in AvaTax.\n            \n            Please note that many jurisdictions around the United States have special rules about how to report refunds\n            on a sales tax filing, and some refund transactions may be unable to file immediately due to credit netting\n            rules.",
          "InventoryTransferOrder": "Represents a proposed movement of inventory from one jurisdiction to another.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a temporary document type and is not saved in tax history.",
          "InventoryTransferInvoice": "Represents a movement of inventory from one jurisdiction to another that has been finalized.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReverseChargeOrder": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReverseChargeInvoice": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "Any": "Not a real document type.\n            \n            This value is used when querying for documents.  You can specify the type `Any` in some cases to permit the\n            system to find any document matching other criteria."
        }
      },
      "verifyTransactionDate": {
        "format": "date-time",
        "description": "Set this value if you wish to verify a match between `verifyTransactionDate` and\r\nthe `documentDate` value on the transaction recorded in AvaTax.\r\n\r\nIf you leave this field empty, we will skip verification for this field.",
        "type": "string"
      },
      "verifyTotalAmount": {
        "format": "double",
        "description": "Set this value if you wish to verify a match between `verifyTotalAmount` and\r\nthe `totalAmount` value on the transaction recorded in AvaTax.\r\n\r\nIf you leave this field empty, we will skip verification for this field.",
        "type": "number"
      },
      "verifyTotalTax": {
        "format": "double",
        "description": "Set this value if you wish to verify a match between `verifyTotalTax` and\r\nthe `totalTax` value on the transaction recorded in AvaTax.\r\n\r\nIf you leave this field empty, we will skip verification for this field.",
        "type": "number"
      }
    },
    "example": {
      "code": "ABC",
      "type": "SalesInvoice"
    },
    "x-methods-used-in": [
      "MultiDocument/VerifyMultiDocumentTransaction"
    ]
  },
  "NoticeModel": {
    "description": "Represents a letter received from a tax authority regarding tax filing.\r\nThese letters often have the warning \"Notice\" printed at the top, which is why\r\nthey are called \"Notices\".",
    "required": [
      "id",
      "companyId",
      "statusId",
      "receivedDate",
      "customerTypeId",
      "reasonId",
      "priorityId",
      "hideFromCustomer",
      "showResolutionDateToCustomer"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this notice.",
        "type": "integer",
        "readOnly": true,
        "example": 3878
      },
      "companyId": {
        "format": "int32",
        "description": "The unique ID number of the company to which this notice belongs.",
        "type": "integer",
        "example": 5714
      },
      "statusId": {
        "format": "int32",
        "description": "The status id of the notice",
        "type": "integer",
        "example": 4
      },
      "status": {
        "description": "The status of the notice",
        "type": "string",
        "readOnly": true,
        "example": "Closed - Paid"
      },
      "receivedDate": {
        "format": "date-time",
        "description": "The received date of the notice",
        "type": "string",
        "example": "2018-01-24T12:04:53.65867-08:00"
      },
      "closedDate": {
        "format": "date-time",
        "description": "The closed date of the notice",
        "type": "string",
        "example": "2018-02-13T12:04:53.65867-08:00"
      },
      "totalRemit": {
        "format": "double",
        "description": "The total remmitance amount for the notice",
        "type": "number",
        "readOnly": true,
        "example": 0
      },
      "customerTypeId": {
        "description": "NoticeCustomerTypeID can be retrieved from the definitions API",
        "enum": [
          "AvaTaxReturns",
          "StandAlone",
          "Strategic",
          "SST",
          "TrustFile"
        ],
        "type": "string",
        "example": "AvaTaxReturns",
        "x-enum-type": "NoticeCustomerType",
        "x-enum-description": "Filing Frequency types",
        "x-enum-value-comments": {
          "AvaTaxReturns": "AvaTax Returns",
          "StandAlone": "Stand Alone",
          "Strategic": "Strategic",
          "SST": "SST",
          "TrustFile": "TrustFile"
        }
      },
      "country": {
        "description": "Name or ISO 3166 code identifying the country that sent this notice.\r\n\r\nThis field supports many different country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported languages\r\n * Common alternative spellings for many countries\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListCountries`.",
        "type": "string",
        "example": "US"
      },
      "region": {
        "description": "Name or ISO 3166 code identifying the region within the country that sent this notice.\r\n\r\nThis field supports many different region identifiers:\r\n * Two and three character ISO 3166 region codes\r\n * Fully spelled out names of the region in ISO supported languages\r\n * Common alternative spellings for many regions\r\n\r\nFor a full list of all supported codes and names, please see the Definitions API `ListRegions`.",
        "type": "string",
        "example": "AZ"
      },
      "taxAuthorityId": {
        "format": "int32",
        "description": "The tax authority id of the notice",
        "type": "integer",
        "example": 208
      },
      "filingFrequency": {
        "description": "The filing frequency of the notice",
        "enum": [
          "Monthly",
          "Quarterly",
          "SemiAnnually",
          "Annually",
          "Bimonthly",
          "Occasional",
          "InverseQuarterly"
        ],
        "type": "string",
        "example": "Quarterly",
        "x-enum-type": "FilingFrequencyId",
        "x-enum-description": "Filing Frequency types",
        "x-enum-value-comments": {
          "Monthly": "File once per month",
          "Quarterly": "File once per three months",
          "SemiAnnually": "File twice per year",
          "Annually": "File once per year",
          "Bimonthly": "File every other month",
          "Occasional": "File only when there are documents to report",
          "InverseQuarterly": "File for the first two months of each quarter, then do not file on the quarterly month."
        }
      },
      "filingTypeId": {
        "description": "The filing type of the notice",
        "enum": [
          "PaperReturn",
          "ElectronicReturn",
          "SER",
          "EFTPaper",
          "PhonePaper",
          "SignatureReady",
          "EfileCheck"
        ],
        "type": "string",
        "example": "ElectronicReturn",
        "x-enum-type": "FilingTypeId",
        "x-enum-description": "A list of possible AvaFile filing types.",
        "x-enum-value-comments": {
          "PaperReturn": "Denotes the tax return is being filed on paper.",
          "ElectronicReturn": "Denotes the tax return is being filed via electronic means; excludes SST electronic filing.",
          "SER": "Denotes the tax return is an SST filing.",
          "EFTPaper": "Denotes a return is paid via EFT and filed on paper without payment.",
          "PhonePaper": "Denotes a return is paid via phone and filed on paper without payment.",
          "SignatureReady": "Denotes a return is prepared but delivered to the customer for filing and payment.",
          "EfileCheck": "Denotes a return which is filed online but paid by check."
        }
      },
      "ticketReferenceNo": {
        "description": "The ticket reference number of the notice",
        "type": "string",
        "example": "1235"
      },
      "ticketReferenceUrl": {
        "description": "The ticket reference url of the notice",
        "type": "string",
        "example": "http://www.ticketurl.com"
      },
      "salesForceCase": {
        "description": "The sales force case of the notice",
        "type": "string",
        "example": "3333"
      },
      "salesForceCaseUrl": {
        "description": "The URL to the sales force case",
        "type": "string",
        "example": "http://www.salesforcecaseurl.com"
      },
      "taxPeriod": {
        "description": "The tax period of the notice",
        "type": "string",
        "example": "200710"
      },
      "reasonId": {
        "format": "int32",
        "description": "The notice reason id",
        "type": "integer",
        "example": 10
      },
      "reason": {
        "description": "The notice reason",
        "type": "string",
        "readOnly": true,
        "example": "Unsupported Credit"
      },
      "typeId": {
        "format": "int32",
        "description": "The tax notice type id",
        "type": "integer",
        "example": 3
      },
      "type": {
        "description": "The tax notice type description",
        "type": "string"
      },
      "customerFundingOptionId": {
        "description": "The notice customer funding options",
        "enum": [
          "Pull",
          "Wire"
        ],
        "type": "string",
        "example": "Pull",
        "x-enum-type": "FundingOption",
        "x-enum-description": "Filing Frequency types",
        "x-enum-value-comments": {
          "Pull": "Pull",
          "Wire": "Wire"
        }
      },
      "priorityId": {
        "description": "The priority of the notice",
        "enum": [
          "ImmediateAttentionRequired",
          "High",
          "Normal",
          "Low"
        ],
        "type": "string",
        "example": "ImmediateAttentionRequired",
        "x-enum-type": "NoticePriorityId",
        "x-enum-description": "Filing Frequency types",
        "x-enum-value-comments": {
          "ImmediateAttentionRequired": "Immediate Attention Required",
          "High": "High",
          "Normal": "Normal",
          "Low": "Low"
        }
      },
      "customerComment": {
        "description": "Comments from the customer on this notice",
        "type": "string",
        "example": "comments"
      },
      "hideFromCustomer": {
        "description": "Indicator to hide from customer",
        "type": "boolean",
        "example": false
      },
      "expectedResolutionDate": {
        "format": "date-time",
        "description": "Expected resolution date of the notice",
        "type": "string",
        "example": "2018-02-08T12:04:53.65867-08:00"
      },
      "showResolutionDateToCustomer": {
        "description": "Indicator to show customer this resolution date",
        "type": "boolean",
        "example": false
      },
      "closedByUserId": {
        "format": "int32",
        "description": "The unique ID number of the user that closed the notice",
        "type": "integer",
        "example": 1
      },
      "createdByUserName": {
        "description": "The user who created the notice",
        "type": "string",
        "readOnly": true,
        "example": "user@compliance.com"
      },
      "ownedByUserId": {
        "format": "int32",
        "description": "The unique ID number of the user that owns the notice",
        "type": "integer",
        "example": 23
      },
      "description": {
        "description": "The description of the notice",
        "type": "string",
        "example": "description"
      },
      "avaFileFormId": {
        "format": "int32",
        "description": "The ava file form id of the notice",
        "type": "integer",
        "example": 333
      },
      "revenueContactId": {
        "format": "int32",
        "description": "The id of the revenue contact",
        "type": "integer",
        "example": 444
      },
      "complianceContactId": {
        "format": "int32",
        "description": "The id of the compliance contact",
        "type": "integer",
        "example": 555
      },
      "documentReference": {
        "description": "The document reference of the notice",
        "type": "string"
      },
      "jurisdictionName": {
        "description": "The jurisdiction name of the notice",
        "type": "string",
        "readOnly": true,
        "example": "CHANDLER"
      },
      "jurisdictionType": {
        "description": "The jurisdiction type of the notice",
        "type": "string",
        "readOnly": true,
        "example": "City"
      },
      "comments": {
        "description": "Additional comments on the notice",
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeCommentModel"
        },
        "example": [
          {
            "id": 3,
            "noticeId": 3878,
            "date": "2018-01-24T12:04:53.65867-08:00",
            "comment": "spoke to Chris payment not received need copy of check.VW",
            "commentUserId": 1,
            "commentUserName": "user@compliance.com",
            "commentTypeId": 0,
            "commentType": "Internal"
          }
        ]
      },
      "finances": {
        "description": "Finance details of the notice",
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeFinanceModel"
        },
        "example": [
          {
            "id": 3,
            "noticeId": 0,
            "noticeDate": "2018-01-24T12:04:53.65867-08:00",
            "taxDue": 6.66,
            "penalty": 0.67,
            "interest": 0.19,
            "credits": 0.06,
            "taxAbated": 0
          }
        ]
      },
      "responsibility": {
        "description": "Notice Responsibility Details",
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeResponsibilityDetailModel"
        }
      },
      "rootCause": {
        "description": "Notice Root Cause Details",
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeRootCauseDetailModel"
        }
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true,
        "example": "2018-01-19T12:04:53.65867-08:00"
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true,
        "example": 1
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true,
        "example": "2018-01-24T12:04:53.65867-08:00"
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true,
        "example": 222
      }
    },
    "example": {
      "id": 3878,
      "companyId": 5714,
      "statusId": 4,
      "status": "Closed - Paid",
      "receivedDate": "2018-01-24T12:04:53.65867-08:00",
      "closedDate": "2018-02-13T12:04:53.65867-08:00",
      "totalRemit": 0,
      "customerTypeId": "AvaTaxReturns",
      "country": "US",
      "region": "AZ",
      "taxAuthorityId": 208,
      "filingFrequency": "Quarterly",
      "filingTypeId": "ElectronicReturn",
      "ticketReferenceNo": "1235",
      "ticketReferenceUrl": "http://www.ticketurl.com",
      "salesForceCase": "3333",
      "salesForceCaseUrl": "http://www.salesforcecaseurl.com",
      "taxPeriod": "200710",
      "reasonId": 10,
      "reason": "Unsupported Credit",
      "typeId": 3,
      "customerFundingOptionId": "Pull",
      "priorityId": "ImmediateAttentionRequired",
      "customerComment": "comments",
      "hideFromCustomer": false,
      "expectedResolutionDate": "2018-02-08T12:04:53.65867-08:00",
      "showResolutionDateToCustomer": false,
      "closedByUserId": 1,
      "createdByUserName": "user@compliance.com",
      "ownedByUserId": 23,
      "description": "description",
      "avaFileFormId": 333,
      "revenueContactId": 444,
      "complianceContactId": 555,
      "jurisdictionName": "CHANDLER",
      "jurisdictionType": "City",
      "comments": [
        {
          "id": 3,
          "noticeId": 3878,
          "date": "2018-01-24T12:04:53.65867-08:00",
          "comment": "spoke to Chris payment not received need copy of check.VW",
          "commentUserId": 1,
          "commentUserName": "user@compliance.com",
          "commentTypeId": 0,
          "commentType": "Internal"
        }
      ],
      "finances": [
        {
          "id": 3,
          "noticeId": 0,
          "noticeDate": "2018-01-24T12:04:53.65867-08:00",
          "taxDue": 6.66,
          "penalty": 0.67,
          "interest": 0.19,
          "credits": 0.06,
          "taxAbated": 0
        }
      ],
      "createdDate": "2018-01-19T12:04:53.65867-08:00",
      "createdUserId": 1,
      "modifiedDate": "2018-01-24T12:04:53.65867-08:00",
      "modifiedUserId": 222
    },
    "x-methods-used-in": [
      "Notices/CreateNotices",
      "Notices/GetNotice",
      "Notices/UpdateNotice"
    ]
  },
  "NoticeCommentModel": {
    "description": "Represents communication between Avalara and the company regarding the processing of a tax notice.",
    "required": [
      "noticeId",
      "commentType"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this notice.",
        "type": "integer",
        "readOnly": true,
        "example": 1123
      },
      "noticeId": {
        "format": "int32",
        "description": "The ID of the notice this comment is attached too",
        "type": "integer",
        "example": 12345
      },
      "date": {
        "format": "date-time",
        "description": "The date this comment was entered",
        "type": "string",
        "example": "2018-01-24T12:04:53.6899167-08:00"
      },
      "comment": {
        "description": "TaxNoticeComment",
        "type": "string",
        "example": "comment"
      },
      "commentUserId": {
        "format": "int32",
        "description": "TaxNoticeCommentUserId",
        "type": "integer",
        "example": 0
      },
      "commentUserName": {
        "description": "TaxNoticeCommentUserName",
        "type": "string",
        "readOnly": true,
        "example": "complianceUser"
      },
      "commentTypeId": {
        "format": "int32",
        "description": "taxNoticeCommentTypeId",
        "type": "integer",
        "example": 0
      },
      "commentType": {
        "description": "taxNoticeCommentType",
        "enum": [
          "Internal",
          "Customer"
        ],
        "type": "string",
        "example": "Internal",
        "x-enum-type": "CommentType",
        "x-enum-description": "Comment Types",
        "x-enum-value-comments": {
          "Internal": "Internal comments are those comments only intended to be for compliance users",
          "Customer": "Customer comments are those comments that both compliance and the customer can read"
        }
      },
      "commentLink": {
        "description": "TaxNoticeCommentLink",
        "type": "string",
        "example": "www.avalara.com"
      },
      "taxNoticeFileName": {
        "description": "TaxNoticeFileName",
        "type": "string",
        "example": "xyz.txt"
      },
      "resourceFileId": {
        "format": "int64",
        "description": "resourceFileId",
        "type": "integer"
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      },
      "attachmentUploadRequest": {
        "$ref": "#/definitions/ResourceFileUploadRequestModel",
        "description": "An attachment to the detail",
        "example": {
          "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
          "username": "test.user",
          "accountId": 5555,
          "companyId": 66666,
          "name": "nameoffile.txt",
          "resourceFileTypeId": 0,
          "length": 333
        }
      }
    },
    "example": {
      "id": 1123,
      "noticeId": 12345,
      "date": "2018-01-24T12:04:53.6899167-08:00",
      "comment": "comment",
      "commentUserId": 0,
      "commentUserName": "complianceUser",
      "commentTypeId": 0,
      "commentType": "Internal",
      "commentLink": "www.avalara.com",
      "taxNoticeFileName": "xyz.txt",
      "attachmentUploadRequest": {
        "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
        "username": "test.user",
        "accountId": 5555,
        "companyId": 66666,
        "name": "nameoffile.txt",
        "resourceFileTypeId": 0,
        "length": 333
      }
    },
    "x-methods-used-in": [
      "Notices/CreateNoticeComment"
    ]
  },
  "NoticeFinanceModel": {
    "description": "Represents estimated financial results from responding to a tax notice.",
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "noticeId": {
        "format": "int32",
        "description": "",
        "type": "integer",
        "readOnly": true,
        "example": 12345
      },
      "noticeDate": {
        "format": "date-time",
        "description": "",
        "type": "string",
        "example": "2018-01-24T12:04:53.7055353-08:00"
      },
      "dueDate": {
        "format": "date-time",
        "description": "",
        "type": "string",
        "example": "2018-02-07T12:04:53.7055353-08:00"
      },
      "noticeNumber": {
        "description": "",
        "type": "string",
        "example": "3x3215"
      },
      "taxDue": {
        "format": "double",
        "description": "",
        "type": "number",
        "example": 99.98
      },
      "penalty": {
        "format": "double",
        "description": "",
        "type": "number",
        "example": 56.98
      },
      "interest": {
        "format": "double",
        "description": "",
        "type": "number",
        "example": 88.98
      },
      "credits": {
        "format": "double",
        "description": "",
        "type": "number",
        "example": 85.98
      },
      "taxAbated": {
        "format": "double",
        "description": "",
        "type": "number",
        "example": 45.98
      },
      "customerPenalty": {
        "format": "double",
        "description": "",
        "type": "number",
        "example": 23.98
      },
      "customerInterest": {
        "format": "double",
        "description": "",
        "type": "number",
        "example": 13.98
      },
      "cspFeeRefund": {
        "format": "double",
        "description": "",
        "type": "number",
        "example": 10.98
      },
      "fileName": {
        "description": "resourceFileId",
        "type": "string"
      },
      "resourceFileId": {
        "format": "int64",
        "description": "resourceFileId",
        "type": "integer"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The date when this record was created.",
        "type": "string",
        "readOnly": true
      },
      "createdUserId": {
        "format": "int32",
        "description": "The User ID of the user who created this record.",
        "type": "integer",
        "readOnly": true
      },
      "modifiedDate": {
        "format": "date-time",
        "description": "The date/time when this record was last modified.",
        "type": "string",
        "readOnly": true
      },
      "modifiedUserId": {
        "format": "int32",
        "description": "The user ID of the user who last modified this record.",
        "type": "integer",
        "readOnly": true
      },
      "attachmentUploadRequest": {
        "$ref": "#/definitions/ResourceFileUploadRequestModel",
        "description": "An attachment to the finance detail",
        "example": {
          "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
          "username": "test.user",
          "accountId": 5555,
          "companyId": 66666,
          "name": "nameoffile.txt",
          "resourceFileTypeId": 0,
          "length": 333
        }
      }
    },
    "example": {
      "id": 0,
      "noticeId": 12345,
      "noticeDate": "2018-01-24T12:04:53.7055353-08:00",
      "dueDate": "2018-02-07T12:04:53.7055353-08:00",
      "noticeNumber": "3x3215",
      "taxDue": 99.98,
      "penalty": 56.98,
      "interest": 88.98,
      "credits": 85.98,
      "taxAbated": 45.98,
      "customerPenalty": 23.98,
      "customerInterest": 13.98,
      "cspFeeRefund": 10.98,
      "attachmentUploadRequest": {
        "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
        "username": "test.user",
        "accountId": 5555,
        "companyId": 66666,
        "name": "nameoffile.txt",
        "resourceFileTypeId": 0,
        "length": 333
      }
    },
    "x-methods-used-in": [
      "Notices/CreateNoticeFinanceDetails"
    ]
  },
  "NoticeResponsibilityDetailModel": {
    "description": "NoticeResponsibility Model",
    "required": [
      "noticeId",
      "taxNoticeResponsibilityId"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this filing frequency.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "noticeId": {
        "format": "int32",
        "description": "TaxNoticeId",
        "type": "integer",
        "example": 4
      },
      "taxNoticeResponsibilityId": {
        "format": "int32",
        "description": "TaxNoticeResponsibilityId",
        "type": "integer",
        "example": 4
      },
      "description": {
        "description": "The description name of this filing frequency",
        "type": "string",
        "readOnly": true,
        "example": "Avalara-Compliance"
      }
    },
    "example": {
      "id": 0,
      "noticeId": 4,
      "taxNoticeResponsibilityId": 4,
      "description": "Avalara-Compliance"
    },
    "x-methods-used-in": [
      "Notices/CreateNoticeResponsibilities"
    ]
  },
  "NoticeRootCauseDetailModel": {
    "description": "NoticeRootCause Model",
    "required": [
      "id",
      "noticeId",
      "taxNoticeRootCauseId"
    ],
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "description": "The unique ID number of this filing frequency.",
        "type": "integer",
        "readOnly": true,
        "example": 0
      },
      "noticeId": {
        "format": "int32",
        "description": "TaxNoticeId",
        "type": "integer",
        "example": 4
      },
      "taxNoticeRootCauseId": {
        "format": "int32",
        "description": "TaxNoticeRootCauseId",
        "type": "integer",
        "example": 4
      },
      "description": {
        "description": "The description name of this root cause",
        "type": "string",
        "readOnly": true,
        "example": "Processor error-Return not submitted"
      }
    },
    "example": {
      "id": 0,
      "noticeId": 4,
      "taxNoticeRootCauseId": 4,
      "description": "Processor error-Return not submitted"
    },
    "x-methods-used-in": [
      "Notices/CreateNoticeRootCauses"
    ]
  },
  "ResourceFileUploadRequestModel": {
    "description": "A request to upload a file to Resource Files",
    "required": [
      "content"
    ],
    "type": "object",
    "properties": {
      "content": {
        "format": "byte",
        "description": "This stream contains the bytes of the file being uploaded.",
        "type": "string",
        "example": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg=="
      },
      "username": {
        "description": "The username adding the file",
        "type": "string",
        "example": "test.user"
      },
      "accountId": {
        "format": "int32",
        "description": "The account ID to which this file will be attached.",
        "type": "integer",
        "example": 5555
      },
      "companyId": {
        "format": "int32",
        "description": "The company ID to which this file will be attached.",
        "type": "integer",
        "example": 66666
      },
      "name": {
        "description": "The original name of this file.",
        "type": "string",
        "example": "nameoffile.txt"
      },
      "resourceFileTypeId": {
        "format": "int32",
        "description": "The resource type ID of this file.",
        "type": "integer",
        "example": 0
      },
      "length": {
        "format": "int64",
        "description": "Length of the file in bytes.",
        "type": "integer",
        "example": 333
      }
    },
    "example": {
      "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
      "username": "test.user",
      "accountId": 5555,
      "companyId": 66666,
      "name": "nameoffile.txt",
      "resourceFileTypeId": 0,
      "length": 333
    },
    "x-methods-used-in": [
      "Notices/UploadAttachment"
    ]
  },
  "FetchResult[NoticeModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Notices/ListNoticesByCompany",
      "Notices/QueryNotices"
    ]
  },
  "FetchResult[NoticeCommentModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeCommentModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Notices/GetNoticeComments"
    ]
  },
  "FetchResult[NoticeFinanceModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeFinanceModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Notices/GetNoticeFinanceDetails"
    ]
  },
  "FetchResult[NoticeResponsibilityDetailModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeResponsibilityDetailModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Notices/GetNoticeResponsibilities"
    ]
  },
  "FetchResult[NoticeRootCauseDetailModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/NoticeRootCauseDetailModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Notices/GetNoticeRootCauses"
    ]
  },
  "PasswordChangeModel": {
    "description": "Password Change Model",
    "required": [
      "oldPassword",
      "newPassword"
    ],
    "type": "object",
    "properties": {
      "oldPassword": {
        "description": "Old Password",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "MyOldPassword123!"
      },
      "newPassword": {
        "description": "New Password",
        "type": "string",
        "example": "ANewPassword567:)"
      }
    },
    "example": {
      "oldPassword": "MyOldPassword123!",
      "newPassword": "ANewPassword567:)"
    },
    "x-methods-used-in": [
      "Registrar/ChangePassword"
    ]
  },
  "SetPasswordModel": {
    "description": "Set Password Model",
    "required": [
      "newPassword"
    ],
    "type": "object",
    "properties": {
      "newPassword": {
        "description": "New Password",
        "type": "string",
        "example": "NewPassword789~~!"
      }
    },
    "example": {
      "newPassword": "NewPassword789~~!"
    },
    "x-methods-used-in": [
      "Registrar/ResetPassword"
    ]
  },
  "ExportDocumentLineModel": {
    "description": "An input model for executing a report detailed to the document line level",
    "type": "object",
    "properties": {
      "format": {
        "description": "The output format: CSV, XML, etc. If no preference, report will be in CSV format.",
        "enum": [
          "CSV",
          "XML"
        ],
        "type": "string",
        "example": "CSV",
        "x-enum-type": "ReportFormat",
        "x-enum-description": "Different types of formats allowed for exporting a report",
        "x-enum-value-comments": {
          "CSV": "The Comma Separated Values file format",
          "XML": "The Extensible Markup Language file format"
        }
      },
      "startDate": {
        "format": "date-time",
        "description": "The start date filter for report execution. If no date provided, same date of last month will be used as the startDate.",
        "type": "string",
        "example": "2017-12-24T00:00:00-08:00"
      },
      "endDate": {
        "format": "date-time",
        "description": "The end date filter for report execution. If no date provided, today's date will be used as the endDate.",
        "type": "string",
        "example": "2018-01-24T00:00:00-08:00"
      },
      "country": {
        "description": "The transactions in the country you wish to run a report:\r\nuse \"ALL\" for all countries\r\nuse \"ALL Non-US\" for all international countries\r\nor use a single 2-char ISO country code",
        "type": "string",
        "example": "US"
      },
      "state": {
        "description": "The state associated with the transactions you wish to run a report on: use \"ALL\" for all states.",
        "type": "string",
        "example": "All"
      },
      "dateFilter": {
        "description": "The type of date to filter your transactions",
        "enum": [
          "DocumentDate",
          "PaymentDate",
          "ReportingDate",
          "TaxDate"
        ],
        "type": "string",
        "example": "DocumentDate",
        "x-enum-type": "ReportDateFilter",
        "x-enum-description": "The date filter type for report\n            \"RD\" for Reporting Date, \"DD\" for Document Date, \"TD\" for Tax Date, \"PD\" for Payment Date",
        "x-enum-value-comments": {
          "ReportingDate": "The date when the transaction is added to report",
          "DocumentDate": "The date when the transaction is posted",
          "TaxDate": "The date when the transaction is being taxed",
          "PaymentDate": "The date when the transaction is paid for"
        }
      },
      "docType": {
        "description": "The transaction type you want to run a report on",
        "enum": [
          "ConsumerUse",
          "Sales"
        ],
        "type": "string",
        "example": "Sales",
        "x-enum-type": "ReportDocType",
        "x-enum-description": "The output DocumentType for a report",
        "x-enum-value-comments": {
          "Sales": "Output all Sales tax transactions in the report",
          "ConsumerUse": "Output all ConsumerUse tax transactions in the report"
        }
      },
      "dateFormat": {
        "description": "Format of dates in your rendered report. Example: \"MM/dd/yyyy\"",
        "type": "string",
        "example": "MM/dd/yyyy"
      },
      "culture": {
        "description": "In which culture your report is produced with. Example: \"en-US\"",
        "type": "string",
        "example": "en-US"
      },
      "currencyCode": {
        "description": "The currency your report is displayed in. Example: \"USD\"",
        "type": "string",
        "example": "USD"
      }
    },
    "example": {
      "format": "CSV",
      "startDate": "2017-12-24T00:00:00-08:00",
      "endDate": "2018-01-24T00:00:00-08:00",
      "country": "US",
      "state": "All",
      "dateFilter": "DocumentDate",
      "docType": "Sales",
      "dateFormat": "MM/dd/yyyy",
      "culture": "en-US",
      "currencyCode": "USD"
    },
    "x-methods-used-in": [
      "Reports/ExportDocumentLine",
      "Reports/InitiateExportDocumentLineReport"
    ]
  },
  "ReportModel": {
    "description": "A model for displaying report task metadata",
    "type": "object",
    "properties": {
      "id": {
        "format": "int64",
        "description": "The unique identifier of the report task",
        "type": "integer",
        "example": 1
      },
      "accountId": {
        "format": "int32",
        "description": "The ID of the account the reported transactions are from",
        "type": "integer",
        "example": 2087654354
      },
      "companyId": {
        "format": "int32",
        "description": "The ID of the company the reported transactions are from",
        "type": "integer",
        "example": 2087654354
      },
      "reportType": {
        "description": "The type of the report: ExportDocumentLine, etc.",
        "type": "string",
        "example": "ExportDocumentLine"
      },
      "parameters": {
        "$ref": "#/definitions/ReportParametersModel",
        "description": "The parametes used to build the report",
        "example": {
          "startDate": "2017-12-24T00:00:00-08:00",
          "endDate": "2018-01-24T00:00:00-08:00",
          "country": "US",
          "state": "All",
          "dateFilter": "DD",
          "docType": "S",
          "dateFormat": "MM/dd/yyyy",
          "culture": "en-US",
          "currencyCode": "USD"
        }
      },
      "status": {
        "description": "The current status of the report building task",
        "type": "string",
        "example": "InQueue"
      },
      "size": {
        "format": "int32",
        "description": "The size of the report file, if available",
        "type": "integer"
      },
      "format": {
        "description": "The format of the report file",
        "type": "string",
        "example": "CSV"
      },
      "file": {
        "description": "The name of the report file, if available",
        "type": "string",
        "example": "2087654354_2087654354_1_ExportDocumentLine.CSV"
      },
      "createdDate": {
        "format": "date-time",
        "description": "The time when the report task was initiated",
        "type": "string",
        "example": "2018-01-24T00:00:00-08:00"
      },
      "createdUserId": {
        "format": "int32",
        "description": "The Id of the user who initiated this task",
        "type": "integer",
        "example": 0
      },
      "createdUser": {
        "description": "The userName of the user who initiated the report task",
        "type": "string"
      },
      "completedDate": {
        "format": "date-time",
        "description": "The time when the report was finished building, if completed",
        "type": "string"
      }
    },
    "example": {
      "id": 1,
      "accountId": 2087654354,
      "companyId": 2087654354,
      "reportType": "ExportDocumentLine",
      "parameters": {
        "startDate": "2017-12-24T00:00:00-08:00",
        "endDate": "2018-01-24T00:00:00-08:00",
        "country": "US",
        "state": "All",
        "dateFilter": "DD",
        "docType": "S",
        "dateFormat": "MM/dd/yyyy",
        "culture": "en-US",
        "currencyCode": "USD"
      },
      "status": "InQueue",
      "format": "CSV",
      "file": "2087654354_2087654354_1_ExportDocumentLine.CSV",
      "createdDate": "2018-01-24T00:00:00-08:00",
      "createdUserId": 0
    },
    "x-methods-used-in": [
      "Reports/InitiateExportDocumentLineReport",
      "Reports/GetReport"
    ]
  },
  "ReportParametersModel": {
    "description": "The output model for report parameter definitions",
    "type": "object",
    "properties": {
      "startDate": {
        "format": "date-time",
        "description": "The start date filter used for your report",
        "type": "string",
        "example": "2017-12-24T00:00:00-08:00"
      },
      "endDate": {
        "format": "date-time",
        "description": "The end date filter used for your report",
        "type": "string",
        "example": "2018-01-24T00:00:00-08:00"
      },
      "country": {
        "description": "The country filter used for your report",
        "type": "string",
        "example": "US"
      },
      "state": {
        "description": "The state filter used for your report",
        "type": "string",
        "example": "All"
      },
      "dateFilter": {
        "description": "The date type filter used for your report",
        "type": "string",
        "example": "DD"
      },
      "docType": {
        "description": "The doc type filter used for your report",
        "type": "string",
        "example": "S"
      },
      "dateFormat": {
        "description": "The date format used for your report",
        "type": "string",
        "example": "MM/dd/yyyy"
      },
      "culture": {
        "description": "The culture used your report",
        "type": "string",
        "example": "en-US"
      },
      "currencyCode": {
        "description": "The currency code used for your report",
        "type": "string",
        "example": "USD"
      }
    },
    "example": {
      "startDate": "2017-12-24T00:00:00-08:00",
      "endDate": "2018-01-24T00:00:00-08:00",
      "country": "US",
      "state": "All",
      "dateFilter": "DD",
      "docType": "S",
      "dateFormat": "MM/dd/yyyy",
      "culture": "en-US",
      "currencyCode": "USD"
    },
    "x-methods-used-in": []
  },
  "FetchResult[ReportModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ReportModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Reports/ListReports"
    ]
  },
  "FetchResult[SettingModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/SettingModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Settings/ListSettingsByCompany",
      "Settings/QuerySettings"
    ]
  },
  "FetchResult[SubscriptionModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/SubscriptionModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Subscriptions/ListSubscriptionsByAccount",
      "Subscriptions/QuerySubscriptions",
      "Utilities/ListMySubscriptions"
    ]
  },
  "PointOfSaleDataRequestModel": {
    "description": "Point-of-Sale Data Request Model",
    "required": [
      "companyCode"
    ],
    "type": "object",
    "properties": {
      "companyCode": {
        "description": "A unique code that references a company within your account.",
        "type": "string",
        "example": "DEFAULT"
      },
      "documentDate": {
        "format": "date-time",
        "description": "The date associated with the response content. Default is current date. This field can be used to backdate or postdate the response content.",
        "type": "string",
        "example": "2018-01-24T20:04:53.8461642Z"
      },
      "responseType": {
        "description": "The format of your response. Formats include JSON, CSV, and XML.",
        "enum": [
          "Json",
          "Csv",
          "Xml"
        ],
        "type": "string",
        "example": "Json",
        "x-enum-type": "PointOfSaleFileType",
        "x-enum-description": "Type of file request",
        "x-enum-value-comments": {
          "Json": "File is in Javascript Object Notation format",
          "Csv": "File is in Comma Separated Values format",
          "Xml": "File is in Extended Markup Language format"
        }
      },
      "taxCodes": {
        "description": "A list of tax codes to include in this point-of-sale file. If no tax codes are specified, response will include all distinct tax codes associated with the Items within your company.",
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "P0000000"
        ]
      },
      "locationCodes": {
        "description": "A list of location codes to include in this point-of-sale file. If no location codes are specified, response will include all locations within your company.",
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "DEFAULT"
        ]
      },
      "includeJurisCodes": {
        "description": "Set this value to true to include Juris Code in the response.",
        "type": "boolean",
        "example": true
      },
      "partnerId": {
        "description": "A unique code assoicated with the Partner you may be working with. If you are not working with a Partner or your Partner has not provided you an ID, leave null.",
        "enum": [
          "DMA",
          "AX7"
        ],
        "type": "string",
        "x-enum-type": "PointOfSalePartnerId",
        "x-enum-description": "",
        "x-enum-value-comments": {}
      }
    },
    "example": {
      "companyCode": "DEFAULT",
      "documentDate": "2018-01-24T20:04:53.8461642Z",
      "responseType": "Json",
      "taxCodes": [
        "P0000000"
      ],
      "locationCodes": [
        "DEFAULT"
      ],
      "includeJurisCodes": true
    },
    "x-methods-used-in": [
      "TaxContent/BuildTaxContentFile"
    ]
  },
  "TaxRateModel": {
    "description": "Contains information about the general tangible personal property sales tax rates for this jurisdiction.\r\n\r\nThis rate is calculated by making assumptions about the tax calculation process.  It does not account for:\r\n\r\n* Sourcing rules, such as origin-and-destination based transactions.\r\n* Product taxability rules, such as different tax rates for different product types.\r\n* Nexus declarations, where some customers are not obligated to collect tax in specific jurisdictions.\r\n* Tax thresholds and rate differences by amounts.\r\n* And many more custom use cases.\r\n\r\nTo upgrade to a fully-featured and accurate tax process that handles these scenarios correctly, please\r\ncontact Avalara to upgrade to AvaTax!",
    "type": "object",
    "properties": {
      "totalRate": {
        "format": "double",
        "description": "The total sales tax rate for general tangible personal property sold at a retail point of presence\r\nin this jurisdiction on this date.",
        "type": "number",
        "example": 0.0625
      },
      "rates": {
        "description": "The list of individual rate elements for general tangible personal property sold at a retail\r\npoint of presence in this jurisdiction on this date.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/RateModel"
        },
        "example": [
          {
            "rate": 0.0625,
            "name": "CALIFORNIA",
            "type": "State"
          }
        ]
      }
    },
    "example": {
      "totalRate": 0.0625,
      "rates": [
        {
          "rate": 0.0625,
          "name": "CALIFORNIA",
          "type": "State"
        }
      ]
    },
    "x-methods-used-in": [
      "Free/TaxRatesByAddress",
      "Free/TaxRatesByPostalCode"
    ]
  },
  "RateModel": {
    "description": "Indicates one element of a sales tax rate.",
    "type": "object",
    "properties": {
      "rate": {
        "format": "double",
        "description": "The sales tax rate for general tangible personal property in this jurisdiction.",
        "type": "number",
        "example": 0.0625
      },
      "name": {
        "description": "A readable name of the tax or taxing jurisdiction related to this tax rate.",
        "type": "string",
        "example": "CALIFORNIA"
      },
      "type": {
        "description": "The type of jurisdiction associated with this tax rate.",
        "enum": [
          "Country",
          "Composite",
          "State",
          "County",
          "City",
          "Special"
        ],
        "type": "string",
        "example": "State",
        "x-enum-type": "JurisdictionType",
        "x-enum-description": "Jurisdiction Type",
        "x-enum-value-comments": {
          "Country": "Country",
          "Composite": "Deprecated",
          "State": "State",
          "County": "County",
          "City": "City",
          "Special": "Special Tax Jurisdiction"
        }
      }
    },
    "example": {
      "rate": 0.0625,
      "name": "CALIFORNIA",
      "type": "State"
    },
    "x-methods-used-in": []
  },
  "FetchResult[TaxRuleModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxRuleModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "TaxRules/ListTaxRules",
      "TaxRules/QueryTaxRules"
    ]
  },
  "FetchResult[TransactionModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/TransactionModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Transactions/ListTransactionsByCompany"
    ]
  },
  "AdjustTransactionModel": {
    "description": "Replace an existing transaction recorded in AvaTax with a new one.",
    "required": [
      "adjustmentReason",
      "newTransaction"
    ],
    "type": "object",
    "properties": {
      "adjustmentReason": {
        "description": "A reason code indicating why this adjustment was made",
        "enum": [
          "NotAdjusted",
          "SourcingIssue",
          "ReconciledWithGeneralLedger",
          "ExemptCertApplied",
          "PriceAdjusted",
          "ProductReturned",
          "ProductExchanged",
          "BadDebt",
          "Other",
          "Offline"
        ],
        "type": "string",
        "example": "PriceAdjusted",
        "x-enum-type": "AdjustmentReason",
        "x-enum-description": "Indicates the type of adjustment that was performed on a transaction",
        "x-enum-value-comments": {
          "NotAdjusted": "The transaction has not been adjusted",
          "SourcingIssue": "A sourcing issue existed which caused the transaction to be adjusted",
          "ReconciledWithGeneralLedger": "Transaction was adjusted to reconcile it with a general ledger",
          "ExemptCertApplied": "Transaction was adjusted after an exemption certificate was applied",
          "PriceAdjusted": "Transaction was adjusted when the price of an item changed",
          "ProductReturned": "Transaction was adjusted due to a product return",
          "ProductExchanged": "Transaction was adjusted due to a product exchange",
          "BadDebt": "Transaction was adjusted due to bad or uncollectable debt",
          "Other": "Transaction was adjusted for another reason not specified",
          "Offline": "Offline"
        }
      },
      "adjustmentDescription": {
        "description": "If the AdjustmentReason is \"Other\", specify the reason here.\r\n\r\nThis is required when the AdjustmentReason is 8 (Other).",
        "type": "string",
        "example": "Price drop before shipping"
      },
      "newTransaction": {
        "$ref": "#/definitions/CreateTransactionModel",
        "description": "Replace the current transaction with tax data calculated for this new transaction",
        "example": {
          "lines": [
            {
              "number": "1",
              "quantity": 1,
              "amount": 100,
              "taxCode": "PS081282",
              "itemCode": "Y0001",
              "description": "Yarn"
            }
          ],
          "type": "SalesInvoice",
          "companyCode": "DEFAULT",
          "date": "2018-01-24",
          "customerCode": "ABC",
          "purchaseOrderNo": "2018-01-24-001",
          "addresses": {
            "singleLocation": {
              "line1": "2000 Main Street",
              "city": "Irvine",
              "region": "CA",
              "country": "US",
              "postalCode": "92614"
            }
          },
          "commit": true,
          "currencyCode": "USD",
          "description": "Yarn"
        }
      }
    },
    "example": {
      "adjustmentReason": "PriceAdjusted",
      "adjustmentDescription": "Price drop before shipping",
      "newTransaction": {
        "lines": [
          {
            "number": "1",
            "quantity": 1,
            "amount": 100,
            "taxCode": "PS081282",
            "itemCode": "Y0001",
            "description": "Yarn"
          }
        ],
        "type": "SalesInvoice",
        "companyCode": "DEFAULT",
        "date": "2018-01-24",
        "customerCode": "ABC",
        "purchaseOrderNo": "2018-01-24-001",
        "addresses": {
          "singleLocation": {
            "line1": "2000 Main Street",
            "city": "Irvine",
            "region": "CA",
            "country": "US",
            "postalCode": "92614"
          }
        },
        "commit": true,
        "currencyCode": "USD",
        "description": "Yarn"
      }
    },
    "x-methods-used-in": [
      "Transactions/AdjustTransaction"
    ]
  },
  "CreateTransactionModel": {
    "description": "Create a transaction",
    "required": [
      "lines",
      "date",
      "customerCode"
    ],
    "type": "object",
    "properties": {
      "code": {
        "description": "The internal reference code used by the client application.  This is used for operations such as\r\nGet, Adjust, Settle, and Void.  If you leave the transaction code blank, a GUID will be assigned to each transaction.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "lines": {
        "description": "A list of line items that will appear on this transaction.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/LineItemModel"
        },
        "example": [
          {
            "number": "1",
            "quantity": 1,
            "amount": 100,
            "taxCode": "PS081282",
            "itemCode": "Y0001",
            "description": "Yarn"
          }
        ]
      },
      "type": {
        "description": "Specifies the type of document to create.  A document type ending with `Invoice` is a permanent transaction\r\nthat will be recorded in AvaTax.  A document type ending with `Order` is a temporary estimate that will not\r\nbe preserved.\r\n\r\nIf you omit this value, the API will assume you want to create a `SalesOrder`.",
        "enum": [
          "SalesOrder",
          "SalesInvoice",
          "PurchaseOrder",
          "PurchaseInvoice",
          "ReturnOrder",
          "ReturnInvoice",
          "InventoryTransferOrder",
          "InventoryTransferInvoice",
          "ReverseChargeOrder",
          "ReverseChargeInvoice",
          "Any"
        ],
        "type": "string",
        "example": "SalesInvoice",
        "x-enum-type": "DocumentType",
        "x-enum-description": "Represents the different types of transactions that AvaTax can process.",
        "x-enum-value-comments": {
          "SalesOrder": "Represents an estimate, or a sales order, or a quote.  \n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a sales order, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a temporary document type and is not saved in tax history.",
          "SalesInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a sales invoice, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "PurchaseOrder": "Represents an estimate, or a purchase order, or a quote.\n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a purchase order, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a temporary document type and is not saved in tax history.",
          "PurchaseInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a purchase invoice, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReturnOrder": "Represents an estimate of tax to be refunded if a refund or return is processed.\n            \n            This document type is used before a customer chooses to request a refund for a previous sale, and it\n            estimates the final amount of tax to be refunded when the refund is completed.\n            \n            For a return order, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReturnInvoice": "Represents an refund that has been finalized.\n            \n            This document type is used when a customer chooses to request a refund for a previous sale, and it\n            records the final amount of tax that has been refunded when the refund is completed.\n            \n            For a return invoice, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a permanent document and is recorded in AvaTax.\n            \n            Please note that many jurisdictions around the United States have special rules about how to report refunds\n            on a sales tax filing, and some refund transactions may be unable to file immediately due to credit netting\n            rules.",
          "InventoryTransferOrder": "Represents a proposed movement of inventory from one jurisdiction to another.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a temporary document type and is not saved in tax history.",
          "InventoryTransferInvoice": "Represents a movement of inventory from one jurisdiction to another that has been finalized.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReverseChargeOrder": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReverseChargeInvoice": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "Any": "Not a real document type.\n            \n            This value is used when querying for documents.  You can specify the type `Any` in some cases to permit the\n            system to find any document matching other criteria."
        }
      },
      "companyCode": {
        "description": "Company Code - Specify the code of the company creating this transaction here.  If you leave this value null,\r\nyour account's default company will be used instead.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "DEFAULT"
      },
      "date": {
        "format": "date-time",
        "description": "Transaction Date - The date on the invoice, purchase order, etc.\r\n\r\nBy default, this date will be used to calculate the tax rates for the transaction.  If you wish to use a\r\ndifferent date to calculate tax rates, please specify a `taxOverride` of type `taxDate`.",
        "type": "string",
        "example": "2018-01-24T00:00:00-08:00",
        "x-date-type": "date-only"
      },
      "salespersonCode": {
        "description": "Salesperson Code - The client application salesperson reference code.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "customerCode": {
        "description": "Customer Code - The client application customer reference code.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "ABC"
      },
      "customerUsageType": {
        "description": "DEPRECATED - Customer Usage Type - The client application customer or usage type.  For a list of \r\navailable usage types, see `/api/v2/definitions/entityusecodes`.\r\nPlease use entityUseCode instead.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "entityUseCode": {
        "description": "Entity Use Code - The client application customer or usage type.  For a list of \r\navailable usage types, see `/api/v2/definitions/entityusecodes`.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "discount": {
        "format": "double",
        "description": "Discount - The discount amount to apply to the document.  This value will be applied only to lines\r\nthat have the `discounted` flag set to true.  If no lines have `discounted` set to true, this discount\r\ncannot be applied.",
        "type": "number"
      },
      "purchaseOrderNo": {
        "description": "Purchase Order Number for this document.\r\n\r\nThis is required for single use exemption certificates to match the order and invoice with the certificate.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "2018-01-24-001"
      },
      "exemptionNo": {
        "description": "Exemption Number for this document.\r\n\r\nIf you specify an exemption number for this document, this document will be considered exempt, and you\r\nmay be asked to provide proof of this exemption certificate in the event that you are asked by an auditor\r\nto verify your exemptions.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "addresses": {
        "$ref": "#/definitions/AddressesModel",
        "description": "Default addresses for all lines in this document.  \r\n\r\nThese addresses are the default values that will be used for any lines that do not have their own\r\naddress information.  If you specify addresses for a line, then no default addresses will be loaded\r\nfor that line.",
        "example": {
          "singleLocation": {
            "line1": "2000 Main Street",
            "city": "Irvine",
            "region": "CA",
            "country": "US",
            "postalCode": "92614"
          }
        }
      },
      "parameters": {
        "$ref": "#/definitions/CreateTransactionModel > Parameters"
      },
      "referenceCode": {
        "description": "Customer-provided Reference Code with information about this transaction.\r\n\r\nThis field could be used to reference the original document for a return invoice, or for any other\r\nreference purpose.",
        "maxLength": 1024,
        "minLength": 0,
        "type": "string"
      },
      "reportingLocationCode": {
        "description": "Sets the sale location code (Outlet ID) for reporting this document to the tax authority.\r\n\r\nThis value is used by Avalara Managed Returns to group documents together by reporting locations\r\nfor tax authorities that require location-based reporting.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "commit": {
        "description": "Causes the document to be committed if true.  This option is only applicable for invoice document \r\ntypes, not orders.",
        "type": "boolean",
        "example": true
      },
      "batchCode": {
        "description": "BatchCode for batch operations.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "taxOverride": {
        "$ref": "#/definitions/TaxOverrideModel",
        "description": "Specifies a tax override for the entire document"
      },
      "currencyCode": {
        "description": "The three-character ISO 4217 currency code for this transaction.",
        "maxLength": 3,
        "minLength": 0,
        "type": "string",
        "example": "USD"
      },
      "serviceMode": {
        "description": "Specifies whether the tax calculation is handled Local, Remote, or Automatic (default).  This only \r\napplies when using an AvaLocal server.",
        "enum": [
          "Automatic",
          "Local",
          "Remote"
        ],
        "type": "string",
        "x-enum-type": "ServiceMode",
        "x-enum-description": "Service modes for tax calculation when using an AvaLocal server.",
        "x-enum-value-comments": {
          "Automatic": "Automatically use local or remote (default)",
          "Local": "Local server only",
          "Remote": "Remote server only"
        }
      },
      "exchangeRate": {
        "format": "double",
        "description": "Currency exchange rate from this transaction to the company base currency.\r\n    \r\nThis only needs to be set if the transaction currency is different than the company base currency.\r\nIt defaults to 1.0.",
        "type": "number"
      },
      "exchangeRateEffectiveDate": {
        "format": "date-time",
        "description": "Effective date of the exchange rate.",
        "type": "string",
        "x-date-type": "date-only"
      },
      "posLaneCode": {
        "description": "Sets the Point of Sale Lane Code sent by the User for this document.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "businessIdentificationNo": {
        "description": "VAT business identification number for the customer for this transaction.  This number will be used for all lines \r\nin the transaction, except for those lines where you have defined a different business identification number.\r\n\r\nIf you specify a VAT business identification number for the customer in this transaction and you have also set up\r\na business identification number for your company during company setup, this transaction will be treated as a \r\nbusiness-to-business transaction for VAT purposes and it will be calculated according to VAT tax rules.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "isSellerImporterOfRecord": {
        "description": "Specifies if the transaction should have value-added and cross-border taxes calculated with the seller as the importer of record.\r\n\r\nSome taxes only apply if the seller is the importer of record for a product.  In cases where companies are working together to\r\nship products, there may be mutual agreement as to which company is the entity designated as importer of record.  The importer\r\nof record will then be the company designated to pay taxes marked as being obligated to the importer of record.\r\n\r\nSet this value to `true` to consider your company as the importer of record and collect these taxes.\r\n\r\nThis value may also be set at the Nexus level.  See `NexusModel` for more information.",
        "type": "boolean"
      },
      "description": {
        "description": "User-supplied description for this transaction.",
        "maxLength": 2048,
        "minLength": 0,
        "type": "string",
        "example": "Yarn"
      },
      "email": {
        "description": "User-supplied email address relevant for this transaction.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "debugLevel": {
        "description": "If the user wishes to request additional debug information from this transaction, specify a level higher than `normal`.",
        "enum": [
          "Normal",
          "Diagnostic"
        ],
        "type": "string",
        "x-enum-type": "TaxDebugLevel",
        "x-enum-description": "Indicates the level of detail requested from a tax API call",
        "x-enum-value-comments": {
          "Normal": "User requests the normal level of debug information when creating a tax transaction",
          "Diagnostic": "User requests additional diagnostic information when creating a tax transaction"
        }
      }
    },
    "example": {
      "lines": [
        {
          "number": "1",
          "quantity": 1,
          "amount": 100,
          "taxCode": "PS081282",
          "itemCode": "Y0001",
          "description": "Yarn"
        }
      ],
      "type": "SalesInvoice",
      "companyCode": "DEFAULT",
      "date": "2018-01-24",
      "customerCode": "ABC",
      "purchaseOrderNo": "2018-01-24-001",
      "addresses": {
        "singleLocation": {
          "line1": "2000 Main Street",
          "city": "Irvine",
          "region": "CA",
          "country": "US",
          "postalCode": "92614"
        }
      },
      "commit": true,
      "currencyCode": "USD",
      "description": "Yarn"
    },
    "x-methods-used-in": [
      "Transactions/CreateTransaction"
    ]
  },
  "LineItemModel": {
    "description": "Represents one line item in a transaction",
    "required": [
      "amount"
    ],
    "type": "object",
    "properties": {
      "number": {
        "description": "The line number of this line within the document.  This can be any text that is useful to you, such as numeric line numbers, alphabetic line numbers, or other text.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "1"
      },
      "quantity": {
        "format": "double",
        "description": "Quantity of items in this line.  This quantity value should always be a positive value representing the quantity of product that changed hands, even when handling returns or refunds.\r\n\r\nIf not provided, or if set to zero, the quantity value is assumed to be one (1).",
        "type": "number",
        "example": 1
      },
      "amount": {
        "format": "double",
        "description": "Total amount for this line.  The amount represents the net currency value that changed hands from the customer (represented by the `customerCode` field) to the company (represented by the `companyCode`) field.\r\n\r\nFor sale transactions, this value must be positive.  It indicates the amount of money paid by the customer to the company.\r\n\r\nFor refund or return transactions, this value must be negative.",
        "type": "number",
        "example": 100
      },
      "addresses": {
        "$ref": "#/definitions/AddressesModel",
        "description": "The addresses to use for this transaction line.\r\n\r\nIf you set this value to `null`, or if you omit this element from your API call, then instead the transaction\r\nwill use the `addresses` from the document level.\r\n\r\nIf you specify any other value besides `null`, only addresses specified for this line will be used for this line."
      },
      "taxCode": {
        "description": "Tax Code - System or Custom Tax Code.\r\n    \r\nYou can use your own tax code mapping or standard Avalara tax codes.  For a full list of tax codes, see `ListTaxCodes`.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string",
        "example": "PS081282"
      },
      "customerUsageType": {
        "description": "DEPRECATED - Please use `entityUseCode` instead.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "entityUseCode": {
        "description": "Entity Use Code - The client application customer or usage type.  This field allows you to designate a type of usage that \r\nmay make this transaction considered exempt by reason of exempt usage.\r\n\r\nFor a list of entity use codes, see the Definitions API `ListEntityUseCodes`.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "itemCode": {
        "description": "Item Code (SKU).  If you provide an `itemCode` field, the AvaTax API will look up the item you created with the `CreateItems` API call\r\nand use all the information available about that item for this transaction.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "Y0001"
      },
      "exemptionCode": {
        "description": "Exemption certificate number for this line.",
        "type": "string"
      },
      "discounted": {
        "description": "True if the document discount should be applied to this line.  If this value is false, or not provided, discounts will not be \r\napplied to this line even if they are specified on the root `discount` element.",
        "type": "boolean"
      },
      "taxIncluded": {
        "description": "Indicates whether the `amount` for this line already includes tax.\r\n\r\nIf this value is `true`, the final price of this line including tax will equal the value in `amount`. \r\n\r\nIf this value is `null` or `false`, the final price will equal `amount` plus whatever taxes apply to this line.",
        "type": "boolean"
      },
      "revenueAccount": {
        "description": "Revenue Account (Customer Defined Field).\r\n\r\nThis field is available for you to use to provide whatever information your implementation requires.  It does not affect tax calculation.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "ref1": {
        "description": "Ref1 (Customer Defined Field)\r\n\r\nThis field is available for you to use to provide whatever information your implementation requires.  It does not affect tax calculation.",
        "maxLength": 250,
        "minLength": 0,
        "type": "string"
      },
      "ref2": {
        "description": "Ref2 (Customer Defined Field)\r\n\r\nThis field is available for you to use to provide whatever information your implementation requires.  It does not affect tax calculation.",
        "maxLength": 250,
        "minLength": 0,
        "type": "string"
      },
      "description": {
        "description": "Item description.\r\n\r\nFor Streamlined Sales Tax (SST) customers, this field is required if an unmapped `itemCode` is used.",
        "maxLength": 2096,
        "minLength": 0,
        "type": "string",
        "example": "Yarn"
      },
      "businessIdentificationNo": {
        "description": "VAT business identification number for the customer for this line item.  If you leave this field empty,\r\nthis line item will use whatever business identification number you provided at the transaction level.\r\n\r\nIf you specify a VAT business identification number for the customer in this transaction and you have also set up\r\na business identification number for your company during company setup, this transaction will be treated as a \r\nbusiness-to-business transaction for VAT purposes and it will be calculated according to VAT tax rules.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      },
      "taxOverride": {
        "$ref": "#/definitions/TaxOverrideModel",
        "description": "Specifies a tax override for this line."
      },
      "parameters": {
        "$ref": "#/definitions/LineItemModel > Parameters"
      },
      "hsCode": {
        "description": "The Item code for Custom Duty / Global Import tax determination\r\nHarmonized Tariff System code for this transaction.\r\n\r\nFor a list of harmonized tariff codes, see the Definitions API for harmonized tariff codes.",
        "maxLength": 25,
        "minLength": 0,
        "type": "string"
      }
    },
    "example": {
      "number": "1",
      "quantity": 1,
      "amount": 100,
      "taxCode": "PS081282",
      "itemCode": "Y0001",
      "description": "Yarn"
    },
    "x-methods-used-in": []
  },
  "SettleTransactionModel": {
    "description": "Settle this transaction with your ledger by executing one or many actions against that transaction.  \r\n\r\nYou may use this endpoint to verify the transaction, change the transaction's code, and commit the transaction for reporting purposes.\r\nThis endpoint may be used to execute any or all of these actions at once.",
    "type": "object",
    "properties": {
      "verify": {
        "$ref": "#/definitions/VerifyTransactionModel",
        "description": "To verify this transaction, you may provide information in this field.\r\n\r\nIf you leave this field null, the transaction will not be verified.",
        "example": {
          "verifyTransactionDate": "2018-01-24T00:00:00-08:00",
          "verifyTotalAmount": 100,
          "verifyTotalTax": 6.25
        }
      },
      "changeCode": {
        "$ref": "#/definitions/ChangeTransactionCodeModel",
        "description": "To change the code for this transaction, you may provide information in this field.\r\n\r\nIf you leave this field null, the transaction's code will not be changed.",
        "example": {
          "newCode": "685cf743-3c5c-41d4-9905-6a428506a82d"
        }
      },
      "commit": {
        "$ref": "#/definitions/CommitTransactionModel",
        "description": "To commit this transaction so that it can be reported on a tax filing, you may provide information in this field.\r\n\r\nIf you leave this field null, the transaction's commit status will not be changed.\r\n\r\nIf you use Avalara's Managed Returns Service, committing a transaction will allow that transaction to be filed.",
        "example": {
          "commit": true
        }
      }
    },
    "example": {
      "verify": {
        "verifyTransactionDate": "2018-01-24T00:00:00-08:00",
        "verifyTotalAmount": 100,
        "verifyTotalTax": 6.25
      },
      "changeCode": {
        "newCode": "685cf743-3c5c-41d4-9905-6a428506a82d"
      },
      "commit": {
        "commit": true
      }
    },
    "x-methods-used-in": [
      "Transactions/SettleTransaction"
    ]
  },
  "VerifyTransactionModel": {
    "description": "Verify this transaction by matching it to values in your accounting system.\r\n\r\nYou may specify one or more of the following fields to verify: `date`, `totalAmount`, or `totalTax`.\r\nThis call will report an error if there is any difference between the data stored in AvaTax and\r\nthe data stored in your accounting system.",
    "type": "object",
    "properties": {
      "verifyTransactionDate": {
        "format": "date-time",
        "description": "Set this value if you wish to verify a match between `verifyTransactionDate` and\r\nthe `documentDate` value on the transaction recorded in AvaTax.\r\n\r\nIf you leave this field empty, we will skip verification for this field.",
        "type": "string",
        "example": "2018-01-24T00:00:00-08:00"
      },
      "verifyTotalAmount": {
        "format": "double",
        "description": "Set this value if you wish to verify a match between `verifyTotalAmount` and\r\nthe `totalAmount` value on the transaction recorded in AvaTax.\r\n\r\nIf you leave this field empty, we will skip verification for this field.",
        "type": "number",
        "example": 100
      },
      "verifyTotalTax": {
        "format": "double",
        "description": "Set this value if you wish to verify a match between `verifyTotalTax` and\r\nthe `totalTax` value on the transaction recorded in AvaTax.\r\n\r\nIf you leave this field empty, we will skip verification for this field.",
        "type": "number",
        "example": 6.25
      }
    },
    "example": {
      "verifyTransactionDate": "2018-01-24T00:00:00-08:00",
      "verifyTotalAmount": 100,
      "verifyTotalTax": 6.25
    },
    "x-methods-used-in": [
      "Transactions/VerifyTransaction"
    ]
  },
  "ChangeTransactionCodeModel": {
    "description": "Settle this transaction with your ledger by verifying its amounts.\r\nIf the transaction is not yet committed, you may specify the \"commit\" value to commit it to the ledger and allow it to be reported.\r\nYou may also optionally change the transaction's code by specifying the \"newTransactionCode\" value.",
    "required": [
      "newCode"
    ],
    "type": "object",
    "properties": {
      "newCode": {
        "description": "To change the transaction code for this transaction, specify the new transaction code here.",
        "maxLength": 50,
        "minLength": 0,
        "type": "string",
        "example": "6dacfa3b-bd1c-4eed-aa4b-512f77dde029"
      }
    },
    "example": {
      "newCode": "6dacfa3b-bd1c-4eed-aa4b-512f77dde029"
    },
    "x-methods-used-in": [
      "Transactions/ChangeTransactionCode"
    ]
  },
  "CommitTransactionModel": {
    "description": "Commit this transaction as permanent so that it can be reported on a tax filing.",
    "required": [
      "commit"
    ],
    "type": "object",
    "properties": {
      "commit": {
        "description": "Set this value to be `true` to commit this transaction.\r\n\r\nCommitting a transaction allows it to be reported on a tax filing.  Uncommitted transactions will not be reported.",
        "type": "boolean",
        "example": true
      }
    },
    "example": {
      "commit": true
    },
    "x-methods-used-in": [
      "Transactions/CommitTransaction"
    ]
  },
  "LockTransactionModel": {
    "description": "Commit this transaction as permanent",
    "required": [
      "isLocked"
    ],
    "type": "object",
    "properties": {
      "isLocked": {
        "description": "Set this value to be true to commit this transaction.\r\nCommitting a transaction allows it to be reported on a tax return.  Uncommitted transactions will not be reported.",
        "type": "boolean",
        "example": true
      }
    },
    "example": {
      "isLocked": true
    },
    "x-methods-used-in": [
      "Transactions/LockTransaction"
    ]
  },
  "BulkLockTransactionModel": {
    "description": "Bulk lock documents model",
    "required": [
      "documentIds",
      "isLocked"
    ],
    "type": "object",
    "properties": {
      "documentIds": {
        "description": "List of documents to lock",
        "type": "array",
        "items": {
          "format": "int64",
          "type": "integer"
        },
        "example": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "isLocked": {
        "description": "The lock status to set for the documents designated in this API",
        "type": "boolean",
        "example": true
      }
    },
    "example": {
      "documentIds": [
        1,
        2,
        3,
        4,
        5
      ],
      "isLocked": true
    },
    "x-methods-used-in": [
      "Transactions/BulkLockTransaction"
    ]
  },
  "BulkLockTransactionResult": {
    "description": "Returns information about transactions that were locked",
    "type": "object",
    "properties": {
      "numberOfRecords": {
        "format": "int32",
        "description": "Number of records that have been modified",
        "type": "integer"
      }
    },
    "example": {
      "numberOfRecords": 42
    },
    "x-methods-used-in": [
      "Transactions/BulkLockTransaction"
    ]
  },
  "CreateOrAdjustTransactionModel": {
    "description": "Create or adjust transaction model",
    "required": [
      "createTransactionModel"
    ],
    "type": "object",
    "properties": {
      "createTransactionModel": {
        "$ref": "#/definitions/CreateTransactionModel",
        "description": "The create transaction model to be created or updated. \r\n            \r\nIf the transaction does not exist, create transaction.\r\nIf the transaction exists, adjust the existing transaction.",
        "example": {
          "lines": [
            {
              "number": "1",
              "quantity": 1,
              "amount": 100,
              "taxCode": "PS081282",
              "itemCode": "Y0001",
              "description": "Yarn"
            }
          ],
          "type": "SalesInvoice",
          "companyCode": "DEFAULT",
          "date": "2018-01-24",
          "customerCode": "ABC",
          "purchaseOrderNo": "2018-01-24-001",
          "addresses": {
            "singleLocation": {
              "line1": "2000 Main Street",
              "city": "Irvine",
              "region": "CA",
              "country": "US",
              "postalCode": "92614"
            }
          },
          "commit": true,
          "currencyCode": "USD",
          "description": "Yarn"
        }
      }
    },
    "example": {
      "createTransactionModel": {
        "lines": [
          {
            "number": "1",
            "quantity": 1,
            "amount": 100,
            "taxCode": "PS081282",
            "itemCode": "Y0001",
            "description": "Yarn"
          }
        ],
        "type": "SalesInvoice",
        "companyCode": "DEFAULT",
        "date": "2018-01-24",
        "customerCode": "ABC",
        "purchaseOrderNo": "2018-01-24-001",
        "addresses": {
          "singleLocation": {
            "line1": "2000 Main Street",
            "city": "Irvine",
            "region": "CA",
            "country": "US",
            "postalCode": "92614"
          }
        },
        "commit": true,
        "currencyCode": "USD",
        "description": "Yarn"
      }
    },
    "x-methods-used-in": [
      "Transactions/CreateOrAdjustTransaction"
    ]
  },
  "AuditTransactionModel": {
    "description": "Information about a previously created transaction",
    "type": "object",
    "properties": {
      "companyId": {
        "format": "int32",
        "description": "Unique ID number of the company that created this transaction",
        "type": "integer",
        "example": 0
      },
      "reconstructed": {
        "$ref": "#/definitions/ReconstructedApiRequestResponseModel",
        "description": "Reconstructed API request/response",
        "example": {
          "request": {
            "lines": [
              {
                "number": "1",
                "quantity": 1,
                "amount": 100,
                "taxCode": "PS081282",
                "itemCode": "Y0001",
                "description": "Yarn"
              }
            ],
            "type": "SalesInvoice",
            "companyCode": "DEFAULT",
            "date": "2018-01-24",
            "customerCode": "ABC",
            "purchaseOrderNo": "2018-01-24-001",
            "addresses": {
              "singleLocation": {
                "line1": "2000 Main Street",
                "city": "Irvine",
                "region": "CA",
                "country": "US",
                "postalCode": "92614"
              }
            },
            "commit": true,
            "currencyCode": "USD",
            "description": "Yarn"
          }
        }
      },
      "serverTimestamp": {
        "format": "date-time",
        "description": "Server timestamp, in UTC, of the date/time when the original transaction was created",
        "type": "string",
        "example": "2018-01-24T12:04:53.9867936-08:00"
      },
      "serverDuration": {
        "format": "date-time",
        "description": "Length of time the original API call took",
        "type": "string"
      },
      "apiCallStatus": {
        "description": "api call status",
        "enum": [
          "OriginalApiCallAvailable",
          "ReconstructedApiCallAvailable",
          "Any"
        ],
        "type": "string",
        "example": "ReconstructedApiCallAvailable",
        "x-enum-type": "ApiCallStatus",
        "x-enum-description": "Indicates what level of auditing information is available for a transaction",
        "x-enum-value-comments": {
          "OriginalApiCallAvailable": "If the original api call is availabe on S3",
          "ReconstructedApiCallAvailable": "if the original api call is not available, reconstructed api call should always be available",
          "Any": "Any other api call status"
        }
      },
      "original": {
        "$ref": "#/definitions/OriginalApiRequestResponseModel",
        "description": "Original API request/response"
      }
    },
    "example": {
      "companyId": 0,
      "reconstructed": {
        "request": {
          "lines": [
            {
              "number": "1",
              "quantity": 1,
              "amount": 100,
              "taxCode": "PS081282",
              "itemCode": "Y0001",
              "description": "Yarn"
            }
          ],
          "type": "SalesInvoice",
          "companyCode": "DEFAULT",
          "date": "2018-01-24",
          "customerCode": "ABC",
          "purchaseOrderNo": "2018-01-24-001",
          "addresses": {
            "singleLocation": {
              "line1": "2000 Main Street",
              "city": "Irvine",
              "region": "CA",
              "country": "US",
              "postalCode": "92614"
            }
          },
          "commit": true,
          "currencyCode": "USD",
          "description": "Yarn"
        }
      },
      "serverTimestamp": "2018-01-24T12:04:53.9867936-08:00",
      "apiCallStatus": "ReconstructedApiCallAvailable"
    },
    "x-methods-used-in": [
      "Transactions/AuditTransaction",
      "Transactions/AuditTransactionWithType"
    ]
  },
  "ReconstructedApiRequestResponseModel": {
    "description": "This model contains a reconstructed CreateTransaction request object that could potentially be used\r\nto recreate this transaction.\r\n\r\nNote that the API changes over time, and this reconstructed model is likely different from the exact request\r\nthat was originally used to create this transaction.",
    "type": "object",
    "properties": {
      "request": {
        "$ref": "#/definitions/CreateTransactionModel",
        "description": "API request",
        "example": {
          "lines": [
            {
              "number": "1",
              "quantity": 1,
              "amount": 100,
              "taxCode": "PS081282",
              "itemCode": "Y0001",
              "description": "Yarn"
            }
          ],
          "type": "SalesInvoice",
          "companyCode": "DEFAULT",
          "date": "2017-10-12",
          "customerCode": "ABC",
          "purchaseOrderNo": "2017 - 10 - 12 - 001",
          "addresses": {
            "singleLocation": {
              "line1": "2000 Main Street",
              "city": "Irvine",
              "region": "CA",
              "country": "US",
              "postalCode": "92614"
            }
          },
          "commit": true,
          "currencyCode": "USD",
          "description": "Yarn"
        }
      }
    },
    "example": {
      "request": {
        "lines": [
          {
            "number": "1",
            "quantity": 1,
            "amount": 100,
            "taxCode": "PS081282",
            "itemCode": "Y0001",
            "description": "Yarn"
          }
        ],
        "type": "SalesInvoice",
        "companyCode": "DEFAULT",
        "date": "2017-10-12",
        "customerCode": "ABC",
        "purchaseOrderNo": "2017 - 10 - 12 - 001",
        "addresses": {
          "singleLocation": {
            "line1": "2000 Main Street",
            "city": "Irvine",
            "region": "CA",
            "country": "US",
            "postalCode": "92614"
          }
        },
        "commit": true,
        "currencyCode": "USD",
        "description": "Yarn"
      }
    },
    "x-methods-used-in": []
  },
  "AddTransactionLineModel": {
    "description": "Model to add specific lines to exising transaction",
    "required": [
      "companyCode",
      "transactionCode"
    ],
    "type": "object",
    "properties": {
      "companyCode": {
        "description": "company code",
        "type": "string",
        "example": "DEFAULT"
      },
      "transactionCode": {
        "description": "document code for the transaction to add lines",
        "type": "string",
        "example": "1234"
      },
      "documentType": {
        "description": "document type",
        "enum": [
          "SalesOrder",
          "SalesInvoice",
          "PurchaseOrder",
          "PurchaseInvoice",
          "ReturnOrder",
          "ReturnInvoice",
          "InventoryTransferOrder",
          "InventoryTransferInvoice",
          "ReverseChargeOrder",
          "ReverseChargeInvoice",
          "Any"
        ],
        "type": "string",
        "example": "SalesInvoice",
        "x-enum-type": "DocumentType",
        "x-enum-description": "Represents the different types of transactions that AvaTax can process.",
        "x-enum-value-comments": {
          "SalesOrder": "Represents an estimate, or a sales order, or a quote.  \n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a sales order, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a temporary document type and is not saved in tax history.",
          "SalesInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a sales invoice, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "PurchaseOrder": "Represents an estimate, or a purchase order, or a quote.\n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a purchase order, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a temporary document type and is not saved in tax history.",
          "PurchaseInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a purchase invoice, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReturnOrder": "Represents an estimate of tax to be refunded if a refund or return is processed.\n            \n            This document type is used before a customer chooses to request a refund for a previous sale, and it\n            estimates the final amount of tax to be refunded when the refund is completed.\n            \n            For a return order, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReturnInvoice": "Represents an refund that has been finalized.\n            \n            This document type is used when a customer chooses to request a refund for a previous sale, and it\n            records the final amount of tax that has been refunded when the refund is completed.\n            \n            For a return invoice, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a permanent document and is recorded in AvaTax.\n            \n            Please note that many jurisdictions around the United States have special rules about how to report refunds\n            on a sales tax filing, and some refund transactions may be unable to file immediately due to credit netting\n            rules.",
          "InventoryTransferOrder": "Represents a proposed movement of inventory from one jurisdiction to another.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a temporary document type and is not saved in tax history.",
          "InventoryTransferInvoice": "Represents a movement of inventory from one jurisdiction to another that has been finalized.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReverseChargeOrder": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReverseChargeInvoice": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "Any": "Not a real document type.\n            \n            This value is used when querying for documents.  You can specify the type `Any` in some cases to permit the\n            system to find any document matching other criteria."
        }
      },
      "lines": {
        "description": "List of lines to be added",
        "type": "array",
        "items": {
          "$ref": "#/definitions/LineItemModel"
        },
        "example": [
          {
            "number": "1",
            "quantity": 1,
            "amount": 100,
            "taxCode": "PS081282",
            "itemCode": "Y0001",
            "description": "Yarn"
          }
        ]
      },
      "renumber": {
        "description": "Option to renumber lines after add. After renumber, the line number becomes: \"1\", \"2\", \"3\", ...",
        "type": "boolean",
        "example": false
      }
    },
    "example": {
      "companyCode": "DEFAULT",
      "transactionCode": "1234",
      "documentType": "SalesInvoice",
      "lines": [
        {
          "number": "1",
          "quantity": 1,
          "amount": 100,
          "taxCode": "PS081282",
          "itemCode": "Y0001",
          "description": "Yarn"
        }
      ],
      "renumber": false
    },
    "x-methods-used-in": [
      "Transactions/AddLines"
    ]
  },
  "RemoveTransactionLineModel": {
    "description": "Model to specify lines to be removed",
    "required": [
      "companyCode",
      "transactionCode"
    ],
    "type": "object",
    "properties": {
      "companyCode": {
        "description": "company code",
        "type": "string",
        "example": "DEFAULT"
      },
      "transactionCode": {
        "description": "document code for the transaction to add lines",
        "type": "string",
        "example": "1234"
      },
      "documentType": {
        "description": "document type",
        "enum": [
          "SalesOrder",
          "SalesInvoice",
          "PurchaseOrder",
          "PurchaseInvoice",
          "ReturnOrder",
          "ReturnInvoice",
          "InventoryTransferOrder",
          "InventoryTransferInvoice",
          "ReverseChargeOrder",
          "ReverseChargeInvoice",
          "Any"
        ],
        "type": "string",
        "example": "SalesInvoice",
        "x-enum-type": "DocumentType",
        "x-enum-description": "Represents the different types of transactions that AvaTax can process.",
        "x-enum-value-comments": {
          "SalesOrder": "Represents an estimate, or a sales order, or a quote.  \n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a sales order, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a temporary document type and is not saved in tax history.",
          "SalesInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a sales invoice, the `companyCode` of the transaction refers to the seller and the `customerVendorCode` refers to the buyer.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "PurchaseOrder": "Represents an estimate, or a purchase order, or a quote.\n            \n            This document type is used before a sale has occurred to estimate the final amount of tax to be paid when the\n            sale is completed.\n            \n            For a purchase order, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a temporary document type and is not saved in tax history.",
          "PurchaseInvoice": "Represents a sale that has been finalized.\n            \n            This document type is used to record a final transaction and calculate the final tax amount with all necessary information.\n            \n            For a purchase invoice, the `companyCode` of the transaction refers to the buyer and the `customerVendorCode` refers to the seller.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReturnOrder": "Represents an estimate of tax to be refunded if a refund or return is processed.\n            \n            This document type is used before a customer chooses to request a refund for a previous sale, and it\n            estimates the final amount of tax to be refunded when the refund is completed.\n            \n            For a return order, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReturnInvoice": "Represents an refund that has been finalized.\n            \n            This document type is used when a customer chooses to request a refund for a previous sale, and it\n            records the final amount of tax that has been refunded when the refund is completed.\n            \n            For a return invoice, the `companyCode` of the transaction refers to the seller who is giving the refund \n            and the `customerVendorCode` refers to the buyer who is requesting the refund.\n            \n            This is a permanent document and is recorded in AvaTax.\n            \n            Please note that many jurisdictions around the United States have special rules about how to report refunds\n            on a sales tax filing, and some refund transactions may be unable to file immediately due to credit netting\n            rules.",
          "InventoryTransferOrder": "Represents a proposed movement of inventory from one jurisdiction to another.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a temporary document type and is not saved in tax history.",
          "InventoryTransferInvoice": "Represents a movement of inventory from one jurisdiction to another that has been finalized.\n            \n            This document type is used when physical goods are shipped from one jurisdiction to another, and it\n            may cause updates in the tax liability for various jurisdictions.\n            \n            For an inventory transfer invoice, the `companyCode` of the transaction refers to the owner of the inventory\n            that will be moved from one location to another.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "ReverseChargeOrder": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a temporary document type and is not saved in tax history.",
          "ReverseChargeInvoice": "Represents a VAT \"Reverse Charge\" mechanism transaction as defined in the European Union.\n            \n            A Reverse Charge transaction moves the responsibility for VAT reporting from the seller to the buyer, and\n            is intended to allow simplification of commerce and reduce the reporting requirements for sellers that deliver\n            goods and services into the single market.\n            \n            This is a permanent document and is recorded in AvaTax.",
          "Any": "Not a real document type.\n            \n            This value is used when querying for documents.  You can specify the type `Any` in some cases to permit the\n            system to find any document matching other criteria."
        }
      },
      "lines": {
        "description": "List of lines to be added",
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "1"
        ]
      },
      "renumber": {
        "description": "ption to renumber lines after removal. After renumber, the line number becomes: \"1\", \"2\", \"3\", ...",
        "type": "boolean",
        "example": false
      }
    },
    "example": {
      "companyCode": "DEFAULT",
      "transactionCode": "1234",
      "documentType": "SalesInvoice",
      "lines": [
        "1"
      ],
      "renumber": false
    },
    "x-methods-used-in": [
      "Transactions/DeleteLines"
    ]
  },
  "FetchResult[UPCModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/UPCModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Upcs/ListUPCsByCompany",
      "Upcs/QueryUPCs"
    ]
  },
  "FetchResult[UserModel]": {
    "type": "object",
    "properties": {
      "@recordsetCount": {
        "format": "int32",
        "type": "integer"
      },
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/UserModel"
        }
      },
      "@nextLink": {
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "Users/ListUsersByAccount",
      "Users/QueryUsers"
    ]
  },
  "UserEntitlementModel": {
    "description": "User Entitlement Model",
    "type": "object",
    "properties": {
      "permissions": {
        "description": "List of API names and categories that this user is permitted to access",
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "CompanyFetch",
          "CompanySave",
          "NexusFetch",
          "NexusSave"
        ]
      },
      "accessLevel": {
        "description": "What access privileges does the current user have to see companies?",
        "enum": [
          "None",
          "SingleCompany",
          "SingleAccount",
          "AllCompanies"
        ],
        "type": "string",
        "example": "SingleAccount",
        "x-enum-type": "CompanyAccessLevel",
        "x-enum-description": "Indicates the level of companies that can be accessed",
        "x-enum-value-comments": {
          "None": "No permission to access companies.",
          "SingleCompany": "Permission to access a single company and its children.",
          "SingleAccount": "Permission to access all companies in a single account.",
          "AllCompanies": "Permission to access all companies in all accounts.  Reserved for system administration tasks."
        }
      },
      "companies": {
        "description": "The identities of all companies this user is permitted to access",
        "type": "array",
        "items": {
          "format": "int32",
          "type": "integer"
        },
        "example": [
          123,
          456,
          789
        ]
      }
    },
    "example": {
      "permissions": [
        "CompanyFetch",
        "CompanySave",
        "NexusFetch",
        "NexusSave"
      ],
      "accessLevel": "SingleAccount",
      "companies": [
        123,
        456,
        789
      ]
    },
    "x-methods-used-in": [
      "Users/GetUserEntitlements"
    ]
  },
  "PingResultModel": {
    "description": "Ping Result Model",
    "type": "object",
    "properties": {
      "version": {
        "description": "Version number",
        "type": "string",
        "example": "1.0.0.0"
      },
      "authenticated": {
        "description": "Returns true if you provided authentication for this API call; false if you did not.",
        "type": "boolean",
        "example": true
      },
      "authenticationType": {
        "description": "Returns the type of authentication you provided, if authenticated",
        "enum": [
          "None",
          "UsernamePassword",
          "AccountIdLicenseKey",
          "OpenIdBearerToken"
        ],
        "type": "string",
        "example": "UsernamePassword",
        "x-enum-type": "AuthenticationTypeId",
        "x-enum-description": "Represents the type of authentication provided to the API call",
        "x-enum-value-comments": {
          "None": "This API call was not authenticated.",
          "UsernamePassword": "This API call was authenticated by your username/password.",
          "AccountIdLicenseKey": "This API call was authenticated by your Avalara Account ID and private license key.",
          "OpenIdBearerToken": "This API call was authenticated by OpenID Bearer Token."
        }
      },
      "authenticatedUserName": {
        "description": "The username of the currently authenticated user, if any.",
        "type": "string",
        "example": "TestUser"
      },
      "authenticatedUserId": {
        "format": "int32",
        "description": "The ID number of the currently authenticated user, if any.",
        "type": "integer",
        "example": 98765
      },
      "authenticatedAccountId": {
        "format": "int32",
        "description": "The ID number of the currently authenticated user's account, if any.",
        "type": "integer",
        "example": 123456789
      },
      "crmid": {
        "description": "The connected Salesforce account.",
        "type": "string",
        "example": "1111"
      }
    },
    "example": {
      "version": "1.0.0.0",
      "authenticated": true,
      "authenticationType": "UsernamePassword",
      "authenticatedUserName": "TestUser",
      "authenticatedUserId": 98765,
      "authenticatedAccountId": 123456789,
      "crmid": "1111"
    },
    "x-methods-used-in": [
      "Utilities/Ping"
    ]
  },
  "TaxCodeTypesModel > Types": {
    "description": "The list of Avalara-defined tax code types.",
    "type": "object",
    "additionalProperties": {
      "type": "string"
    },
    "example": {
      "D": "Digital",
      "F": "Freight",
      "O": "Other",
      "P": "Product",
      "S": "Service",
      "U": "Unknown"
    },
    "properties": {},
    "x-methods-used-in": []
  },
  "FilingCalendarEditModel > OldValue": {
    "description": "The current value of the field.",
    "type": "object",
    "example": "002094004",
    "properties": {},
    "x-methods-used-in": []
  },
  "FilingCalendarEditModel > NewValue": {
    "description": "The new/proposed value of the field.",
    "type": "object",
    "example": "002094005",
    "properties": {},
    "x-methods-used-in": []
  },
  "FilingAnswerModel > Answer": {
    "description": "The value of the answer for the filing question identified by filingQuestionId",
    "type": "object",
    "example": "Answer to question 1",
    "properties": {},
    "x-methods-used-in": []
  },
  "TransactionModel > Parameters": {
    "description": "Contains a list of extra parameters that were set when the transaction was created.",
    "type": "object",
    "additionalProperties": {
      "type": "string"
    },
    "properties": {},
    "x-methods-used-in": []
  },
  "TransactionLineModel > Parameters": {
    "description": "Contains a list of extra parameters that were set when the transaction was created.",
    "type": "object",
    "additionalProperties": {
      "type": "string"
    },
    "properties": {},
    "x-methods-used-in": []
  },
  "CreateMultiDocumentModel > Parameters": {
    "description": "Special parameters for this transaction.\r\n\r\nTo get a full list of available parameters, please use the `/api/v2/definitions/parameters` endpoint.",
    "type": "object",
    "additionalProperties": {
      "type": "string"
    },
    "properties": {},
    "x-methods-used-in": []
  },
  "MultiDocumentLineItemModel > Parameters": {
    "description": "Special parameters that apply to this line within this transaction.\r\n\r\nTo get a full list of available parameters, please use the `ListParameters` API.",
    "type": "object",
    "additionalProperties": {
      "type": "string"
    },
    "properties": {},
    "x-methods-used-in": []
  },
  "CreateTransactionModel > Parameters": {
    "description": "Special parameters for this transaction.\r\n\r\nTo get a full list of available parameters, please use the `/api/v2/definitions/parameters` endpoint.",
    "type": "object",
    "additionalProperties": {
      "type": "string"
    },
    "properties": {},
    "x-methods-used-in": []
  },
  "LineItemModel > Parameters": {
    "description": "Special parameters that apply to this line within this transaction.\r\n\r\nTo get a full list of available parameters, please use the `ListParameters` API.",
    "type": "object",
    "additionalProperties": {
      "type": "string"
    },
    "properties": {},
    "x-methods-used-in": []
  }
}