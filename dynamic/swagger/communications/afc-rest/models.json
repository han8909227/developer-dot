{
  "BridgeConferenceTransaction": {
    "description": "Bridge Conference Transaction",
    "required": [
      "Participants",
      "CustomerType",
      "Sale",
      "Date",
      "Charge",
      "Incorporated"
    ],
    "type": "object",
    "properties": {
      "ProcessInvalidParticipant": {
        "description": "Flag indicating whether invalid participant jurisdiction should cause the transaction to fail (false) or whether the participant should be processed with greatest tax liability (true).",
        "type": "boolean"
      },
      "ReturnParticipantTaxes": {
        "description": "Indicates whether individual participant taxes should be returned in the response.",
        "type": "boolean"
      },
      "BillingPCode": {
        "format": "int32",
        "description": "PCode for billing.",
        "type": "integer"
      },
      "BridgePCode": {
        "format": "int32",
        "description": "PCode for bridge.",
        "type": "integer"
      },
      "HostPCode": {
        "format": "int32",
        "description": "PCode for host.",
        "type": "integer"
      },
      "BillingNpaNxx": {
        "format": "int32",
        "description": "NPANXX for billing.",
        "type": "integer"
      },
      "BridgeNpaNxx": {
        "format": "int32",
        "description": "NPANXX for bridge.",
        "type": "integer"
      },
      "HostNpaNxx": {
        "format": "int32",
        "description": "NPANXX for host.",
        "type": "integer"
      },
      "BillingAddress": {
        "$ref": "#/definitions/ZipAddress",
        "description": "Billing address."
      },
      "BridgeAddress": {
        "$ref": "#/definitions/ZipAddress",
        "description": "Bridge address."
      },
      "HostAddress": {
        "$ref": "#/definitions/ZipAddress",
        "description": "Host address."
      },
      "Participants": {
        "description": "List of bridge conference participants.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/BridgeConferenceParticipant"
        }
      },
      "CustomerType": {
        "format": "int32",
        "description": "Customer Type. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for valid customer types.",
        "type": "integer"
      },
      "BusinessClass": {
        "format": "int32",
        "description": "Business Class. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for valid business classes.",
        "type": "integer"
      },
      "Sale": {
        "description": "Indicates if this is a retail sale. Use false for resale/wholesale transactions.",
        "type": "boolean"
      },
      "TransactionType": {
        "format": "int32",
        "description": "Transaction type.",
        "type": "integer"
      },
      "ServiceType": {
        "format": "int32",
        "description": "Service type.",
        "type": "integer"
      },
      "ServiceClass": {
        "format": "int32",
        "description": "Service class. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid service classes.",
        "type": "integer"
      },
      "Date": {
        "format": "date-time",
        "description": "Transaction date. Field is provided to allow rating and taxing to occur on a date other than the billing date.",
        "type": "string"
      },
      "Charge": {
        "format": "double",
        "description": "Charge amount to customer for transaction.",
        "type": "number"
      },
      "Incorporated": {
        "description": "True if this transaction is within an incorporated area of the local jurisdiction, otherwise false.",
        "type": "boolean"
      },
      "FederalExempt": {
        "description": "True if transaction is exempt from Federal Tax, otherwise false.",
        "type": "boolean"
      },
      "StateExempt": {
        "description": "True if transaction is exempt from State Tax, otherwise false.",
        "type": "boolean"
      },
      "CountyExempt": {
        "description": "True if transaction is exempt from County Tax, otherwise false.",
        "type": "boolean"
      },
      "LocalExempt": {
        "description": "True if transaction is exempt from Local Tax, otherwise false.",
        "type": "boolean"
      },
      "FederalPCode": {
        "format": "int32",
        "description": "Jurisdiction for Federal exemption.",
        "type": "integer"
      },
      "StatePCode": {
        "format": "int32",
        "description": "Jurisdiction for state exemption.",
        "type": "integer"
      },
      "CountyPCode": {
        "format": "int32",
        "description": "Jurisdiction for county exemption.",
        "type": "integer"
      },
      "LocalPCode": {
        "format": "int32",
        "description": "Jurisdiction for local exemption.",
        "type": "integer"
      },
      "Exemptions": {
        "description": "List of tax exemptions.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxExemption"
        }
      },
      "ExemptionType": {
        "format": "int32",
        "description": "Exemption type. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid exemption types.",
        "type": "integer"
      },
      "InvoiceNumber": {
        "format": "int32",
        "description": "User-defined invoice number.",
        "type": "integer"
      },
      "Optional": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "CustomerNumber": {
        "description": "User-defined customer number.",
        "type": "string"
      },
      "CompanyIdentifier": {
        "description": "Company identifier. Use the 3-character company identifier provided by Avalara to your organization in order to include this transaction in the monthly compliance reports. Otherwise, leave empty.",
        "type": "string"
      },
      "OptionalAlpha1": {
        "description": "Optional user-defined string value. 20-characters max.",
        "type": "string"
      },
      "Optional4": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional5": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional6": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional7": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional8": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional9": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional10": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "AdjustmentMethod": {
        "format": "int32",
        "description": "Adjustment method. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid adjustment methods.",
        "type": "integer"
      },
      "Lines": {
        "format": "int32",
        "description": "Number of lines sold to customer when applicable.",
        "type": "integer"
      },
      "Locations": {
        "format": "int32",
        "description": "Number of customer locations.",
        "type": "integer"
      },
      "Minutes": {
        "format": "double",
        "description": "Number of minutes for call when appropriate.",
        "type": "double float"
      },
      "Debit": {
        "description": "Determines if this is a prepaid debit card transaction.",
        "type": "boolean"
      },
      "DiscountType": {
        "format": "int32",
        "description": "Discount Type. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for valid discount types.",
        "type": "integer"
      },
      "FacilitiesBased": {
        "description": "Specifies if the carrier delivering the service has company owned facilities to provide the service.",
        "type": "boolean"
      },
      "Franchise": {
        "description": "Indicates if the company provides services sold pursuant to a franchise agreement between the carrier and jurisdiction.",
        "type": "boolean"
      },
      "Lifeline": {
        "description": "Indicates if customer is a Lifeline participant.",
        "type": "boolean"
      },
      "Regulated": {
        "description": "True if regulated, otherwise false.",
        "type": "boolean"
      },
      "ServiceLevelNumber": {
        "format": "int32",
        "description": "User-defined service level number.",
        "type": "integer"
      },
      "Exclusions": {
        "description": "List of states for tax exclusions.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/Exclusion"
        }
      },
      "CategoryExemptions": {
        "description": "List of tax category exemptions.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/CategoryExemption"
        }
      },
      "OptionalFields": {
        "description": "User-defined list of optional alphanumeric fields.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/OptionalField"
        }
      },
      "DocumentCode": {
        "description": "Document code.",
        "type": "string"
      },
      "Commit": {
        "description": "Indicates if the transaction should be committed as soon at it is processed.",
        "type": "boolean"
      }
    },
    "x-methods-used-in": [
      "ApiV1BridgeConferenceTaxesPost",
      "ApiV1BridgeConferenceAdjustmentsPost"
    ]
  },
  "ZipAddress": {
    "description": "Zip Address Class",
    "required": [
      "CountryISO"
    ],
    "type": "object",
    "properties": {
      "CountryISO": {
        "description": "Three-character country ISO code.",
        "type": "string"
      },
      "County": {
        "description": "County name.",
        "type": "string"
      },
      "Locality": {
        "description": "Locality name.",
        "type": "string"
      },
      "State": {
        "description": "Two-character state abbreviation.",
        "type": "string"
      },
      "ZipCode": {
        "description": "Zip code for location.",
        "type": "string"
      },
      "ZipP4": {
        "description": "Zip + 4 for location.",
        "type": "string"
      }
    },
    "x-methods-used-in": []
  },
  "BridgeConferenceParticipant": {
    "description": "Structure returned when invoking the bridge conference tax calculation APIs.",
    "type": "object",
    "properties": {
      "ParticipantAddress": {
        "$ref": "#/definitions/ZipAddress",
        "description": "Address for participant - all participants must use address values if any participant uses an address. Not required if ParticipantPCode or ParticipantNpaNxx are specified."
      },
      "ParticipantPCode": {
        "format": "int32",
        "description": "PCode forpParticipant � all participants must use PCode values if any participant uses PCode. Not required if ParticipantAddress or ParticipantNpaNxx are specified.",
        "type": "integer"
      },
      "ParticipantNpaNxx": {
        "format": "int32",
        "description": "NpaNxx for participant � all participants must use NPANXX values if any participant uses NPANXX. Not required if ParticipantAddress or ParticipantPCode are specified.",
        "type": "integer"
      },
      "ParticipantRef": {
        "description": "Alpha-numeric reference that will tie a participant in the request to participant taxes in response if ReturnParticipantTaxes is true. Max 127 bytes.",
        "type": "string"
      }
    },
    "x-methods-used-in": []
  },
  "TaxExemption": {
    "description": "Tax Exemption class",
    "required": [
      "PCode",
      "TaxLevel",
      "TaxType"
    ],
    "type": "object",
    "properties": {
      "PCode": {
        "format": "int32",
        "description": "PCode for jurisdiction to exempt.",
        "type": "integer"
      },
      "TaxLevel": {
        "format": "int32",
        "description": "Tax level. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid tax levels.",
        "type": "integer"
      },
      "TaxType": {
        "format": "int32",
        "description": "Tax type. See the Telecom Mapping guidelines (\"TM_00505_AFC Telecom Mapping Guidelines.pdf\") for a list of valid tax types.",
        "type": "integer"
      }
    },
    "x-methods-used-in": []
  },
  "Exclusion": {
    "description": "Exclusions Class",
    "required": [
      "ExclusionOn"
    ],
    "type": "object",
    "properties": {
      "CountryISO": {
        "description": "Three-character country ISO code. Required if State not specified.",
        "type": "string"
      },
      "State": {
        "description": "Two-character state abbreviation. Required if CountryISO not specified.",
        "type": "string"
      },
      "ExclusionOn": {
        "description": "True if entity exclusion applies in the state, otherwise false.",
        "type": "boolean"
      }
    },
    "x-methods-used-in": []
  },
  "CategoryExemption": {
    "description": "Category Exemption Class",
    "required": [
      "TaxCategory"
    ],
    "type": "object",
    "properties": {
      "CountryISO": {
        "description": "Three-character country ISO code. Required if State is not specified.",
        "type": "string"
      },
      "State": {
        "description": "Two-character state abbreviation. Required if CountryISO is not specified.",
        "type": "string"
      },
      "TaxCategory": {
        "format": "int32",
        "description": "Tax Category. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for valid tax categories.",
        "type": "integer"
      }
    },
    "x-methods-used-in": []
  },
  "OptionalField": {
    "description": "Data structure used to provide optional alphanumeric data for transactions.",
    "required": [
      "OptionalKeyNo",
      "OptionalValue"
    ],
    "type": "object",
    "properties": {
      "OptionalKeyNo": {
        "format": "int32",
        "description": "Key number (1 to 10) for optional field.",
        "type": "integer"
      },
      "OptionalValue": {
        "description": "Optional field value.",
        "type": "string"
      }
    },
    "x-methods-used-in": []
  },
  "BridgeConferenceResults": {
    "description": "Structure returned when invoking the bridge conference tax calculation APIs.",
    "type": "object",
    "properties": {
      "ParticipantResults": {
        "description": "Participant Taxes",
        "type": "array",
        "items": {
          "$ref": "#/definitions/BridgeConferenceParticipantResult"
        }
      },
      "Taxes": {
        "description": "Summarized Taxes for Bridge Conference",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxData"
        }
      }
    },
    "x-methods-used-in": [
      "ApiV1BridgeConferenceTaxesPost",
      "ApiV1BridgeConferenceAdjustmentsPost"
    ]
  },
  "BridgeConferenceParticipantResult": {
    "description": "Structure returned when invoking the bridge conference tax calculation APIs.",
    "type": "object",
    "properties": {
      "ParticipantRef": {
        "description": "Participant reference from request.",
        "type": "string"
      },
      "ErrorCode": {
        "format": "int32",
        "description": "Error code for participant tax calculation (as applicable).",
        "type": "integer"
      },
      "TransactionType": {
        "format": "int32",
        "description": "Transaction type used for participant.",
        "type": "integer"
      },
      "ServiceType": {
        "format": "int32",
        "description": "Service type used for participant.",
        "type": "integer"
      },
      "ParticipantTaxes": {
        "description": "List of objects that contain information about the taxes for an individual participant.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxData"
        }
      }
    },
    "x-methods-used-in": []
  },
  "TaxData": {
    "description": "",
    "type": "object",
    "properties": {
      "AdjustmentType": {
        "format": "int32",
        "description": "Adjustmnet type. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid adjustment types.",
        "type": "integer"
      },
      "Billable": {
        "description": "Indicates if the tax is billable to the customer.",
        "type": "boolean"
      },
      "CalculationType": {
        "format": "int32",
        "description": "Calculation type. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid calculation types.",
        "type": "integer"
      },
      "CategoryDescription": {
        "description": "Tax Category Description.",
        "type": "string"
      },
      "CategoryID": {
        "format": "int32",
        "description": "Tax category ID.",
        "type": "integer"
      },
      "CompanyIdentifier": {
        "description": "Customer identifier from transaction input.",
        "type": "string"
      },
      "Compliance": {
        "description": "Indicates if the tax is reportable to the jurisdiction.",
        "type": "boolean"
      },
      "CustomerNumber": {
        "description": "User-defined customer number.",
        "type": "string"
      },
      "Description": {
        "description": "Tax description.",
        "type": "string"
      },
      "ExemptionType": {
        "format": "int32",
        "description": "Exemption type from transaction input.",
        "type": "integer"
      },
      "ExemptSaleAmount": {
        "format": "double",
        "description": "Amount of the charge exempt from taxes.",
        "type": "number"
      },
      "InvoiceNumber": {
        "format": "int32",
        "description": "User-defined invoice number.",
        "type": "integer"
      },
      "Optional": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "OptionalAlpha1": {
        "description": "Optional user-defined string value.",
        "type": "string"
      },
      "Optional4": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional5": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional6": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional7": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional8": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional9": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional10": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "PCode": {
        "format": "int32",
        "description": "PCode for the reporting jurisdiction.",
        "type": "integer"
      },
      "Rate": {
        "format": "double",
        "description": "Tax rate.",
        "type": "number"
      },
      "RefundUncollect": {
        "format": "double",
        "description": "Taxable measure if tax is smaller than 0 (tax adjustments).",
        "type": "number"
      },
      "ServiceLevelNumber": {
        "format": "int32",
        "description": "User-defined service level number.",
        "type": "integer"
      },
      "Surcharge": {
        "description": "Indicates if tax is considered a surcharge.",
        "type": "boolean"
      },
      "TaxableMeasure": {
        "format": "double",
        "description": "Amount of sale subject to tax plus any taxed taxes.",
        "type": "number"
      },
      "TaxAmount": {
        "format": "double",
        "description": "Calculated tax amount.",
        "type": "number"
      },
      "TaxLevel": {
        "format": "int32",
        "description": "Tax level. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid tax levels.",
        "type": "integer"
      },
      "TaxType": {
        "format": "int32",
        "description": "Tax type. See the Telecom Mapping guidelines (\"TM_00505_AFC Telecom Mapping Guidelines.pdf\") for a list of valid tax types.",
        "type": "integer"
      },
      "Lines": {
        "format": "int32",
        "description": "Number of lines used to calculate the tax (for per-line tax calculations).",
        "type": "integer"
      },
      "Minutes": {
        "format": "double",
        "description": "Number of minutes used to calculate the tax (for per-minute tax calculations).",
        "type": "double float"
      },
      "OptionalFields": {
        "description": "User-defined list of optional alphanumeric fields.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/OptionalField"
        }
      },
      "TransCharge": {
        "format": "double",
        "description": "Transaction charge amount.",
        "type": "number"
      }
    },
    "x-methods-used-in": [
      "ApiV1CalculateTaxesPost",
      "ApiV1CalculateAdjustmentsPost",
      "ApiV1CalculateProRatedTaxesPost",
      "ApiV1CalculateProRatedAdjustmentsPost",
      "ApiV1CalculateWithOverridesTaxesPost",
      "ApiV1CalculateWithOverridesAdjustmentsPost"
    ]
  },
  "Transaction": {
    "description": "Transaction Wrapper Class",
    "required": [
      "CustomerType",
      "Sale",
      "TransactionType",
      "ServiceType",
      "Date",
      "Charge",
      "Incorporated"
    ],
    "type": "object",
    "properties": {
      "OriginationAddress": {
        "$ref": "#/definitions/ZipAddress",
        "description": "Origination address."
      },
      "OriginationFipsCode": {
        "description": "Origination FIPS code.",
        "type": "string"
      },
      "OriginationPCode": {
        "format": "int32",
        "description": "Origination PCode.",
        "type": "integer"
      },
      "OriginationNpaNxx": {
        "format": "int32",
        "description": "Origination NPANXX.",
        "type": "integer"
      },
      "TerminationAddress": {
        "$ref": "#/definitions/ZipAddress",
        "description": "Termination address."
      },
      "TerminationFipsCode": {
        "description": "Termination FIPS code.",
        "type": "string"
      },
      "TerminationPCode": {
        "format": "int32",
        "description": "Termination PCode.",
        "type": "integer"
      },
      "TerminationNpaNxx": {
        "format": "int32",
        "description": "Termination NPANXX.",
        "type": "integer"
      },
      "BillToAddress": {
        "$ref": "#/definitions/ZipAddress",
        "description": "Bill-to address."
      },
      "BillToFipsCode": {
        "description": "Bill-to FIPS code.",
        "type": "string"
      },
      "BillToPCode": {
        "format": "int32",
        "description": "Bill-to PCode.",
        "type": "integer"
      },
      "BillToNpaNxx": {
        "format": "int32",
        "description": "Bill-to NPANXX",
        "type": "integer"
      },
      "IsPrivateLine": {
        "description": "Indicates if the transaction is a private line transaction.",
        "type": "boolean"
      },
      "PrivateLineSplit": {
        "format": "double",
        "description": "For private line transactions, this is the split between the ending points of a private line. The value indicates how much the portion of the charge belongs to the origin user.",
        "type": "number"
      },
      "CustomerType": {
        "format": "int32",
        "description": "Customer type. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid customer types.",
        "type": "integer"
      },
      "BusinessClass": {
        "format": "int32",
        "description": "Business class. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid business classes.",
        "type": "integer"
      },
      "Sale": {
        "description": "Indicates if this is a retail sale. Use false for resale/wholesale transactions.",
        "type": "boolean"
      },
      "TransactionType": {
        "format": "int32",
        "description": "Transaction type.",
        "type": "integer"
      },
      "ServiceType": {
        "format": "int32",
        "description": "Service type.",
        "type": "integer"
      },
      "ServiceClass": {
        "format": "int32",
        "description": "Service class. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid Service Classes.",
        "type": "integer"
      },
      "Date": {
        "format": "date-time",
        "description": "Transaction date.  Field is provided to allow rating and taxing to occur on a date other than the billing date.",
        "type": "string"
      },
      "Charge": {
        "format": "double",
        "description": "Charge amount to customer for transaction",
        "type": "number"
      },
      "Incorporated": {
        "description": "True if this transaction is within an incorporated area of the local jurisdiction, otherwise False.",
        "type": "boolean"
      },
      "FederalExempt": {
        "description": "True if transaction is exempt from Federal Tax, otherwise false.",
        "type": "boolean"
      },
      "StateExempt": {
        "description": "True if transaction is exempt from State Tax, otherwise false.",
        "type": "boolean"
      },
      "CountyExempt": {
        "description": "True if transaction is exempt from County Tax, otherwise false.",
        "type": "boolean"
      },
      "LocalExempt": {
        "description": "True if transaction is exempt from Local Tax, otherwise false.",
        "type": "boolean"
      },
      "FederalPCode": {
        "format": "int32",
        "description": "Jurisdiction for Federal exemption.",
        "type": "integer"
      },
      "StatePCode": {
        "format": "int32",
        "description": "Jurisdiction for state exemption.",
        "type": "integer"
      },
      "CountyPCode": {
        "format": "int32",
        "description": "Jurisdiction for county exemption.",
        "type": "integer"
      },
      "LocalPCode": {
        "format": "int32",
        "description": "Jurisdiction for local exemption.",
        "type": "integer"
      },
      "Exemptions": {
        "description": "List of tax exemptions.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxExemption"
        }
      },
      "ExemptionType": {
        "format": "int32",
        "description": "Exemtion type. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid exemption types.",
        "type": "integer"
      },
      "InvoiceNumber": {
        "format": "int32",
        "description": "User-defined invoice number.",
        "type": "integer"
      },
      "Optional": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "CustomerNumber": {
        "description": "User-defined customer number.",
        "type": "string"
      },
      "CompanyIdentifier": {
        "description": "Company identifier. Use the 3-character company identifier provided by Avalara to your organization in order to include this transaction in the monthly compliance reports. Otherwise, leave empty.",
        "type": "string"
      },
      "OptionalAlpha1": {
        "description": "Optional user-defined string value. 20-characters max.",
        "type": "string"
      },
      "Optional4": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional5": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional6": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional7": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional8": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional9": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "Optional10": {
        "format": "int32",
        "description": "Optional user-defined value.",
        "type": "integer"
      },
      "AdjustmentMethod": {
        "format": "int32",
        "description": "Adjustment method. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid adjustment methods.",
        "type": "integer"
      },
      "Lines": {
        "format": "int32",
        "description": "Number of lines sold to customer when applicable.",
        "type": "integer"
      },
      "Locations": {
        "format": "int32",
        "description": "Number of customer locations.",
        "type": "integer"
      },
      "Minutes": {
        "format": "double",
        "description": "Number of minutes for call when appropriate.",
        "type": "double float"
      },
      "Debit": {
        "description": "Determines if this is a prepaid debit card transaction.",
        "type": "boolean"
      },
      "AdjustmentDiscount": {
        "format": "int32",
        "description": "Adjustment discount type. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid discount types.",
        "type": "integer"
      },
      "FacilitiesBased": {
        "description": "Specifies if the carrier delivering the service has company owned facilities to provide the service.",
        "type": "boolean"
      },
      "Franchise": {
        "description": "Indicates if the company provides services sold pursuant to a franchise agreement between the carrier and jurisdiction.",
        "type": "boolean"
      },
      "Lifeline": {
        "description": "Indicates if customer is a Lifeline participant.",
        "type": "boolean"
      },
      "Regulated": {
        "description": "True if regulated, otherwise false.",
        "type": "boolean"
      },
      "ServiceLevelNumber": {
        "format": "int32",
        "description": "User-defined service level number.",
        "type": "integer"
      },
      "Exclusions": {
        "description": "List of states for tax exclusions.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/Exclusion"
        }
      },
      "CategoryExemptions": {
        "description": "List of tax category exemptions.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/CategoryExemption"
        }
      },
      "OptionalFields": {
        "description": "User-defined list of optional alphanumeric fields.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/OptionalField"
        }
      },
      "TaxInclusive": {
        "description": "Indicates if the charge of this transaction is tax-inclusive (reverse tax calculation).",
        "type": "boolean"
      },
      "SafeHarborOverrides": {
        "description": "List of overrides for the USF safe harbor rate.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/SafeHarborOverride"
        }
      },
      "DocumentCode": {
        "description": "Document code.",
        "type": "string"
      },
      "Commit": {
        "description": "Indicates if the transaction should be committed as soon at it is processed.",
        "type": "boolean"
      }
    },
    "x-methods-used-in": [
      "ApiV1CalculateTaxesPost",
      "ApiV1CalculateAdjustmentsPost",
      "ApiV1CalculateReversalTaxesPost",
      "ApiV1CalculateReversalAdjustmentsPost",
      "ApiV1CalculateJurisdictionPost"
    ]
  },
  "SafeHarborOverride": {
    "description": "Data structure used to override the safe harbor rate for a USF tax type.",
    "type": "object",
    "properties": {
      "SafeHarborType": {
        "format": "int32",
        "description": "Safe harbor type (1 = Cellular, 2 = VoIP, 4 = Paging).",
        "type": "integer"
      },
      "OriginalFederalTam": {
        "format": "double",
        "description": "Original Federal TAM value to override.",
        "type": "number"
      },
      "NewFederalTam": {
        "format": "double",
        "description": "New TAM value that will replace the original TAM value.",
        "type": "number"
      }
    },
    "x-methods-used-in": []
  },
  "ProRatedTransaction": {
    "description": "Parameter for pro-rated tax calculation API.",
    "required": [
      "ProRatedPercent",
      "Transaction"
    ],
    "type": "object",
    "properties": {
      "ProRatedPercent": {
        "format": "double",
        "description": "Percentage to prorate specified as a decimal.",
        "type": "number"
      },
      "Transaction": {
        "$ref": "#/definitions/Transaction",
        "description": "Transaction data."
      }
    },
    "x-methods-used-in": [
      "ApiV1CalculateProRatedTaxesPost",
      "ApiV1CalculateProRatedAdjustmentsPost"
    ]
  },
  "ReverseTaxResults": {
    "description": "Structure returned when invoking the reverse tax calculation APIs.",
    "type": "object",
    "properties": {
      "BaseSaleAmount": {
        "format": "double",
        "description": "Base sale amount necessary to arrive at desired total tax.",
        "type": "number"
      },
      "Taxes": {
        "description": "Taxes generated for the transaction.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxData"
        }
      }
    },
    "x-methods-used-in": [
      "ApiV1CalculateReversalTaxesPost",
      "ApiV1CalculateReversalAdjustmentsPost"
    ]
  },
  "CalculateWithOverridesRequest": {
    "description": "Paremeter for the tax calculation with override APIs.",
    "required": [
      "Transaction",
      "Overrides"
    ],
    "type": "object",
    "properties": {
      "Transaction": {
        "$ref": "#/definitions/Transaction",
        "description": "Transaction data."
      },
      "Overrides": {
        "description": "List of tax rate overrides to be applied in tax calculations.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxRateOverrideInfo"
        }
      }
    },
    "x-methods-used-in": [
      "ApiV1CalculateWithOverridesTaxesPost",
      "ApiV1CalculateWithOverridesAdjustmentsPost"
    ]
  },
  "TaxRateOverrideInfo": {
    "description": "Tax Rate Override Info Class",
    "required": [
      "Pcode",
      "Scope",
      "TaxType",
      "TaxLevel",
      "LevelExemptible",
      "BracketInfo"
    ],
    "type": "object",
    "properties": {
      "Pcode": {
        "format": "int32",
        "description": "Jurisdiction PCode for this tax rate override.",
        "type": "integer"
      },
      "Scope": {
        "format": "int32",
        "description": "Scope for override. See the \"TM_00101_AFC User Manual_Telecom.pdf\" for valid values.",
        "type": "integer"
      },
      "TaxType": {
        "format": "int32",
        "description": "Tax type. See the Telecom Mapping guidelines (\"TM_00505_AFC Telecom Mapping Guidelines.pdf\") for a list of valid tax types.",
        "type": "integer"
      },
      "TaxLevel": {
        "format": "int32",
        "description": "Tax level. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid tax levels.",
        "type": "integer"
      },
      "LevelExemptible": {
        "description": "Indicates if the tax can be exempted using level exemptions.",
        "type": "boolean"
      },
      "BracketInfo": {
        "description": "Tax rate/bracket information.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxBracketInfo"
        }
      }
    },
    "x-methods-used-in": []
  },
  "TaxBracketInfo": {
    "description": "Tax Bracket Info",
    "required": [
      "Rate",
      "MaxBase"
    ],
    "type": "object",
    "properties": {
      "Rate": {
        "format": "double",
        "description": "Tax rate. Value cannot be negative. For rated taxes, value must be from 0 to 1. Otherwise, value may be larger.",
        "type": "number"
      },
      "MaxBase": {
        "format": "double",
        "description": "Maximum base that this rate applies to.",
        "type": "number"
      },
      "CountyOverrideTax": {
        "format": "double",
        "description": "For sales and use taxes only (tax types 1 and 49), overrides the rate for the tax at the county level.",
        "type": "number"
      },
      "StateOverrideTax": {
        "format": "double",
        "description": "For sales and use taxes only (tax types 1 and 49), overrides the rate for the tax at the state level.",
        "type": "number"
      },
      "StateOverrideOn": {
        "description": "For sales and use taxes only (tax types 1 and 49) indicates that this tax replaces the tax at the state level.",
        "type": "boolean"
      },
      "CountyOverrideOn": {
        "description": "For sales and use taxes only (tax types 1 and 49), indicates that this tax replaces the tax at the county level.",
        "type": "boolean"
      }
    },
    "x-methods-used-in": []
  },
  "CommitData": {
    "description": "Parameter for CommitTransactions API.",
    "type": "object",
    "properties": {
      "DocumentCode": {
        "description": "Document code.",
        "type": "string"
      },
      "Committed": {
        "description": "Indicates if transactions for the specified document code should be committed.",
        "type": "boolean"
      },
      "CustomerNumber": {
        "description": "Overrides value for CustomerNumber field in reports.",
        "type": "string"
      },
      "InvoiceNumber": {
        "format": "int32",
        "description": "Overrides value for InvoiceNumber field in reports.",
        "type": "integer"
      },
      "Optional": {
        "format": "int32",
        "description": "Overrides value for Optional field in reports.",
        "type": "integer"
      },
      "Optional4": {
        "format": "int32",
        "description": "Overrides value for Optional4 field in reports.",
        "type": "integer"
      },
      "Optional5": {
        "format": "int32",
        "description": "Overrides value for Optional5 field in reports.",
        "type": "integer"
      },
      "Optional6": {
        "format": "int32",
        "description": "Overrides value for Optional6 field in reports.",
        "type": "integer"
      },
      "Optional7": {
        "format": "int32",
        "description": "Overrides value for Optional7 field in reports.",
        "type": "integer"
      },
      "Optional8": {
        "format": "int32",
        "description": "Overrides value for Optional8 field in reports.",
        "type": "integer"
      },
      "Optional9": {
        "format": "int32",
        "description": "Overrides value for Optional9 field in reports.",
        "type": "integer"
      },
      "Optional10": {
        "format": "int32",
        "description": "Overrides value for Optional10 field in reports.",
        "type": "integer"
      },
      "OptionalAlpha1": {
        "description": "Overrides value for OptionalAlpha1 field in reports.",
        "type": "string"
      },
      "OptionalFields": {
        "description": "Overrides value for OptionalFields field in reports.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/OptionalField"
        }
      }
    },
    "x-methods-used-in": [
      "ApiV1CommitTransactionsPost"
    ]
  },
  "CustModeTransaction": {
    "description": "Parameter for the CustMode/CalcTaxes and CustMode/CalcAdj APIs.",
    "required": [
      "CustBatchID",
      "Transaction"
    ],
    "type": "object",
    "properties": {
      "CustBatchID": {
        "format": "int64",
        "description": "Customer batch identifier.",
        "type": "integer"
      },
      "Transaction": {
        "$ref": "#/definitions/Transaction",
        "description": "Transaction to include into the customer batch."
      }
    },
    "x-methods-used-in": [
      "ApiV1CustModeCalcTaxesPost",
      "ApiV1CustModeCalcAdjustmentsPost"
    ]
  },
  "ProcessBatchRequest": {
    "description": "Parameter for CustMode/ProcessBatch API.",
    "required": [
      "CustBatchId"
    ],
    "type": "object",
    "properties": {
      "CustBatchId": {
        "format": "int64",
        "description": "Identifier for customer batch to process.",
        "type": "integer"
      },
      "Exclusions": {
        "description": "List of states for tax exclusions.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/Exclusion"
        }
      },
      "ReturnDetail": {
        "description": "Indicates if the individual transaction taxes should be returned in the response.",
        "type": "boolean"
      },
      "DocumentCode": {
        "description": "Document code.",
        "type": "string"
      },
      "Commit": {
        "description": "Indicates if the transaction should be committed as soon at it is processed.",
        "type": "boolean"
      }
    },
    "x-methods-used-in": [
      "ApiV1CustModeProcessBatchPost"
    ]
  },
  "CustomerResults": {
    "description": "Data structure returned when processing transactions in customer mode.",
    "type": "object",
    "properties": {
      "Taxes": {
        "description": "Individual taxes for each transaction.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxData"
        }
      },
      "SummarizedTaxes": {
        "description": "Summarized taxes for customer batch.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/CustomerTaxData"
        }
      }
    },
    "x-methods-used-in": [
      "ApiV1CustModeProcessBatchPost",
      "ApiV1CustModeCalcTaxesInCustModePost"
    ]
  },
  "CustomerTaxData": {
    "description": "Customer taxes when using Customer Mode.",
    "type": "object",
    "properties": {
      "PCode": {
        "format": "int32",
        "description": "PCode for the reporting jurisdiction.",
        "type": "integer"
      },
      "TaxType": {
        "format": "int32",
        "description": "Tax type. See the Telecom Mapping guidelines (\"TM_00505_AFC Telecom Mapping Guidelines.pdf\") for a list of valid tax types.",
        "type": "integer"
      },
      "TaxLevel": {
        "format": "int32",
        "description": "Tax level. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid tax levels.",
        "type": "integer"
      },
      "CalculationType": {
        "format": "int32",
        "description": "Calculation type. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid calculation types.",
        "type": "integer"
      },
      "Rate": {
        "format": "double",
        "description": "Tax rate.",
        "type": "number"
      },
      "TaxAmount": {
        "format": "double",
        "description": "Tax amount.",
        "type": "number"
      },
      "ExemptSaleAmount": {
        "format": "double",
        "description": "Amount of the charge exempt from taxes.",
        "type": "number"
      },
      "Description": {
        "description": "Tax description.",
        "type": "string"
      },
      "Surcharge": {
        "format": "int32",
        "description": "Indicates if tax is considered a surcharge.",
        "type": "integer"
      },
      "MaxBase": {
        "format": "double",
        "description": "Max amount to which tax is applied.",
        "type": "number"
      },
      "MinBase": {
        "format": "double",
        "description": "Min amount to which tax is applied.",
        "type": "number"
      },
      "ExcessTax": {
        "format": "double",
        "description": "Rate for amount above max base.",
        "type": "number"
      },
      "TotalCharge": {
        "format": "double",
        "description": "Sum of charges for this customer.",
        "type": "number"
      },
      "CategoryID": {
        "format": "int32",
        "description": "Tax category ID.",
        "type": "integer"
      },
      "CategoryDescription": {
        "description": "Tax category description.",
        "type": "string"
      },
      "Lines": {
        "format": "int32",
        "description": "Number of lines used to calculate the tax (for per-line tax calculations).",
        "type": "integer"
      },
      "Minutes": {
        "format": "double",
        "description": "Number of minutes used to calculate the tax (for per-minute tax calculations).",
        "type": "double float"
      }
    },
    "x-methods-used-in": []
  },
  "CalcTaxesInCustModeRequest": {
    "description": "Parameter for CustMode/CalcTaxesInCustMode API.",
    "type": "object",
    "properties": {
      "Transactions": {
        "description": "List of transactions to process.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/Transaction"
        }
      },
      "Adjustments": {
        "description": "List of adjustments to process.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/Transaction"
        }
      },
      "Exclusions": {
        "description": "List of states for tax exclusions.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/Exclusion"
        }
      },
      "ReturnDetail": {
        "description": "Indicates if the individual transaction taxes should be returned in the response.",
        "type": "boolean"
      },
      "DocumentCode": {
        "description": "Document code.",
        "type": "string"
      },
      "Commit": {
        "description": "Indicates if the transaction should be committed as soon at it is processed.",
        "type": "boolean"
      }
    },
    "x-methods-used-in": [
      "ApiV1CustModeCalcTaxesInCustModePost"
    ]
  },
  "RequestPCodeDetail": {
    "description": "Request PCode Detail Class",
    "type": "object",
    "properties": {
      "FipsCode": {
        "description": "Fips code - leave null if other value is used.",
        "type": "string"
      },
      "NpaNxx": {
        "format": "int32",
        "description": "NPANXX - leave null if other value is used.",
        "type": "integer"
      },
      "ZipAddress": {
        "$ref": "#/definitions/ZipAddress",
        "description": "Zip Address - leave null if other value is used."
      }
    },
    "x-methods-used-in": [
      "ApiV1LocationPCodePost"
    ]
  },
  "AddressData": {
    "description": "Address Data",
    "type": "object",
    "properties": {
      "CountryISO": {
        "description": "Three-character country ISO code.",
        "type": "string"
      },
      "County": {
        "description": "County name.",
        "type": "string"
      },
      "Locality": {
        "description": "Locality name.",
        "type": "string"
      },
      "State": {
        "description": "Two-character state abbreviation.",
        "type": "string"
      },
      "TaxLevel": {
        "format": "int32",
        "description": "Tax level ID.",
        "type": "integer"
      },
      "ZipBegin": {
        "description": "Begin of Zip code range.",
        "type": "string"
      },
      "ZipEnd": {
        "description": "End of Zip code range.",
        "type": "string"
      },
      "ZipP4Begin": {
        "description": "Begin of Zip+4 code range.",
        "type": "string"
      },
      "ZipP4End": {
        "description": "End of Zip+4 code range.",
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "ApiV1LocationAddressByPCodeGet"
    ]
  },
  "TaxRateInfo": {
    "description": "Tax Rate Info Class",
    "required": [
      "TaxType",
      "TaxLevel",
      "RateHistory"
    ],
    "type": "object",
    "properties": {
      "TaxType": {
        "format": "int32",
        "description": "Tax type. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid tax types.",
        "type": "integer"
      },
      "TaxLevel": {
        "format": "int32",
        "description": "Tax level. See the \"TM_00116_AFC SaaS pro Telecom Developer Manual.pdf\" for a list of valid tax levels.",
        "type": "integer"
      },
      "RateHistory": {
        "description": "Tax rate history.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxRateHistory"
        }
      }
    },
    "x-methods-used-in": [
      "ApiV1TaxLookupTaxRatesByPCodeGet"
    ]
  },
  "TaxRateHistory": {
    "description": "Tax Rate History Class",
    "required": [
      "EffectiveDate",
      "BracketInfo"
    ],
    "type": "object",
    "properties": {
      "EffectiveDate": {
        "format": "date-time",
        "description": "Effective date for rate.",
        "type": "string"
      },
      "LevelExemptible": {
        "description": "Indicates if the tax can be exempted using level exemptions.",
        "type": "boolean"
      },
      "BracketInfo": {
        "description": "Tax rate/bracket information.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/TaxBracketInfo"
        }
      }
    },
    "x-methods-used-in": []
  },
  "ZipLookupRequest": {
    "description": "Location data used as input for searching jurisdiction matches.",
    "required": [
      "BestMatch",
      "JurisdictionDetails"
    ],
    "type": "object",
    "properties": {
      "CountryIso": {
        "description": "3-character country ISO code.",
        "type": "string"
      },
      "State": {
        "description": "2-character state abbreviation.",
        "type": "string"
      },
      "County": {
        "description": "County name.",
        "type": "string"
      },
      "City": {
        "description": "City name.",
        "type": "string"
      },
      "ZipCode": {
        "description": "5-digit zip code (full zip code for Canadian addresses).",
        "type": "string"
      },
      "BestMatch": {
        "description": "Flag indicating whether to return the best matches (true) or exact matches only (false).",
        "type": "boolean"
      },
      "JurisdictionDetails": {
        "description": "Indicates if the full jurisdiction details (country ISO, state, county, and city) should be returned in the results. Otherwise, only the PCode will be included in the response.",
        "type": "boolean"
      },
      "LimitResults": {
        "format": "int32",
        "description": "Maximum number of results to return.",
        "type": "integer"
      }
    },
    "x-methods-used-in": [
      "ApiV1LocationZipAddressLookupPost"
    ]
  },
  "ZipLookupResult": {
    "description": "Jurisdiction information returned when searching location matches.",
    "type": "object",
    "properties": {
      "LocationData": {
        "description": "List of location matches for the address being searched.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/LocationItem"
        }
      },
      "MatchType": {
        "description": "Indicates whether the matches returned are based on an \"Exact\" match or \"Best\" match.",
        "type": "string"
      }
    },
    "x-methods-used-in": [
      "ApiV1LocationZipAddressLookupPost"
    ]
  },
  "LocationItem": {
    "description": "Contains name and jurisdiction PCode information for a location.",
    "type": "object",
    "properties": {
      "CountryIso": {
        "description": "3-character country ISO code.",
        "type": "string"
      },
      "State": {
        "description": "2-character state abbreviation.",
        "type": "string"
      },
      "County": {
        "description": "County name.",
        "type": "string"
      },
      "Locality": {
        "description": "Locality name.",
        "type": "string"
      },
      "PCode": {
        "format": "int32",
        "description": "Jurisdiction PCode.",
        "type": "integer"
      }
    },
    "x-methods-used-in": []
  }
}